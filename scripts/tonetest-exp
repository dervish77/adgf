#!/usr/bin/expect
# tonetest-exp: 
#
# Uses System Debug Console to perform tone test
#
# Usage: tonetest-exp <ipaddr> <freq>
#       ipaddr         - IP Address of modules
#       freq           - tone frequency
#
# Type: expect
#
# 1.1   11/05/2005      BSL     Updated for use by Program Source
# 1.0	04/05/2001	BSL	Initial version.
#
##########################################################

# Initialize variables
set testresult "UNKNOWN"

set timeout10 10;		# Set timeout (10 sec)

set timeout3 3;			# Set timeout (3 sec)

set tcpport 7072;               # tcp port of system debug interface


# Get command line arguments
if {$argc != 2} {
	puts "Usage:  $argv0 <ipaddr> <freq>"
	exit
}

set ipaddr [lindex $argv 0];	# AC outlet port number 

set freq [lindex $argv 1];	# AC outlet port number 


set resultfile [open "~/var/tonetestexp-$ipaddr.log" "w"]

#******************TOP of LOOP***********************

spawn bash
expect "$"

send "telnet $ipaddr $tcpport \r"
expect {
	timeout10 {
		set testresult "FAIL"
		puts "\nTELNET to Terminal Server TIMED OUT\n"
	}
	"Connection refused" {
		set testresult "BUSY"
		puts "\nTCP port $tcpport is busy, try again in a few seconds."
	}
	"SysDbg>" {
		set testresult "ACTIVE"

		send "\r"
                expect {
                	timeout10 {
		                set testresult "FAIL"
	                	puts "\nModule is not running\n"
	                }
                	"SysDbg>" {
	         	        set testresult "PASS"
	                }
                }

		send "vic speaker 5\r"
                expect {
                	timeout10 {
		                set testresult "FAIL"
	                	puts "\nModule is not running\n"
	                }
                	"OK" {
	         	        set testresult "PASS"
	                }
                }
		send "vic tone on 0096 $freq\r"
                expect {
                	timeout10 {
		                set testresult "FAIL"
	                	puts "\nModule is not running\n"
	                }
                	"OK" {
	         	        set testresult "PASS"
	                }
                }
		send "vic tone off\r"
                expect {
                	timeout10 {
		                set testresult "FAIL"
	                	puts "\nModule is not running\n"
	                }
                	"OK" {
	         	        set testresult "PASS"
	                }
                }

		send "vic speaker 6\r"
                expect {
                	timeout10 {
		                set testresult "FAIL"
	                	puts "\nModule is not running\n"
	                }
                	"OK" {
	         	        set testresult "PASS"
	                }
                }
		send "vic tone on 0096 $freq\r"
                expect {
                	timeout10 {
		                set testresult "FAIL"
	                	puts "\nModule is not running\n"
	                }
                	"OK" {
	         	        set testresult "PASS"
	                }
                }
		send "vic tone off\r"
                expect {
                	timeout10 {
		                set testresult "FAIL"
	                	puts "\nModule is not running\n"
	                }
                	"OK" {
	         	        set testresult "PASS"
	                }
                }

		send "exit\r"
		expect {
			timeout3 {
		                set testresult "FAIL"
                                puts "\nSysDbg exit TIMED OUT\n"
			}
			"$" {

			}
		}

	}
}

send "exit\r"; # Exit ksh
close; # Close spawned process
wait;  # Wait for ksh to "exit"

#****************BOTTOM of LOOP**********************
puts $resultfile "tonetestexp $ipaddr - $testresult"
close $resultfile

exit

