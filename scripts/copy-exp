#!/usr/bin/expect
# copy-exp: 
#
# Verifies that a file copy works
#
# Usage: copy-exp <ipaddress> <srcpath> <destpath> <delay>
#	ipaddress 	- IP address of Integrity module
#       filepath        - source file path
#       destpath        - destination file path
#       delay           - wait delay for file copy
#
# Type: expect
#
# 1.1   11/05/2005      BSL     Updated for use by Program Source
# 1.0	04/05/2001	BSL	Initial version.
#
##########################################################

# Initialize variables
set tcpport 8081;               # tcp port of telnet shell

set testresult "UNKNOWN"

set timeout40 40;		# Set timeout (40 sec)
set timeout20 20;		# Set timeout (20 sec)
set timeout10 10;		# Set timeout (10 sec)
set timeout5 5;			# Set timeout (5 sec)
set timeout3 3;			# Set timeout (3 sec)

# Get command line arguments
if {$argc != 4} {
	puts "Usage:  $argv0 <ipaddress> <srcpath> <destpath> <delay>"
	exit
}

set ipaddr [lindex $argv 0];	# address of telnet shell 
set srcpath [lindex $argv 1];
set destpath [lindex $argv 2];
set delay [lindex $argv 3];

set resultfile [open "~/var/copyexp-$ipaddr.log" "w"]

#******************TOP of LOOP***********************

spawn bash
expect "$"

send "telnet $ipaddr $tcpport \r"
expect {
	timeout5 {
		set testresult "FAIL"
		puts "\nTELNET to Telnet Shell TIMED OUT\n"
	}
	"Connection refused" {
		set testresult "BUSY"
		puts "\nTELNET to Telnet Shell REFUSED"
	}
	">" {
		set testresult "ACTIVE"

		send "df\r"
                expect {
                	timeout5 {
		                set testresult "FAIL"
	                	puts "\nCDROM is NOT mounted\n"
	                }
                	"SecondaryMasterIDEDev" {
	         	        set testresult "PASS"
	        	        puts "\nCDROM is MOUNTED\n"
	                }
                }

                send "rm $destpath\r"
                expect ">"

		send "cp $srcpath $destpath\r"
                expect ">"

                sleep $delay

                send "ls -al $destpath\r"
                expect {
                	timeout5 {
		                set testresult "FAIL"
	                	puts "\nFile copy FAILED\n"
	                }
                	"test" {
	         	        set testresult "PASS"
	        	        puts "\nFile copy PASSED\n"
	                }
                }
        
                sleep 2

		send ""
		expect {
			timeout3 {
		                set testresult "FAIL"
                                puts "\nTelnet escape TIMED OUT\n"
			}
			"telnet>" {
		                send "quit\r"
	                	expect {
			                timeout3 {
		                                set testresult "FAIL"
                                                puts "\nQuit TIMED OUT\n"
			                }
			                "Connection closed" {
                                                puts "\nGoodbye\n"
			                }
		                }
			}
		}

	}
}

send "exit\r"; # Exit ksh
close; # Close spawned process
wait;  # Wait for ksh to "exit"

#****************BOTTOM of LOOP**********************
puts $resultfile "copyexp $ipaddr $srcpath $destpath - $testresult"
close $resultfile

exit

