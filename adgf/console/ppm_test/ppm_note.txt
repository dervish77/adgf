PPM file format note
--------------------

format is:

P6
max_x
max_y
max_pix_value
r00g00b00r10g10b10 ... rx0gx0bx0 ... rxygxybxy


Thus r00g00b00 are the color component values for pixel 0 at x = 0, y = 0,

	where 0 <= rxy <= max_pix_value.



A simple example:

P6
2
2
255
AAABBBCCCDDD



Example PPM writer function and PPM reader function:


/*  Note: raster must point to at least sizeof(COLOR_S_T) * maxx * maxy bytes. 
 */


/*  PPM_write	- Write out PPM formated image file
 *
 *  Parameters:
 *	fp	- pointer to input file
 *	raster	- pointer to raster array
 *	maxx	- pointer to size of image in X
 *	maxy	- pointer to size of image in Y
 *
 *  Returns:
 *	none
 */

typedef struct {
   unsigned char r;
   unsigned char g;
   unsigned char b;
} COLOR_S_T;


void
PPM_write(FILE *fp, COLOR_S_T *raster, int maxx, int maxy)
{
  int i;

   fprintf(fp, "P6\n");
   fprintf(fp, "%d\n", maxx);
   fprintf(fp, "%d\n", maxy);
   fprintf(fp, "255\n");		/* assume 8-bit color components */

   for (i = 0; i < maxx*maxy; i++)
   {
      fprintf(fp, "%c%c%c", (raster+x*maxy+y)->r, 
			(raster+x*maxy+y)->g, (raster+x*maxy+y)->b);
   }
}

/*  PPM_read	- Read in PPM formated image file
 *
 *		  Assumes raster points to a 2D array which can hold the
 *		  entire image.
 *
 *  Parameters:
 *	fp	- pointer to input file
 *	raster	- pointer to raster array
 *
 *  Returns:
 *	raster	- points to pixel data read in from file
 *	maxx	- pointer to size of image in X
 *	maxy	- pointer to size of image in Y
 *
 *	0	- if read of file was successful
 *	1	- else there was an error
 */

#define MAX_PIXEL_VALUE	255

int
PPM_read(FILE *fp, COLOR_S_T *raster, int *maxx, int *maxy)
{
   char id0, id1;
   int x, y;
   int X, Y;
   int max_pix_value;

   fscanf(fp, "%c%c\n", &id0, &id1);

   if (id0 == 'P' && id1 == '6')
   {
      fscanf(fp, "%d\n", &X);
      fscanf(fp, "%d\n", &Y);
      fscanf(fp, "%d\n", &max_pix_value);

      if (max_pix_value > MAX_PIXEL_VALUE)
      {
         return(1);
      }
      else
      {
         for (x = 0; x < X; x++)
         {
            for (y = 0; y < Y; y++)
            {
               fscanf(fp, "%c%c%c", 
			&(raster+x*Y+y)->r, 
			&(raster+x*Y+y)->g, 
			&(raster+x*Y+y)->b);
            }
         }

         *maxx = X;
         *maxy = Y;
      }
   }
   else
   {
       return(1);
   }

   return(0);
}
