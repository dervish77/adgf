; ZiLOG eZ80 ANSI C Compiler Release 2.06
; -alias -debug -intsrc -nomodsect -optsize -localcse
; -peephole -globalopt -nosdiopt -bitfieldsize=24 -charsize=8
; -doublesize=32 -floatsize=32 -intsize=24 -longsize=32
; -nofastcall -noregvar -nostkck -nooptlink -swap 
	FILE	".\CMDS.C"
	.assume ADL=1
.DEBUG "C"
	SEGMENT code
.BEGREC "NONAME0",6
.DEFINE "quot"
.VALUE 0
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "rem"
.VALUE 3
.CLASS 8
.TYPE 4
.ENDEF
.ENDREC "NONAME0"
.BEGREC "NONAME1",8
.DEFINE "quot"
.VALUE 0
.CLASS 8
.TYPE 5
.ENDEF
.DEFINE "rem"
.VALUE 4
.CLASS 8
.TYPE 5
.ENDEF
.ENDREC "NONAME1"
.BEGREC "header",6
.DEFINE "s"
.VALUE 0
.CLASS 11
.TAG "NONAME2"
.TYPE 8
.ENDEF
.DEFINE "x"
.VALUE 0
.CLASS 11
.TYPE 2
.ENDEF
.ENDREC "header"
.BEGREC "NONAME2",6
.DEFINE "ptr"
.VALUE 0
.CLASS 8
.TAG "header"
.TYPE 40
.ENDEF
.DEFINE "size"
.VALUE 3
.CLASS 8
.TYPE 14
.ENDEF
.ENDREC "NONAME2"
.BEGREC "map_s_t",140
.DEFINE "roomnum"
.VALUE 0
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "roomname"
.VALUE 2
.CLASS 8
.DIM 120
.TYPE 98
.ENDEF
.DEFINE "beenhere"
.VALUE 122
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "inside"
.VALUE 123
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "n"
.VALUE 124
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "s"
.VALUE 126
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "e"
.VALUE 128
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "w"
.VALUE 130
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "d"
.VALUE 132
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "u"
.VALUE 134
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "special"
.VALUE 136
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "object"
.VALUE 138
.CLASS 8
.TYPE 3
.ENDEF
.ENDREC "map_s_t"
.BEGREC "object_s_t",244
.DEFINE "objnum"
.VALUE 0
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "score"
.VALUE 2
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "key"
.VALUE 4
.CLASS 8
.DIM 40
.TYPE 98
.ENDEF
.DEFINE "prep"
.VALUE 44
.CLASS 8
.DIM 40
.TYPE 98
.ENDEF
.DEFINE "name"
.VALUE 84
.CLASS 8
.DIM 40
.TYPE 98
.ENDEF
.DEFINE "examine"
.VALUE 124
.CLASS 8
.DIM 120
.TYPE 98
.ENDEF
.ENDREC "object_s_t"
.BEGREC "special_s_t",124
.DEFINE "spnum"
.VALUE 0
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "score"
.VALUE 2
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "phrase"
.VALUE 4
.CLASS 8
.DIM 120
.TYPE 98
.ENDEF
.ENDREC "special_s_t"
.BEGREC "magic_s_t",168
.DEFINE "mgnum"
.VALUE 0
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "score"
.VALUE 2
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "fromroom"
.VALUE 4
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "toroom"
.VALUE 6
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "word"
.VALUE 8
.CLASS 8
.DIM 40
.TYPE 98
.ENDEF
.DEFINE "phrase"
.VALUE 48
.CLASS 8
.DIM 120
.TYPE 98
.ENDEF
.ENDREC "magic_s_t"
.BEGREC "rank_s_t",162
.DEFINE "rnum"
.VALUE 0
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "title"
.VALUE 2
.CLASS 8
.DIM 40
.TYPE 98
.ENDEF
.DEFINE "phrase"
.VALUE 42
.CLASS 8
.DIM 120
.TYPE 98
.ENDEF
.ENDREC "rank_s_t"
.BEGREC "verb_s_t",44
.DEFINE "vnum"
.VALUE 0
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "word"
.VALUE 2
.CLASS 8
.DIM 40
.TYPE 98
.ENDEF
.DEFINE "type"
.VALUE 42
.CLASS 8
.TYPE 3
.ENDEF
.ENDREC "verb_s_t"
.BEGREC "room_s_t",124
.DEFINE "roomnum"
.VALUE 0
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "linenum"
.VALUE 2
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "roomline"
.VALUE 4
.CLASS 8
.DIM 120
.TYPE 98
.ENDEF
.ENDREC "room_s_t"
.BEGREC "intro_s_t",122
.DEFINE "linenum"
.VALUE 0
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "introline"
.VALUE 2
.CLASS 8
.DIM 120
.TYPE 98
.ENDEF
.ENDREC "intro_s_t"
.BEGREC "inv_s_t",22
.DEFINE "count"
.VALUE 0
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "list"
.VALUE 2
.CLASS 8
.DIM 10
.TYPE 99
.ENDEF
.ENDREC "inv_s_t"
.BEGREC "chest_s_t",52
.DEFINE "count"
.VALUE 0
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "list"
.VALUE 2
.CLASS 8
.DIM 25
.TYPE 99
.ENDEF
.ENDREC "chest_s_t"
.BEGREC "cmd_s_t",46
.DEFINE "type"
.VALUE 0
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "length"
.VALUE 3
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "cmd"
.VALUE 6
.CLASS 8
.DIM 40
.TYPE 98
.ENDEF
.ENDREC "cmd_s_t"
.BEGREC "game_s_t",857
.DEFINE "play_game"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "suppress_instructions"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "adult_enabled"
.VALUE 2
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "adult_count"
.VALUE 3
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "debug_enabled"
.VALUE 6
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "verbose"
.VALUE 7
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "have_lamp"
.VALUE 8
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "lamp_is_on"
.VALUE 9
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "current_room"
.VALUE 10
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "score"
.VALUE 12
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "health"
.VALUE 15
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "moves"
.VALUE 18
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "oil"
.VALUE 21
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "load_game"
.VALUE 24
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "save_game"
.VALUE 25
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "game_loaded"
.VALUE 26
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "game_saved"
.VALUE 27
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "load_file_name"
.VALUE 28
.CLASS 8
.DIM 40
.TYPE 98
.ENDEF
.DEFINE "save_file_name"
.VALUE 68
.CLASS 8
.DIM 40
.TYPE 98
.ENDEF
.DEFINE "inventory"
.VALUE 108
.CLASS 8
.TAG "inv_s_t"
.TYPE 8
.ENDEF
.DEFINE "chest"
.VALUE 130
.CLASS 8
.TAG "chest_s_t"
.TYPE 8
.ENDEF
.DEFINE "cmdstring"
.VALUE 182
.CLASS 8
.DIM 120
.TYPE 98
.ENDEF
.DEFINE "argcount"
.VALUE 302
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "list"
.VALUE 305
.CLASS 8
.DIM 12
.TAG "cmd_s_t"
.TYPE 104
.ENDEF
.ENDREC "game_s_t"
;    1	/*****************************************************************************
;    2	 *
;    3	 *	Source code for handling commands.
;    4	 *
;    5	 *	File:	cmds.c
;    6	 *
;    7	 *	Author: Brian Lingard
;    8	 *
;    9	 *	Date:	12/04/96
;   10	 *
;   11	 *	Revs:
;   12	 *	  0.4	04/05/98  added proper new game function
;   13	 *	  0.0 	12/04/96  originated
;   14	 *
;   15	 *****************************************************************************/
;   16	
;   17	
;   18	#include <stdio.h>
;   19	#include <stdlib.h>
;   20	#include <string.h>
;   21	
;   22	#ifndef MAIN_H
;   23	#include "main.h"
;   24	#endif
;   25	
;   26	
;   27	
;   28	
;   29	/*
;   30	 *  GLOBALS
;   31	 */
;   32	extern void LoadGame(GAME_S_T *game);
;   33	extern void SaveGame(GAME_S_T *game);
;   34	extern void InitGame(GAME_S_T *game);
;   35	extern void DescribeRoom(GAME_S_T *game);
;   36	extern void DescribeSpecial(GAME_S_T *game);
;   37	extern void DescribeObject(GAME_S_T *game);
;   38	extern void PlayerDied(GAME_S_T *game);
;   39	extern BOOLEAN_T CheckLamp(GAME_S_T *game);
;   40	extern void DisplayTitle(void);
;   41	extern BOOLEAN_T HaveObject(GAME_S_T *game, INDEX_T obj, INDEX_T *index);
;   42	extern void HandleDebug(GAME_S_T *game);
;   43	
;   44	extern void ShowScore(GAME_S_T *game);
;   45	
;   46	
;   47	/* HandleHelp() - show help text
;   48	 *
;   49	 */
;   50	void HandleHelp()
;   51	{
_HandleHelp:
.DEFINE "_HandleHelp"

.VALUE _HandleHelp

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "HandleHelp",51,"_HandleHelp"

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;   52	   printf("\nHelpful commands:\n");
	LD	BC,L__0
	PUSH	BC
.LINE 52

	CALL	_printf
	POP	BC
;   53	
;   54	   printf("  quit                  - quit game\n");
	LD	BC,L__1
	PUSH	BC
.LINE 54

	CALL	_printf
	POP	BC
;   55	   printf("  help                  - show command help\n");
	LD	BC,L__2
	PUSH	BC
.LINE 55

	CALL	_printf
	POP	BC
;   56	   printf("  inv                   - list inventory\n");
	LD	BC,L__3
	PUSH	BC
.LINE 56

	CALL	_printf
	POP	BC
;   57	   printf("  look                  - repeat room description\n");
	LD	BC,L__4
	PUSH	BC
.LINE 57

	CALL	_printf
	POP	BC
;   58	   printf("  brief                 - toggle to brief mode\n");
	LD	BC,L__5
	PUSH	BC
.LINE 58

	CALL	_printf
	POP	BC
;   59	   printf("  verbose               - toggle to verbose mode\n");
	LD	BC,L__6
	PUSH	BC
.LINE 59

	CALL	_printf
	POP	BC
;   60	   printf("  load                  - load saved game\n");
	LD	BC,L__7
	PUSH	BC
.LINE 60

	CALL	_printf
	POP	BC
;   61	   printf("  save                  - save current game\n");
	LD	BC,L__8
	PUSH	BC
.LINE 61

	CALL	_printf
	POP	BC
;   62	   printf("  diagnose              - show health status\n");
	LD	BC,L__9
	PUSH	BC
.LINE 62

	CALL	_printf
	POP	BC
;   63	   printf("  n,s,e,w,u,d           - travel directions\n");
	LD	BC,L__10
	PUSH	BC
.LINE 63

	CALL	_printf
	POP	BC
;   64	   
;   65	   printf("\nOther verbs:\n");
	LD	BC,L__11
	PUSH	BC
.LINE 65

	CALL	_printf
	POP	BC
;   66	
;   67	   printf("  take, drop, enter, exit, open, read, examine, on, off\n");
	LD	BC,L__12
	PUSH	BC
.LINE 67

	CALL	_printf
	POP	BC
;   68	
;   69	   printf("\n");
	LD	BC,L__13
	PUSH	BC
.LINE 69

	CALL	_printf
	POP	BC
;   70	}
.LINE 70

	LD	SP,IX
	POP	IX
	RET	


;**************************** _HandleHelp ***************************
;Name                         Addr/Register   Size   Type
;_printf                             IMPORT  -----   function


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "HandleHelp",70,"_HandleHelp"
	SEGMENT STRSECT
L__0:
	DB	10
	DB	"Helpful commands:"
	DB	10,0
L__1:
	DB	"  quit                  - quit game"
	DB	10,0
L__2:
	DB	"  help                  - show command help"
	DB	10,0
L__3:
	DB	"  inv                   - list inventory"
	DB	10,0
L__4:
	DB	"  look                  - repeat room description"
	DB	10,0
L__5:
	DB	"  brief                 - toggle to brief mode"
	DB	10,0
L__6:
	DB	"  verbose               - toggle to verbose mode"
	DB	10,0
L__7:
	DB	"  load                  - load saved game"
	DB	10,0
L__8:
	DB	"  save                  - save current game"
	DB	10,0
L__9:
	DB	"  diagnose              - show health status"
	DB	10,0
L__10:
	DB	"  n,s,e,w,u,d           - travel directions"
	DB	10,0
L__11:
	DB	10
	DB	"Other verbs:"
	DB	10,0
L__12:
	DB	"  take, drop, enter, exit, open, read, examine, on, off"
	DB	10,0
L__13:
	DB	10,0
	SEGMENT code
;   71	
;   72	
;   73	/* HandleInventory() - show inventory
;   74	 *
;   75	 */
;   76	void HandleInventory(GAME_S_T *game)
;   77	{
_HandleInventory:
.DEFINE "_HandleInventory"

.VALUE _HandleInventory

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "HandleInventory",77,"_HandleInventory"

.LINE 77

.DEFINE "game"

.CLASS 65

.VALUE 6

.TAG "game_s_t"

.TYPE 40

.ENDEF

.DEFINE "i"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
;   78	   int i;
;   79	
;   80	   printf("\nYou are carrying");
	LD	BC,L__15
	PUSH	BC
.LINE 80

	CALL	_printf
	POP	BC
;   81	
;   82	   if (game->inventory.count == 0)
.LINE 82

	LD	IY,(IX+6)
	LD	BC,(IY+108)
	CALL	__stoi
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_6
;   83	   {
;   84	      printf(" nothing.\n");
	LD	BC,L__17
	PUSH	BC
.LINE 84

	CALL	_printf
	POP	BC
;   85	   }
;   86	   else
.LINE 86

	JMP	L_7
L_6:
;   87	   {
;   88	      printf(":\n");
	LD	BC,L__18
	PUSH	BC
.LINE 88

	CALL	_printf
	POP	BC
	LD	BC,0
	LD	(IX+-3),BC
;   89	      for (i = 0; i < game->inventory.count; i++)
.LINE 89

	JMP	L_4
L_2:
;   90	      {
;   91	         printf("   %s\n", object[game->inventory.list[i]].name);
	LD	HL,(IX+-3)
	ADD	HL,HL
	LD	BC,HL
.LINE 91

	LD	DE,(IX+6)
	LD	HL,110
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,(HL)
	CALL	__stoi
	LD	BC,HL
	LD	HL,244
	CALL	__imuls
	LD	BC,_object
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+84
	LD	BC,L__19
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;   92	      }
L_4:
.LINE 92

	LD	IY,(IX+6)
	LD	BC,(IY+108)
	CALL	__stoi
	LD	BC,HL
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L_2
	JMP	L_7
;   93	   }
;   94	}
L_7:
.LINE 94

	LD	SP,IX
	POP	IX
	RET	


;**************************** _HandleInventory ***************************
;Name                         Addr/Register   Size   Type
;_object                             IMPORT    244   variable
;_printf                             IMPORT  -----   function
;i                                     IX-3      3   variable
;game                                  IX+6      3   parameter


; Stack Frame Size: 12 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "HandleInventory",94,"_HandleInventory"
	SEGMENT STRSECT
L__15:
	DB	10
	DB	"You are carrying"
	DB	0
L__17:
	DB	" nothing."
	DB	10,0
L__18:
	DB	":"
	DB	10,0
L__19:
	DB	"   %s"
	DB	10,0
	SEGMENT code
;   95	
;   96	
;   97	/* HandleLoad() - handle load game
;   98	 *
;   99	 */
;  100	void HandleLoad(GAME_S_T *game)
;  101	{
_HandleLoad:
.DEFINE "_HandleLoad"

.VALUE _HandleLoad

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "HandleLoad",101,"_HandleLoad"

.LINE 101

.DEFINE "game"

.CLASS 65

.VALUE 6

.TAG "game_s_t"

.TYPE 40

.ENDEF

;  102	#if 0
;  103	   strcpy( game->load_file_name, "thuria.sav" );
;  104	   game->load_file_fp = fopen(game->load_file_name, "r");
;  105	
;  106	   if (game->load_file_fp == (FILE *)NULL)
;  107	   {
;  108	      printf(stder"Couldn't open %s as input\n", game->load_file_name);
;  109	   }
;  110	   else
;  111	   {
;  112	      printf("\nLoading saved game ... ");
;  113	      LoadGame( game );
;  114	      printf("done.\n");
;  115	      fclose( game->load_file_fp );
;  116	   }
;  117	#endif
;  118	}
.LINE 118

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LD	SP,IX
	POP	IX
	RET	


;**************************** _HandleLoad ***************************
;Name                         Addr/Register   Size   Type
;game                                  IX+6      3   parameter


; Stack Frame Size: 9 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "HandleLoad",118,"_HandleLoad"
;  119	
;  120	
;  121	/* HandleSave() - handle save game
;  122	 *
;  123	 */
;  124	void HandleSave(GAME_S_T *game)
;  125	{
_HandleSave:
.DEFINE "_HandleSave"

.VALUE _HandleSave

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "HandleSave",125,"_HandleSave"

.LINE 125

.DEFINE "game"

.CLASS 65

.VALUE 6

.TAG "game_s_t"

.TYPE 40

.ENDEF

;  126	#if 0
;  127	   strcpy( game->save_file_name, "thuria.sav" );
;  128	   game->save_file_fp = fopen(game->save_file_name, "w");
;  129	
;  130	   if (game->save_file_fp == (FILE *)NULL)
;  131	   {
;  132	      fprintf(stderr, "Couldn't open %s as output\n", game->save_file_name);
;  133	   }
;  134	   else
;  135	   {
;  136	      printf("\nSaving current game ... ");
;  137	      SaveGame( game );
;  138	      printf("done.\n");
;  139	      fclose( game->save_file_fp );
;  140	   }
;  141	#endif
;  142	}
.LINE 142

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LD	SP,IX
	POP	IX
	RET	


;**************************** _HandleSave ***************************
;Name                         Addr/Register   Size   Type
;game                                  IX+6      3   parameter


; Stack Frame Size: 9 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "HandleSave",142,"_HandleSave"
;  143	
;  144	
;  145	/* HandleNew() - handle new game
;  146	 *
;  147	 */
;  148	void HandleNew(GAME_S_T *game)
;  149	{
_HandleNew:
.DEFINE "_HandleNew"

.VALUE _HandleNew

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "HandleNew",149,"_HandleNew"

.LINE 149

.DEFINE "game"

.CLASS 65

.VALUE 6

.TAG "game_s_t"

.TYPE 40

.ENDEF

.DEFINE "result"

.CLASS 65

.VALUE -40

.DIM 40

.TYPE 98

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	IY,IX+-40
	LD	SP,IY
;  150	   SHORT_BUFFER_T result;
;  151	
;  152	   printf("\nStarting new game.  Are you sure (y/n)? ");
	LD	BC,L__24
	PUSH	BC
.LINE 152

	CALL	_printf
	POP	BC
;  153	
;  154	   gets( result );
	PEA	IX+-40
.LINE 154

	CALL	_gets
	POP	BC
;  155	
;  156	   if ( result[0] == 'y' || result[0] == 'Y' )
.LINE 156

	LD	A,(IX+-40)
	SEXT	HL
	LD	L,(IX+-40)
	LD	BC,121
	OR	A,A
	SBC	HL,BC
	JR	Z,L_12
	LD	A,(IX+-40)
	SEXT	HL
	LD	L,(IX+-40)
	LD	BC,89
	OR	A,A
	SBC	HL,BC
	JR	Z,L_12
	JMP	L_12
;  157	   {  
;  158	#if 0
;  159	      printf("\nOkay...\n\n");
;  160	      strcpy( game->load_file_name, "init.sav" );
;  161	      game->load_file_fp = fopen(game->load_file_name, "r");
;  162	
;  163	      if (game->load_file_fp == (FILE *)NULL)
;  164	      {
;  165	         fprintf(stderr, "Couldn't open %s as input\n", game->load_file_name);
;  166	      }
;  167	      else
;  168	      {
;  169	         LoadGame( game );
;  170	         fclose( game->load_file_fp );
;  171	      }
;  172	#endif
;  173	   }
;  174	}
L_12:
.LINE 174

	LD	SP,IX
	POP	IX
	RET	


;**************************** _HandleNew ***************************
;Name                         Addr/Register   Size   Type
;_gets                               IMPORT  -----   function
;_printf                             IMPORT  -----   function
;result                               IX-40     40   variable
;game                                  IX+6      3   parameter


; Stack Frame Size: 49 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "HandleNew",174,"_HandleNew"
	SEGMENT STRSECT
L__24:
	DB	10
	DB	"Starting new game.  Are you sure (y/n)? "
	DB	0
	SEGMENT code
;  175	
;  176	
;  177	/* HandleMagic() - handle magic words
;  178	 *
;  179	 */
;  180	BOOLEAN_T HandleMagic(GAME_S_T *game)
;  181	{
_HandleMagic:
.DEFINE "_HandleMagic"

.VALUE _HandleMagic

.CLASS 2

.TYPE 76

.ENDEF

.BEGFUNC "HandleMagic",181,"_HandleMagic"

.LINE 181

.DEFINE "game"

.CLASS 65

.VALUE 6

.TAG "game_s_t"

.TYPE 40

.ENDEF

.DEFINE "i"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

.DEFINE "mg"

.CLASS 65

.VALUE -6

.TYPE 4

.ENDEF

.DEFINE "cr"

.CLASS 65

.VALUE -8

.TYPE 3

.ENDEF

.DEFINE "found"

.CLASS 65

.VALUE -9

.TYPE 12

.ENDEF

;  182	   BOOLEAN_T found = FALSE;
.LINE 182

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	IY,IX+-15
	LD	SP,IY
	LD	B,0
	LD	(IX+-9),B
;  183	   int i = 0, mg = 0;
.LINE 183

	LD	BC,0
	LD	(IX+-6),BC
;  184	   INDEX_T cr;
;  185	
;  186	   cr = game->current_room;
.LINE 186

	LD	IY,(IX+6)
	LD	BC,(IY+10)
	LD	(IX+-8),C
	LD	(IX+-7),B
;  187	
;  188	   i = 0;
.LINE 188

	LD	BC,0
	LD	(IX+-3),BC
;  189	   while ( magic[i].mgnum > MG_NULL )
.LINE 189

	JMP	L_16
L_17:
;  190	   {
;  191	      if ( strcmp( magic[i].word, game->list[0].cmd ) == 0 )
.LINE 191

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,(IX+-3)
	LD	HL,168
	CALL	__imuls
	LD	BC,_magic
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+8
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_15
;  192	      {
;  193	         mg = i;
.LINE 193

	LD	BC,(IX+-3)
	LD	(IX+-6),BC
;  194	         found = TRUE;
.LINE 194

	LD	A,1
	LD	(IX+-9),A
;  195	         break;
.LINE 195

	JMP	L_25
;  196	      }
L_15:
.LINE 196

;  197	      i++;
.LINE 197

	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  198	   }
L_16:
.LINE 198

	LD	BC,(IX+-3)
	LD	HL,168
	CALL	__imuls
	LD	BC,_magic
	ADD	HL,BC
	LD	BC,(HL)
	CALL	__stoi
	LD	BC,HL
	LD	HL,16777215
	OR	A,A
	SBC	HL,BC
	JP	M,L_17
L_25:
;  199	   
;  200	   if (found)
.LINE 200

	LD	A,(IX+-9)
	OR	A,A
	JR	Z,L_27
;  201	   {
;  202	      if ( mg == MG_XYZZY )
.LINE 202

	LD	BC,0
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_23
;  203	      {
;  204	         printf("\n%s\n", magic[mg].phrase);
.LINE 204

	LD	BC,(IX+-6)
	LD	HL,168
	CALL	__imuls
	LD	BC,_magic
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+48
	LD	BC,L__32
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
;  205	         game->score += magic[mg].score;
	LD	BC,(IX+-6)
	LD	HL,168
	CALL	__imuls
	LD	BC,_magic
	ADD	HL,BC
	LD	IY,HL
	LD	BC,(IY+2)
	CALL	__stoi
	LD	BC,(IX+6)
.LINE 205

	LD	IY,(IX+6)
	LD	DE,(IY+12)
	ADD	HL,DE
	LD	IY,BC
	LD	(IY+12),HL
;  206	      }
;  207	      else if ( cr == magic[mg].fromroom )
.LINE 207

	JMP	L_27
L_23:
	LD	BC,(IX+-6)
	LD	HL,168
	CALL	__imuls
	LD	BC,_magic
	ADD	HL,BC
	LD	IY,HL
	LD	BC,(IY+4)
	LD	HL,(IX+-8)
	OR	A,A
	SBC.SIS	HL,BC
	JR	NZ,L_21
;  208	      {
;  209	         printf("\n%s\n", magic[mg].phrase);
.LINE 209

	LD	BC,(IX+-6)
	LD	HL,168
	CALL	__imuls
	LD	BC,_magic
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+48
	LD	BC,L__34
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
;  210	         game->score += magic[mg].score;
.LINE 210

	LD	BC,(IX+-6)
	LD	HL,168
	CALL	__imuls
	LD	(IX+-12),HL
	LD	HL,(IX+-12)
	LD	BC,_magic
	ADD	HL,BC
	LD	IY,HL
	LD	BC,(IY+2)
	CALL	__stoi
	LD	IY,(IX+6)
	LD	BC,(IX+6)
	LD	DE,(IY+12)
	ADD	HL,DE
	LD	IY,BC
	LD	(IY+12),HL
;  211	         game->current_room = magic[mg].toroom;
	LD	BC,(IX+6)
.LINE 211

	LD	HL,(IX+-12)
	LD	DE,_magic
	ADD	HL,DE
	LD	IY,HL
	LEA	HL,IY+6
	LD	IY,BC
	LD	BC,(HL)
	LD	(IY+10),C
	LD	(IY+11),B
;  212	      }
;  213	      else if ( cr == magic[mg].toroom )
.LINE 213

	JMP	L_27
L_21:
	LD	BC,(IX+-6)
	LD	HL,168
	CALL	__imuls
	LD	BC,_magic
	ADD	HL,BC
	LD	IY,HL
	LD	BC,(IY+6)
	LD	HL,(IX+-8)
	OR	A,A
	SBC.SIS	HL,BC
	JR	NZ,L_19
;  214	      {
;  215	         printf("\n%s\n", magic[mg].phrase);
.LINE 215

	LD	BC,(IX+-6)
	LD	HL,168
	CALL	__imuls
	LD	BC,_magic
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+48
	LD	BC,L__36
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
;  216	         game->score += magic[mg].score;
.LINE 216

	LD	BC,(IX+-6)
	LD	HL,168
	CALL	__imuls
	LD	(IX+-15),HL
	LD	HL,(IX+-15)
	LD	BC,_magic
	ADD	HL,BC
	LD	IY,HL
	LD	BC,(IY+2)
	CALL	__stoi
	LD	IY,(IX+6)
	LD	DE,(IX+6)
	LD	BC,(IY+12)
	ADD	HL,BC
	LD	IY,DE
	LD	(IY+12),HL
;  217	         game->current_room = magic[mg].fromroom;
	LD	DE,(IX+6)
.LINE 217

	LD	HL,(IX+-15)
	LD	BC,_magic
	ADD	HL,BC
	LD	IY,HL
	LEA	HL,IY+4
	LD	IY,DE
	LD	BC,(HL)
	LD	(IY+10),C
	LD	(IY+11),B
;  218	      }
;  219	      else
.LINE 219

	JMP	L_27
L_19:
;  220	      {
;  221	         printf("\nApparently, you are in the wrong room.\n");
	LD	BC,L__37
	PUSH	BC
.LINE 221

	CALL	_printf
	POP	BC
;  222	      }
;  223	   }
L_27:
.LINE 223

;  224	
;  225	   if ( cr != game->current_room ) printf("\n");
.LINE 225

	LD	IY,(IX+6)
	LD	BC,(IY+10)
	LD	HL,(IX+-8)
	OR	A,A
	SBC.SIS	HL,BC
	JR	Z,L_28
	LD	BC,L__39
	PUSH	BC
	CALL	_printf
	POP	BC
L_28:
;  226	
;  227	   return(found);
.LINE 227

	LD	A,(IX+-9)
;  228	}
.LINE 228

	LD	SP,IX
	POP	IX
	RET	


;**************************** _HandleMagic ***************************
;Name                         Addr/Register   Size   Type
;_printf                             IMPORT  -----   function
;_magic                              IMPORT    168   variable
;_strcmp                             IMPORT  -----   function
;found                                 IX-9      1   variable
;cr                                    IX-8      2   variable
;mg                                    IX-6      3   variable
;i                                     IX-3      3   variable
;game                                  IX+6      3   parameter


; Stack Frame Size: 24 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "HandleMagic",228,"_HandleMagic"
	SEGMENT STRSECT
L__32:
	DB	10
	DB	"%s"
	DB	10,0
L__34:
	DB	10
	DB	"%s"
	DB	10,0
L__36:
	DB	10
	DB	"%s"
	DB	10,0
L__37:
	DB	10
	DB	"Apparently, you are in the wrong room."
	DB	10,0
L__39:
	DB	10,0
	SEGMENT code
;  229	
;  230	
;  231	/* HandleLook() - handle look command
;  232	 *
;  233	 */
;  234	void HandleLook(GAME_S_T *game)
;  235	{
_HandleLook:
.DEFINE "_HandleLook"

.VALUE _HandleLook

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "HandleLook",235,"_HandleLook"

.LINE 235

.DEFINE "game"

.CLASS 65

.VALUE 6

.TAG "game_s_t"

.TYPE 40

.ENDEF

;  236	   printf("%s\n", map[game->current_room].roomname);
.LINE 236

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LD	IY,(IX+6)
	LD	BC,(IY+10)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+2
	LD	BC,L__41
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
;  237	   DescribeRoom(game);
	LD	BC,(IX+6)
	PUSH	BC
.LINE 237

	CALL	_DescribeRoom
	POP	BC
;  238	   DescribeSpecial(game);
	LD	BC,(IX+6)
	PUSH	BC
.LINE 238

	CALL	_DescribeSpecial
	POP	BC
;  239	   DescribeObject(game);
	LD	BC,(IX+6)
	PUSH	BC
.LINE 239

	CALL	_DescribeObject
	POP	BC
;  240	}
.LINE 240

	LD	SP,IX
	POP	IX
	RET	


;**************************** _HandleLook ***************************
;Name                         Addr/Register   Size   Type
;_DescribeObject                     IMPORT  -----   function
;_DescribeSpecial                    IMPORT  -----   function
;_DescribeRoom                       IMPORT  -----   function
;_map                                IMPORT    140   variable
;_printf                             IMPORT  -----   function
;game                                  IX+6      3   parameter


; Stack Frame Size: 9 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "HandleLook",240,"_HandleLook"
	SEGMENT STRSECT
L__41:
	DB	"%s"
	DB	10,0
	SEGMENT code
;  241	
;  242	
;  243	/* HandleOn() - handle (lamp) on command
;  244	 *
;  245	 */
;  246	void HandleOn(GAME_S_T *game)
;  247	{
_HandleOn:
.DEFINE "_HandleOn"

.VALUE _HandleOn

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "HandleOn",247,"_HandleOn"

.LINE 247

.DEFINE "game"

.CLASS 65

.VALUE 6

.TAG "game_s_t"

.TYPE 40

.ENDEF

;  248	   if (game->have_lamp && !game->lamp_is_on )
.LINE 248

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LD	IY,(IX+6)
	LD	A,(IY+8)
	OR	A,A
	JR	Z,L_38
	LD	IY,(IX+6)
	LD	A,(IY+9)
	OR	A,A
	JR	NZ,L_38
;  249	   {
;  250	      if (game->oil > 0)
.LINE 250

	LD	IY,(IX+6)
	LD	BC,(IY+21)
	LD	HL,0
	OR	A,A
	SBC	HL,BC
	JP	P,L_33
;  251	      {
;  252	         game->lamp_is_on = TRUE;
.LINE 252

	LD	IY,(IX+6)
	LD	A,1
	LD	(IY+9),A
;  253	         printf("\nThe lamp is now on.\n");
	LD	BC,L__46
	PUSH	BC
.LINE 253

	CALL	_printf
	POP	BC
;  254	      }
;  255	      else
.LINE 255

	JMP	L_39
L_33:
;  256	      {
;  257	         printf("\nYour lamp has no more oil.\n");
	LD	BC,L__47
	PUSH	BC
.LINE 257

	CALL	_printf
	POP	BC
;  258	      }
;  259	   }
;  260	   else if (game->have_lamp && game->lamp_is_on)
.LINE 260

	JMP	L_39
L_38:
	LD	IY,(IX+6)
	LD	A,(IY+8)
	OR	A,A
	JR	Z,L_36
	LD	IY,(IX+6)
	LD	A,(IY+9)
	OR	A,A
	JR	Z,L_36
;  261	   {
;  262	      printf("\nThe lamp is already on.\n");
	LD	BC,L__50
	PUSH	BC
.LINE 262

	CALL	_printf
	POP	BC
;  263	   }
;  264	   else
.LINE 264

	JMP	L_39
L_36:
;  265	   {
;  266	      printf("\nYou don't have the lamp!\n");
	LD	BC,L__51
	PUSH	BC
.LINE 266

	CALL	_printf
	POP	BC
;  267	   }
;  268	}
L_39:
.LINE 268

	LD	SP,IX
	POP	IX
	RET	


;**************************** _HandleOn ***************************
;Name                         Addr/Register   Size   Type
;_printf                             IMPORT  -----   function
;game                                  IX+6      3   parameter


; Stack Frame Size: 9 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "HandleOn",268,"_HandleOn"
	SEGMENT STRSECT
L__46:
	DB	10
	DB	"The lamp is now on."
	DB	10,0
L__47:
	DB	10
	DB	"Your lamp has no more oil."
	DB	10,0
L__50:
	DB	10
	DB	"The lamp is already on."
	DB	10,0
L__51:
	DB	10
	DB	"You don't have the lamp!"
	DB	10,0
	SEGMENT code
;  269	
;  270	
;  271	/* HandleOff() - handle (lamp) off command
;  272	 *
;  273	 */
;  274	void HandleOff(GAME_S_T *game)
;  275	{
_HandleOff:
.DEFINE "_HandleOff"

.VALUE _HandleOff

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "HandleOff",275,"_HandleOff"

.LINE 275

.DEFINE "game"

.CLASS 65

.VALUE 6

.TAG "game_s_t"

.TYPE 40

.ENDEF

;  276	   if (game->have_lamp && game->lamp_is_on)
.LINE 276

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LD	IY,(IX+6)
	LD	A,(IY+8)
	OR	A,A
	JR	Z,L_45
	LD	IY,(IX+6)
	LD	A,(IY+9)
	OR	A,A
	JR	Z,L_45
;  277	   {
;  278	      game->lamp_is_on = FALSE;
.LINE 278

	LD	IY,(IX+6)
	XOR	A,A
	LD	(IY+9),A
;  279	      printf("\nThe lamp is now off.\n");
	LD	BC,L__55
	PUSH	BC
.LINE 279

	CALL	_printf
	POP	BC
;  280	   }
;  281	   else if (game->have_lamp && !game->lamp_is_on)
.LINE 281

	JMP	L_46
L_45:
	LD	IY,(IX+6)
	LD	A,(IY+8)
	OR	A,A
	JR	Z,L_43
	LD	IY,(IX+6)
	LD	A,(IY+9)
	OR	A,A
	JR	NZ,L_43
;  282	   {
;  283	      printf("\nThe lamp is already off.\n");
	LD	BC,L__58
	PUSH	BC
.LINE 283

	CALL	_printf
	POP	BC
;  284	   }
;  285	   else
.LINE 285

	JMP	L_46
L_43:
;  286	   {
;  287	      printf("\nYou don't have the lamp!\n");
	LD	BC,L__59
	PUSH	BC
.LINE 287

	CALL	_printf
	POP	BC
;  288	   }
;  289	}
L_46:
.LINE 289

	LD	SP,IX
	POP	IX
	RET	


;**************************** _HandleOff ***************************
;Name                         Addr/Register   Size   Type
;_printf                             IMPORT  -----   function
;game                                  IX+6      3   parameter


; Stack Frame Size: 9 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "HandleOff",289,"_HandleOff"
	SEGMENT STRSECT
L__55:
	DB	10
	DB	"The lamp is now off."
	DB	10,0
L__58:
	DB	10
	DB	"The lamp is already off."
	DB	10,0
L__59:
	DB	10
	DB	"You don't have the lamp!"
	DB	10,0
	SEGMENT code
;  290	
;  291	
;  292	/* HandleEnter() - handle enter command
;  293	 *
;  294	 */
;  295	void HandleEnter(GAME_S_T *game)
;  296	{
_HandleEnter:
.DEFINE "_HandleEnter"

.VALUE _HandleEnter

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "HandleEnter",296,"_HandleEnter"

.LINE 296

.DEFINE "game"

.CLASS 65

.VALUE 6

.TAG "game_s_t"

.TYPE 40

.ENDEF

.DEFINE "cr"

.CLASS 65

.VALUE -2

.TYPE 3

.ENDEF

;  297	   INDEX_T cr;
;  298	
;  299	   cr = game->current_room;
.LINE 299

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	DEC	SP
	DEC	SP
	LD	IY,(IX+6)
	LD	BC,(IY+10)
	LD	(IX+-2),C
	LD	(IX+-1),B
;  300	
;  301	   switch( cr )
.LINE 301

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	DE,1
	LD	BC,L__61
	CALL	__case
	JP	(HL)
L__61:
	DW	13
	DB	0
	JMP	L_47
	JMP	L_52
;  302	   {
;  303	      case RM_OUTSIDE_MAIN:
L_47:
.LINE 303

;  304	         switch(map[cr].special)
.LINE 304

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	BC,136
	LD	IY,HL
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	DE,3
	LD	BC,L__62
	CALL	__case
	JP	(HL)
L__62:
	DW	2
	DB	0
	JMP	L_48
	DW	3
	DB	0
	JMP	L_49
	DW	4
	DB	0
	JMP	L_50
	JMP	L_53
;  305	         {
;  306	            case SE_ODOOR_LOCKED:
L_48:
.LINE 306

;  307	               printf("\nThe door is padlocked.\n");
	LD	BC,L__63
	PUSH	BC
.LINE 307

	CALL	_printf
	POP	BC
;  308	               break;
.LINE 308

	JMP	L_53
;  309	            case SE_ODOOR_CLOSED:
L_49:
.LINE 309

;  310	               printf("\nThe door is shut tight.\n");
	LD	BC,L__64
	PUSH	BC
.LINE 310

	CALL	_printf
	POP	BC
;  311	               break;
.LINE 311

	JMP	L_53
;  312	            case SE_ODOOR_OPEN:
L_50:
.LINE 312

;  313	               game->current_room = RM_MAIN_CHAMBER;
.LINE 313

	LD	IY,(IX+6)
	XOR	A,A
	LD	(IY+10),A
	XOR	A,A
	LD	(IY+11),A
;  314	               break;
.LINE 314

	JMP	L_53
;  315	         }
;  316	         break;
;  317	
;  318	      default:
L_52:
.LINE 318

;  319	         printf("\nI don't see an entrance!\n");
	LD	BC,L__65
	PUSH	BC
.LINE 319

	CALL	_printf
	POP	BC
;  320	   }
;  321	}
L_53:
.LINE 321

	LD	SP,IX
	POP	IX
	RET	


;**************************** _HandleEnter ***************************
;Name                         Addr/Register   Size   Type
;_printf                             IMPORT  -----   function
;_map                                IMPORT    140   variable
;cr                                    IX-2      2   variable
;game                                  IX+6      3   parameter


; Stack Frame Size: 11 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "HandleEnter",321,"_HandleEnter"
	SEGMENT STRSECT
L__63:
	DB	10
	DB	"The door is padlocked."
	DB	10,0
L__64:
	DB	10
	DB	"The door is shut tight."
	DB	10,0
L__65:
	DB	10
	DB	"I don't see an entrance!"
	DB	10,0
	SEGMENT code
;  322	
;  323	
;  324	/* HandleExit() - handle exit command
;  325	 *
;  326	 */
;  327	void HandleExit(GAME_S_T *game)
;  328	{
_HandleExit:
.DEFINE "_HandleExit"

.VALUE _HandleExit

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "HandleExit",328,"_HandleExit"

.LINE 328

.DEFINE "game"

.CLASS 65

.VALUE 6

.TAG "game_s_t"

.TYPE 40

.ENDEF

.DEFINE "cr"

.CLASS 65

.VALUE -2

.TYPE 3

.ENDEF

;  329	   INDEX_T cr;
;  330	
;  331	   cr = game->current_room;
.LINE 331

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	DEC	SP
	DEC	SP
	LD	IY,(IX+6)
	LD	BC,(IY+10)
	LD	(IX+-2),C
	LD	(IX+-1),B
;  332	
;  333	   switch( cr )
.LINE 333

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	DE,1
	LD	BC,L__67
	CALL	__case
	JP	(HL)
L__67:
	DW	0
	DB	0
	JMP	L_54
	JMP	L_58
;  334	   {
;  335	      case RM_MAIN_CHAMBER:
L_54:
.LINE 335

;  336	         switch(map[cr].special)
.LINE 336

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	BC,136
	LD	IY,HL
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	DE,2
	LD	BC,L__68
	CALL	__case
	JP	(HL)
L__68:
	DW	11
	DB	0
	JMP	L_55
	DW	12
	DB	0
	JMP	L_56
	JMP	L_59
;  337	         {
;  338	            case SE_IDOOR_CLOSED:
L_55:
.LINE 338

;  339	               printf("\nThe door is shut tight.\n");
	LD	BC,L__69
	PUSH	BC
.LINE 339

	CALL	_printf
	POP	BC
;  340	               break;
.LINE 340

	JMP	L_59
;  341	            case SE_IDOOR_OPEN:
L_56:
.LINE 341

;  342	               game->current_room = RM_OUTSIDE_MAIN;
.LINE 342

	LD	IY,(IX+6)
	LD	A,13
	LD	(IY+10),A
	XOR	A,A
	LD	(IY+11),A
;  343	               break;
.LINE 343

	JMP	L_59
;  344	         }
;  345	         break;
;  346	
;  347	      default:
L_58:
.LINE 347

;  348	         printf("\nI don't see an entrance!\n");
	LD	BC,L__70
	PUSH	BC
.LINE 348

	CALL	_printf
	POP	BC
;  349	   }
;  350	}
L_59:
.LINE 350

	LD	SP,IX
	POP	IX
	RET	


;**************************** _HandleExit ***************************
;Name                         Addr/Register   Size   Type
;_printf                             IMPORT  -----   function
;_map                                IMPORT    140   variable
;cr                                    IX-2      2   variable
;game                                  IX+6      3   parameter


; Stack Frame Size: 11 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "HandleExit",350,"_HandleExit"
	SEGMENT STRSECT
L__69:
	DB	10
	DB	"The door is shut tight."
	DB	10,0
L__70:
	DB	10
	DB	"I don't see an entrance!"
	DB	10,0
	SEGMENT code
;  351	
;  352	
;  353	/* HandleSwim() - handle swim command
;  354	 *
;  355	 */
;  356	void HandleSwim(GAME_S_T *game)
;  357	{
_HandleSwim:
.DEFINE "_HandleSwim"

.VALUE _HandleSwim

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "HandleSwim",357,"_HandleSwim"

.LINE 357

.DEFINE "game"

.CLASS 65

.VALUE 6

.TAG "game_s_t"

.TYPE 40

.ENDEF

.DEFINE "cr"

.CLASS 65

.VALUE -2

.TYPE 3

.ENDEF

;  358	   INDEX_T	cr;
;  359	
;  360	   cr = game->current_room;
.LINE 360

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
	DEC	SP
	DEC	SP
	LD	IY,(IX+6)
	LD	BC,(IY+10)
	LD	(IX+-2),C
	LD	(IX+-1),B
;  361	
;  362	   switch(cr)
.LINE 362

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	DE,5
	LD	BC,L__72
	CALL	__case
	JP	(HL)
L__72:
	DW	9
	DB	0
	JMP	L_60
	DW	10
	DB	0
	JMP	L_61
	DW	11
	DB	0
	JMP	L_66
	DW	12
	DB	0
	JMP	L_67
	DW	14
	DB	0
	JMP	L_68
	JMP	L_69
;  363	   {
;  364	      case RM_BEAVER_DAM:
L_60:
.LINE 364

;  365	         printf("\nThe current exiting the dam is gentle enough for swimming but you\n");
	LD	BC,L__73
	PUSH	BC
.LINE 365

	CALL	_printf
	POP	BC
;  366	         printf("find that bottom very rocky with pockets of mud which try to suck\n");
	LD	BC,L__74
	PUSH	BC
.LINE 366

	CALL	_printf
	POP	BC
;  367	         printf("you down.  You scramble back to the bank and rest awhile.\n");
	LD	BC,L__75
	PUSH	BC
.LINE 367

	CALL	_printf
	POP	BC
;  368	         break;
.LINE 368

	JMP	L_70
;  369	
;  370	      case RM_SWIFT_RIVER:
L_61:
.LINE 370

;  371	         if (map[cr].special == SE_SWIFT_WARN1)
.LINE 371

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	BC,136
	LD	IY,HL
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	BC,13
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_64
;  372	         {
;  373	            printf("\nYou approach the river, but think better of it after reading\n");
	LD	BC,L__77
	PUSH	BC
.LINE 373

	LD	(IX+-5),IY
	CALL	_printf
	LD	IY,(IX+-5)
	POP	BC
;  374	            printf("the warning sign again.\n");
	LD	BC,L__78
	PUSH	BC
.LINE 374

	LD	(IX+-5),IY
	CALL	_printf
	LD	IY,(IX+-5)
	POP	BC
;  375	            map[cr].special = SE_SWIFT_WARN2;
.LINE 375

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	IY,HL
	LD.LIS	HL,14
	LD	BC,136
	CALL	__sstiy
;  376	         }
;  377	         else if (map[cr].special == SE_SWIFT_WARN2)
.LINE 377

	JMP	L_70
L_64:
	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	BC,136
	LD	IY,HL
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	BC,14
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_70
;  378	         {
;  379	            printf("\nIgnoring the warning sign, you jump into the swiftly flowing\n");
	LD	BC,L__80
	PUSH	BC
.LINE 379

	CALL	_printf
	POP	BC
;  380	            printf("current and are swept away downstream.  Where a hundred foot\n");
	LD	BC,L__81
	PUSH	BC
.LINE 380

	CALL	_printf
	POP	BC
;  381	            printf("waterfall carries you to your death on the rocks below.\n");
	LD	BC,L__82
	PUSH	BC
.LINE 381

	CALL	_printf
	POP	BC
;  382	            PlayerDied( game );
	LD	BC,(IX+6)
	PUSH	BC
.LINE 382

	CALL	_PlayerDied
	POP	BC
;  383	         }
;  384	         break;
.LINE 384

	JMP	L_70
;  385	
;  386	      case RM_BEAVER_POND:
L_66:
.LINE 386

;  387	         printf("\nYou swim out into the pond several feet from shore and realize\n");
	LD	BC,L__83
	PUSH	BC
.LINE 387

	CALL	_printf
	POP	BC
;  388	         printf("that it is well over your head.  You just make it back to safety\n");
	LD	BC,L__84
	PUSH	BC
.LINE 388

	CALL	_printf
	POP	BC
;  389	         printf("after swallowing a few mouthfuls of water.\n");
	LD	BC,L__85
	PUSH	BC
.LINE 389

	CALL	_printf
	POP	BC
;  390	         break;
.LINE 390

	JMP	L_70
;  391	
;  392	      case RM_MISTY_VALLEY:
L_67:
.LINE 392

;  393	         printf("\nThe tiny stream is far too small for swimming.\n");
	LD	BC,L__86
	PUSH	BC
.LINE 393

	CALL	_printf
	POP	BC
;  394	         break;
.LINE 394

	JMP	L_70
;  395	
;  396	      case RM_BROOK:
L_68:
.LINE 396

;  397	         printf("\nYou wade into the babbling brook and discover that though it is\n");
	LD	BC,L__87
	PUSH	BC
.LINE 397

	CALL	_printf
	POP	BC
;  398	         printf("indeed refreshing, it also pointless.\n");
	LD	BC,L__88
	PUSH	BC
.LINE 398

	CALL	_printf
	POP	BC
;  399	         break;
.LINE 399

	JMP	L_70
;  400	
;  401	      default:
L_69:
.LINE 401

;  402	         printf("\nThere is no water visible.\n");
	LD	BC,L__89
	PUSH	BC
.LINE 402

	CALL	_printf
	POP	BC
;  403	         break;
;  404	   }
;  405	}
L_70:
.LINE 405

	LD	SP,IX
	POP	IX
	RET	


;**************************** _HandleSwim ***************************
;Name                         Addr/Register   Size   Type
;_PlayerDied                         IMPORT  -----   function
;_map                                IMPORT    140   variable
;_printf                             IMPORT  -----   function
;cr                                    IX-2      2   variable
;game                                  IX+6      3   parameter


; Stack Frame Size: 14 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "HandleSwim",405,"_HandleSwim"
	SEGMENT STRSECT
L__73:
	DB	10
	DB	"The current exiting the dam is gentle enough for swimming but you"
	DB	10,0
L__74:
	DB	"find that bottom very rocky with pockets of mud which try to suck"
	DB	10,0
L__75:
	DB	"you down.  You scramble back to the bank and rest awhile."
	DB	10,0
L__77:
	DB	10
	DB	"You approach the river, but think better of it after reading"
	DB	10,0
L__78:
	DB	"the warning sign again."
	DB	10,0
L__80:
	DB	10
	DB	"Ignoring the warning sign, you jump into the swiftly flowing"
	DB	10,0
L__81:
	DB	"current and are swept away downstream.  Where a hundred foot"
	DB	10,0
L__82:
	DB	"waterfall carries you to your death on the rocks below."
	DB	10,0
L__83:
	DB	10
	DB	"You swim out into the pond several feet from shore and realize"
	DB	10,0
L__84:
	DB	"that it is well over your head.  You just make it back to safety"
	DB	10,0
L__85:
	DB	"after swallowing a few mouthfuls of water."
	DB	10,0
L__86:
	DB	10
	DB	"The tiny stream is far too small for swimming."
	DB	10,0
L__87:
	DB	10
	DB	"You wade into the babbling brook and discover that though it is"
	DB	10,0
L__88:
	DB	"indeed refreshing, it also pointless."
	DB	10,0
L__89:
	DB	10
	DB	"There is no water visible."
	DB	10,0
	SEGMENT code
;  406	
;  407	
;  408	/* HandleJump() - handle jump command
;  409	 *
;  410	 */
;  411	void HandleJump(GAME_S_T *game)
;  412	{
_HandleJump:
.DEFINE "_HandleJump"

.VALUE _HandleJump

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "HandleJump",412,"_HandleJump"

.LINE 412

.DEFINE "game"

.CLASS 65

.VALUE 6

.TAG "game_s_t"

.TYPE 40

.ENDEF

.DEFINE "cr"

.CLASS 65

.VALUE -2

.TYPE 3

.ENDEF

;  413	   INDEX_T	cr;
;  414	
;  415	   cr = game->current_room;
.LINE 415

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	DEC	SP
	DEC	SP
	LD	IY,(IX+6)
	LD	BC,(IY+10)
	LD	(IX+-2),C
	LD	(IX+-1),B
;  416	
;  417	   switch(cr)
.LINE 417

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	DE,5
	LD	BC,L__91
	CALL	__case
	JP	(HL)
L__91:
	DW	10
	DB	0
	JMP	L_71
	DW	12
	DB	0
	JMP	L_72
	DW	14
	DB	0
	JMP	L_73
	DW	30
	DB	0
	JMP	L_74
	DW	34
	DB	0
	JMP	L_80
	JMP	L_86
;  418	   {
;  419	      case RM_SWIFT_RIVER:
L_71:
.LINE 419

;  420	         printf("\nThe river is far too wide to safely jump across.\n");
	LD	BC,L__92
	PUSH	BC
.LINE 420

	CALL	_printf
	POP	BC
;  421	         break;
.LINE 421

	JMP	L_87
;  422	
;  423	      case RM_MISTY_VALLEY:
L_72:
.LINE 423

;  424	         printf("\nWhy jump across the stream when walking is much simpler.\n");
	LD	BC,L__93
	PUSH	BC
.LINE 424

	CALL	_printf
	POP	BC
;  425	         break;
.LINE 425

	JMP	L_87
;  426	
;  427	      case RM_BROOK:
L_73:
.LINE 427

;  428	         printf("\nYou gleefully jump across the babbling brook and back several times,\n");
	LD	BC,L__94
	PUSH	BC
.LINE 428

	CALL	_printf
	POP	BC
;  429	         printf("but nothing extraordinary happens.\n");
	LD	BC,L__95
	PUSH	BC
.LINE 429

	CALL	_printf
	POP	BC
;  430	         break;
.LINE 430

	JMP	L_87
;  431	
;  432	      case RM_NARROW_CAVE:
L_74:
.LINE 432

;  433	         switch(map[RM_LARGE_CAVE].special)
.LINE 433

	LD	BC,(_map+4896)
	CALL	__stoi
	LD	DE,4
	LD	BC,L__96
	CALL	__case
	JP	(HL)
L__96:
	DW	27
	DB	0
	JMP	L_75
	DW	28
	DB	0
	JMP	L_76
	DW	29
	DB	0
	JMP	L_77
	DW	30
	DB	0
	JMP	L_78
	JMP	L_87
;  434	         {
;  435	            case SE_BRIDGE_NO:
L_75:
.LINE 435

;  436	               printf("\nIt would be suicide to attempt such a foolhardy endeavor.\n");
	LD	BC,L__97
	PUSH	BC
.LINE 436

	CALL	_printf
	POP	BC
;  437	               map[RM_LARGE_CAVE].special = SE_BRIDGE_NO2;
.LINE 437

	LD	HL,_map+4896
	LD	A,28
	LD	(HL),A
	INC	HL
	XOR	A,A
	LD	(HL),A
;  438	               break;
.LINE 438

	JMP	L_87
;  439	            case SE_BRIDGE_NO2:
L_76:
.LINE 439

;  440	               printf("\nForegoing all common sense, you plunge headlong into the\ngaping and bottomless fissure.\n");
	LD	BC,L__98
	PUSH	BC
.LINE 440

	CALL	_printf
	POP	BC
;  441	               PlayerDied(game);
	LD	BC,(IX+6)
	PUSH	BC
.LINE 441

	CALL	_PlayerDied
	POP	BC
;  442	               break;
.LINE 442

	JMP	L_87
;  443	            case SE_BRIDGE_YES:
L_77:
.LINE 443

;  444	               printf("\nYou carefully cross the delicate crystal bridge.  But just as you\n make it to the other side, the bridge shatters behind you.\n\n");
	LD	BC,L__99
	PUSH	BC
.LINE 444

	CALL	_printf
	POP	BC
;  445	               map[RM_LARGE_CAVE].special = SE_BRIDGE_BRK;
.LINE 445

	LD	HL,_map+4896
	LD	A,30
	LD	(HL),A
	INC	HL
	XOR	A,A
	LD	(HL),A
;  446	               game->current_room = RM_LARGE_CAVE;
.LINE 446

	LD	IY,(IX+6)
	LD	A,34
	LD	(IY+10),A
	XOR	A,A
	LD	(IY+11),A
;  447	               break;
.LINE 447

	JMP	L_87
;  448	            case SE_BRIDGE_BRK:
L_78:
.LINE 448

;  449	               printf("\nIt would be suicide to attempt such a foolhardy endeavor.\n");
	LD	BC,L__100
	PUSH	BC
.LINE 449

	CALL	_printf
	POP	BC
;  450	               map[RM_LARGE_CAVE].special = SE_BRIDGE_NO2;
.LINE 450

	LD	HL,_map+4896
	LD	A,28
	LD	(HL),A
	INC	HL
	XOR	A,A
	LD	(HL),A
;  451	               break;
.LINE 451

	JMP	L_87
;  452	            }
;  453	         break;
;  454	
;  455	      case RM_LARGE_CAVE:
L_80:
.LINE 455

;  456	         switch(map[cr].special)
.LINE 456

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	BC,136
	LD	IY,HL
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	DE,4
	LD	BC,L__101
	CALL	__case
	JP	(HL)
L__101:
	DW	27
	DB	0
	JMP	L_81
	DW	28
	DB	0
	JMP	L_82
	DW	29
	DB	0
	JMP	L_83
	DW	30
	DB	0
	JMP	L_84
	JMP	L_87
;  457	         {
;  458	            case SE_BRIDGE_NO:
L_81:
.LINE 458

;  459	               printf("\nIt would be suicide to attempt such a foolhardy endeavor.\n");
	LD	BC,L__102
	PUSH	BC
.LINE 459

	CALL	_printf
	POP	BC
;  460	               map[RM_LARGE_CAVE].special = SE_BRIDGE_NO2;
.LINE 460

	LD	HL,_map+4896
	LD	A,28
	LD	(HL),A
	INC	HL
	XOR	A,A
	LD	(HL),A
;  461	               break;
.LINE 461

	JMP	L_87
;  462	            case SE_BRIDGE_NO2:
L_82:
.LINE 462

;  463	               printf("\nForegoing all common sense, you plunge headlong into the\ngaping and bottomless fissure.\n");
	LD	BC,L__103
	PUSH	BC
.LINE 463

	CALL	_printf
	POP	BC
;  464	               PlayerDied(game);
	LD	BC,(IX+6)
	PUSH	BC
.LINE 464

	CALL	_PlayerDied
	POP	BC
;  465	               break;
.LINE 465

	JMP	L_87
;  466	            case SE_BRIDGE_YES:
L_83:
.LINE 466

;  467	               printf("\nYou carefully cross the delicate crystal bridge.  But just as you\n make it to the other side, the bridge shatters behind you.\n\n");
	LD	BC,L__104
	PUSH	BC
.LINE 467

	CALL	_printf
	POP	BC
;  468	               map[RM_LARGE_CAVE].special = SE_BRIDGE_BRK;
.LINE 468

	LD	HL,_map+4896
	LD	A,30
	LD	(HL),A
	INC	HL
	XOR	A,A
	LD	(HL),A
;  469	               game->current_room = RM_NARROW_CAVE;
.LINE 469

	LD	IY,(IX+6)
	LD	A,30
	LD	(IY+10),A
	XOR	A,A
	LD	(IY+11),A
;  470	               break;
.LINE 470

	JMP	L_87
;  471	            case SE_BRIDGE_BRK:
L_84:
.LINE 471

;  472	               printf("\nIt would be suicide to attempt such a foolhardy endeavor.\n");
	LD	BC,L__105
	PUSH	BC
.LINE 472

	CALL	_printf
	POP	BC
;  473	               map[RM_LARGE_CAVE].special = SE_BRIDGE_NO2;
.LINE 473

	LD	HL,_map+4896
	LD	A,28
	LD	(HL),A
	INC	HL
	XOR	A,A
	LD	(HL),A
;  474	               break;
.LINE 474

	JMP	L_87
;  475	            }
;  476	         break;
;  477	
;  478	      default:
L_86:
.LINE 478

;  479	         printf("\nThere is nothing here to jump.\n");
	LD	BC,L__106
	PUSH	BC
.LINE 479

	CALL	_printf
	POP	BC
;  480	         break;
;  481	   }
;  482	}
L_87:
.LINE 482

	LD	SP,IX
	POP	IX
	RET	


;**************************** _HandleJump ***************************
;Name                         Addr/Register   Size   Type
;_PlayerDied                         IMPORT  -----   function
;_map                                IMPORT    140   variable
;_printf                             IMPORT  -----   function
;cr                                    IX-2      2   variable
;game                                  IX+6      3   parameter


; Stack Frame Size: 11 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "HandleJump",482,"_HandleJump"
	SEGMENT STRSECT
L__92:
	DB	10
	DB	"The river is far too wide to safely jump across."
	DB	10,0
L__93:
	DB	10
	DB	"Why jump across the stream when walking is much simpler."
	DB	10,0
L__94:
	DB	10
	DB	"You gleefully jump across the babbling brook and back several times,"
	DB	10,0
L__95:
	DB	"but nothing extraordinary happens."
	DB	10,0
L__97:
	DB	10
	DB	"It would be suicide to attempt such a foolhardy endeavor."
	DB	10,0
L__98:
	DB	10
	DB	"Foregoing all common sense, you plunge headlong into the"
	DB	10
	DB	"gaping and bottomless fissure."
	DB	10,0
L__99:
	DB	10
	DB	"You carefully cross the delicate crystal bridge.  But just as you"
	DB	10
	DB	" make it to the other side, the bridge shatters behind you."
	DB	10,10,0
L__100:
	DB	10
	DB	"It would be suicide to attempt such a foolhardy endeavor."
	DB	10,0
L__102:
	DB	10
	DB	"It would be suicide to attempt such a foolhardy endeavor."
	DB	10,0
L__103:
	DB	10
	DB	"Foregoing all common sense, you plunge headlong into the"
	DB	10
	DB	"gaping and bottomless fissure."
	DB	10,0
L__104:
	DB	10
	DB	"You carefully cross the delicate crystal bridge.  But just as you"
	DB	10
	DB	" make it to the other side, the bridge shatters behind you."
	DB	10,10,0
L__105:
	DB	10
	DB	"It would be suicide to attempt such a foolhardy endeavor."
	DB	10,0
L__106:
	DB	10
	DB	"There is nothing here to jump."
	DB	10,0
	SEGMENT code
;  483	
;  484	
;  485	/* HandleSpecialDirection() - handle special direction traveled
;  486	 *
;  487	 *  {note return TRUE if handled by this function}
;  488	 */
;  489	BOOLEAN_T HandleSpecialDirection(GAME_S_T *game, char dir)
;  490	{
_HandleSpecialDirection:
.DEFINE "_HandleSpecialDirection"

.VALUE _HandleSpecialDirection

.CLASS 2

.TYPE 76

.ENDEF

.BEGFUNC "HandleSpecialDirection",490,"_HandleSpecialDirection"

.LINE 490

.DEFINE "game"

.CLASS 65

.VALUE 6

.TAG "game_s_t"

.TYPE 40

.ENDEF

.DEFINE "dir"

.CLASS 65

.VALUE 9

.TYPE 2

.ENDEF

.DEFINE "cr"

.CLASS 65

.VALUE -2

.TYPE 3

.ENDEF

.DEFINE "retval"

.CLASS 65

.VALUE -3

.TYPE 12

.ENDEF

;  491	   INDEX_T	cr;
;  492	   BOOLEAN_T	retval = FALSE;
.LINE 492

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
	PUSH	BC
	XOR	A,A
	LD	(IX+-3),A
;  493	
;  494	
;  495	   cr = game->current_room;
.LINE 495

	LD	IY,(IX+6)
	LD	BC,(IY+10)
	LD	(IX+-2),C
	LD	(IX+-1),B
;  496	
;  497	   switch( cr )
.LINE 497

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	DE,14
	LD	BC,L__108
	CALL	__case
	JP	(HL)
L__108:
	DW	0
	DB	0
	JMP	L_95
	DW	2
	DB	0
	JMP	L_101
	DW	13
	DB	0
	JMP	L_88
	DW	22
	DB	0
	JMP	L_105
	DW	26
	DB	0
	JMP	L_111
	DW	27
	DB	0
	JMP	L_117
	DW	28
	DB	0
	JMP	L_123
	DW	30
	DB	0
	JMP	L_130
	DW	31
	DB	0
	JMP	L_143
	DW	34
	DB	0
	JMP	L_146
	DW	35
	DB	0
	JMP	L_154
	DW	37
	DB	0
	JMP	L_160
	DW	38
	DB	0
	JMP	L_166
	DW	39
	DB	0
	JMP	L_172
	JMP	L_179
;  498	   {
;  499	      case RM_OUTSIDE_MAIN:
L_88:
.LINE 499

;  500	         if (dir == 'n')
.LINE 500

	LD	A,(IX+9)
	CP	A,110
	JR	NZ,L_179
;  501	         {
;  502	            switch(map[cr].special)
.LINE 502

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	BC,136
	LD	IY,HL
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	DE,3
	LD	BC,L__110
	CALL	__case
	JP	(HL)
L__110:
	DW	2
	DB	0
	JMP	L_89
	DW	3
	DB	0
	JMP	L_90
	DW	4
	DB	0
	JMP	L_91
	JMP	L_92
;  503	            {
;  504	               case SE_ODOOR_LOCKED:
L_89:
.LINE 504

;  505	                  printf("\nThe door is padlocked.\n");
	LD	BC,L__111
	PUSH	BC
.LINE 505

	CALL	_printf
	POP	BC
;  506	                  break;
.LINE 506

	JMP	L_92
;  507	               case SE_ODOOR_CLOSED:
L_90:
.LINE 507

;  508	                  printf("\nThe door is shut tight.\n");
	LD	BC,L__112
	PUSH	BC
.LINE 508

	CALL	_printf
	POP	BC
;  509	                  break;
.LINE 509

	JMP	L_92
;  510	               case SE_ODOOR_OPEN:
L_91:
.LINE 510

;  511	                  game->current_room = RM_MAIN_CHAMBER;
.LINE 511

	LD	IY,(IX+6)
	XOR	A,A
	LD	(IY+10),A
	XOR	A,A
	LD	(IY+11),A
;  512	                  break;
;  513	            }
L_92:
.LINE 513

;  514	            retval = TRUE;
.LINE 514

	LD	A,1
	LD	(IX+-3),A
;  515	         }
;  516	         break;
.LINE 516

	JMP	L_179
;  517	
;  518	      case RM_MAIN_CHAMBER:
L_95:
.LINE 518

;  519	         if (dir == 's')
.LINE 519

	LD	A,(IX+9)
	CP	A,115
	JR	NZ,L_179
;  520	         {
;  521	            switch(map[cr].special)
.LINE 521

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	BC,136
	LD	IY,HL
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	DE,2
	LD	BC,L__114
	CALL	__case
	JP	(HL)
L__114:
	DW	11
	DB	0
	JMP	L_96
	DW	12
	DB	0
	JMP	L_97
	JMP	L_98
;  522	            {
;  523	               case SE_IDOOR_CLOSED:
L_96:
.LINE 523

;  524	                  printf("\nThe door is shut tight.\n");
	LD	BC,L__115
	PUSH	BC
.LINE 524

	CALL	_printf
	POP	BC
;  525	                  break;
.LINE 525

	JMP	L_98
;  526	               case SE_IDOOR_OPEN:
L_97:
.LINE 526

;  527	                  game->current_room = RM_OUTSIDE_MAIN;
.LINE 527

	LD	IY,(IX+6)
	LD	A,13
	LD	(IY+10),A
	XOR	A,A
	LD	(IY+11),A
;  528	                  break;
;  529	            }
L_98:
.LINE 529

;  530	            retval = TRUE;
.LINE 530

	LD	A,1
	LD	(IX+-3),A
;  531	         }
;  532	         break;
.LINE 532

	JMP	L_179
;  533	
;  534	      case RM_THRONE:
L_101:
.LINE 534

;  535	         switch(map[cr].special)
.LINE 535

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	BC,136
	LD	IY,HL
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	DE,2
	LD	BC,L__116
	CALL	__case
	JP	(HL)
L__116:
	DW	5
	DB	0
	JMP	L_102
	DW	6
	DB	0
	JMP	L_103
	JMP	L_179
;  536	         {
;  537	            case SE_SKEL_SITS:
L_102:
.LINE 537

;  538	               printf("\nThe decaying skeleton rises to prevent your escape and then attacks.\n");
	LD	BC,L__117
	PUSH	BC
.LINE 538

	LD	(IX+-6),IY
	CALL	_printf
	LD	IY,(IX+-6)
	POP	BC
;  539	               map[cr].special = SE_SKEL_ATTACK;
.LINE 539

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	IY,HL
	LD.LIS	HL,6
	LD	BC,136
	CALL	__sstiy
;  540	               retval = TRUE;
.LINE 540

	LD	A,1
	LD	(IX+-3),A
;  541	               break;
.LINE 541

	JMP	L_179
;  542	            case SE_SKEL_ATTACK:
L_103:
.LINE 542

;  543	               printf("\nThe attacking skeleton prevents your escape.\n");
	LD	BC,L__118
	PUSH	BC
.LINE 543

	CALL	_printf
	POP	BC
;  544	               printf("\nThe skeleton stabs at you and hits!\n");
	LD	BC,L__119
	PUSH	BC
.LINE 544

	CALL	_printf
	POP	BC
;  545	               game->health -= DAMAGE_SKEL;
	LD	BC,(IX+6)
.LINE 545

	LD	IY,(IX+6)
	LEA	HL,IY+15
	LD	IY,(HL)
	LEA	IY,IY+-20
	LD	DE,IY
	LD	IY,BC
	LD	(IY+15),DE
;  546	               retval = TRUE;
.LINE 546

	LD	A,1
	LD	(IX+-3),A
;  547	               break;
.LINE 547

	JMP	L_179
;  548	         }
;  549	         break;
;  550	
;  551	      case RM_STATUE:
L_105:
.LINE 551

;  552	         if ( (dir == 'n' && map[cr].special == SE_STATUE_NORTH)
.LINE 552

	LD	A,(IX+9)
	CP	A,110
	JR	NZ,L_108
	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	BC,136
	LD	IY,HL
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	BC,15
	OR	A,A
	SBC	HL,BC
	JR	Z,L_109
L_108:
;  553			|| (dir == 's' && map[cr].special == SE_STATUE_SOUTH) )
.LINE 553

	LD	A,(IX+9)
	CP	A,115
	JR	NZ,L_179
	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	BC,136
	LD	IY,HL
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	BC,16
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_179
L_109:
;  554	         {
;  555	            printf("\nAs you reach the doorway, the indian statue releases an arrow \nwhich passes straight through your heart.\n");
	LD	BC,L__124
	PUSH	BC
.LINE 555

	CALL	_printf
	POP	BC
;  556	            PlayerDied( game );
	LD	BC,(IX+6)
	PUSH	BC
.LINE 556

	CALL	_PlayerDied
	POP	BC
;  557	         }
;  558	         break;
.LINE 558

	JMP	L_179
;  559	
;  560	      case RM_DIMLY_LIT:
L_111:
.LINE 560

;  561	         if ( dir == 'e' )
.LINE 561

	LD	A,(IX+9)
	CP	A,101
	JR	NZ,L_179
;  562	         {
;  563	            if ( game->inventory.count > 1 )
.LINE 563

	LD	IY,(IX+6)
	LD	BC,(IY+108)
	CALL	__stoi
	LD	BC,HL
	LD	HL,1
	OR	A,A
	SBC	HL,BC
	JP	P,L_113
;  564	            {
;  565	               printf("\nYou cannot fit through the narrow slit with everything that you\nare carrying.  You must drop something first.\n"); 
	LD	BC,L__127
	PUSH	BC
.LINE 565

	CALL	_printf
	POP	BC
;  566	            }
;  567	            else
.LINE 567

	JMP	L_114
L_113:
;  568	            {
;  569	               printf("\nYou just barely squeezed through the narrow slit.\n\n");
	LD	BC,L__128
	PUSH	BC
.LINE 569

	CALL	_printf
	POP	BC
;  570	               game->current_room = RM_GREEN;
.LINE 570

	LD	IY,(IX+6)
	LD	A,27
	LD	(IY+10),A
	XOR	A,A
	LD	(IY+11),A
;  571	            }
L_114:
.LINE 571

;  572	            retval = TRUE;
.LINE 572

	LD	A,1
	LD	(IX+-3),A
;  573	         }
;  574	         break;
.LINE 574

	JMP	L_179
;  575	
;  576	      case RM_GREEN:
L_117:
.LINE 576

;  577	         if ( dir == 'w' )
.LINE 577

	LD	A,(IX+9)
	CP	A,119
	JR	NZ,L_179
;  578	         {
;  579	            if ( game->inventory.count > 1 )
.LINE 579

	LD	IY,(IX+6)
	LD	BC,(IY+108)
	CALL	__stoi
	LD	BC,HL
	LD	HL,1
	OR	A,A
	SBC	HL,BC
	JP	P,L_119
;  580	            {
;  581	               printf("\nYou cannot fit through the narrow slit with everything that you\nare carrying.  You must drop something first.\n"); 
	LD	BC,L__131
	PUSH	BC
.LINE 581

	CALL	_printf
	POP	BC
;  582	            }
;  583	            else
.LINE 583

	JMP	L_120
L_119:
;  584	            {
;  585	               printf("\nYou just barely squeezed through the narrow slit.\n\n");
	LD	BC,L__132
	PUSH	BC
.LINE 585

	CALL	_printf
	POP	BC
;  586	               game->current_room = RM_DIMLY_LIT;
.LINE 586

	LD	IY,(IX+6)
	LD	A,26
	LD	(IY+10),A
	XOR	A,A
	LD	(IY+11),A
;  587	            }
L_120:
.LINE 587

;  588	            retval = TRUE;
.LINE 588

	LD	A,1
	LD	(IX+-3),A
;  589	         }
;  590	         break;
.LINE 590

	JMP	L_179
;  591	
;  592	      case RM_CREVICE:
L_123:
.LINE 592

;  593	         if ( dir == 'd' )
.LINE 593

	LD	A,(IX+9)
	CP	A,100
	JR	NZ,L_179
;  594	         {
;  595	            switch(map[cr].special)
.LINE 595

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	BC,136
	LD	IY,HL
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	DE,3
	LD	BC,L__134
	CALL	__case
	JP	(HL)
L__134:
	DW	19
	DB	0
	JMP	L_124
	DW	20
	DB	0
	JMP	L_125
	DW	21
	DB	0
	JMP	L_126
	JMP	L_127
;  596	            {
;  597	               case SE_GRATE_LOCKED:
L_124:
.LINE 597

;  598	                  printf("\nThe grate is locked.\n");
	LD	BC,L__135
	PUSH	BC
.LINE 598

	CALL	_printf
	POP	BC
;  599	                  break;
.LINE 599

	JMP	L_127
;  600	               case SE_GRATE_CLOSED:
L_125:
.LINE 600

;  601	                  printf("\nThe grate is closed.\n");
	LD	BC,L__136
	PUSH	BC
.LINE 601

	CALL	_printf
	POP	BC
;  602	                  break;
.LINE 602

	JMP	L_127
;  603	               case SE_GRATE_OPEN:
L_126:
.LINE 603

;  604	                  game->current_room = RM_LIBRARY;
.LINE 604

	LD	IY,(IX+6)
	LD	A,33
	LD	(IY+10),A
	XOR	A,A
	LD	(IY+11),A
;  605	                  break;
;  606	            }
L_127:
.LINE 606

;  607	            retval = TRUE;
.LINE 607

	LD	A,1
	LD	(IX+-3),A
;  608	         }
;  609	         break;
.LINE 609

	JMP	L_179
;  610	
;  611	      case RM_NARROW_CAVE:
L_130:
.LINE 611

;  612	         if ( dir == 'e' )
.LINE 612

	LD	A,(IX+9)
	CP	A,101
	JR	NZ,L_141
;  613	         {
;  614	            switch(map[cr].special)
.LINE 614

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	BC,136
	LD	IY,HL
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	DE,2
	LD	BC,L__138
	CALL	__case
	JP	(HL)
L__138:
	DW	25
	DB	0
	JMP	L_131
	DW	26
	DB	0
	JMP	L_132
	JMP	L_133
;  615	            {
;  616	               case SE_SLAB_CLOSED:
L_131:
.LINE 616

;  617	                  printf("\nThe stone slab blocks any possible eastern exit.\n");
	LD	BC,L__139
	PUSH	BC
.LINE 617

	CALL	_printf
	POP	BC
;  618	                  break;
.LINE 618

	JMP	L_133
;  619	               case SE_SLAB_OPEN:
L_132:
.LINE 619

;  620	                  printf("\nYou manage to struggle through the tight opening.\n\n");
	LD	BC,L__140
	PUSH	BC
.LINE 620

	CALL	_printf
	POP	BC
;  621	                  game->current_room = RM_ANSWER;
.LINE 621

	LD	IY,(IX+6)
	LD	A,31
	LD	(IY+10),A
	XOR	A,A
	LD	(IY+11),A
;  622	                  break;
;  623	            }
L_133:
.LINE 623

;  624	            retval = TRUE;
.LINE 624

	LD	A,1
	LD	(IX+-3),A
;  625	         }
L_141:
.LINE 625

;  626	         if ( dir == 's' )
.LINE 626

	LD	A,(IX+9)
	CP	A,115
	JR	NZ,L_179
;  627	         {
;  628	            switch(map[RM_LARGE_CAVE].special)
.LINE 628

	LD	BC,(_map+4896)
	CALL	__stoi
	LD	DE,4
	LD	BC,L__142
	CALL	__case
	JP	(HL)
L__142:
	DW	27
	DB	0
	JMP	L_135
	DW	28
	DB	0
	JMP	L_136
	DW	29
	DB	0
	JMP	L_137
	DW	30
	DB	0
	JMP	L_138
	JMP	L_139
;  629	            {
;  630	               case SE_BRIDGE_NO:
L_135:
.LINE 630

;  631	                  printf("\nIt would be suicide to attempt such a foolhardy endeavor.\n");
	LD	BC,L__143
	PUSH	BC
.LINE 631

	CALL	_printf
	POP	BC
;  632	                  map[RM_LARGE_CAVE].special = SE_BRIDGE_NO2;
.LINE 632

	LD	HL,_map+4896
	LD	A,28
	LD	(HL),A
	INC	HL
	XOR	A,A
	LD	(HL),A
;  633	                  break;
.LINE 633

	JMP	L_139
;  634	               case SE_BRIDGE_NO2:
L_136:
.LINE 634

;  635	                  printf("\nForegoing all common sense, you plunge headlong into the\ngaping and bottomless fissure.\n");
	LD	BC,L__144
	PUSH	BC
.LINE 635

	CALL	_printf
	POP	BC
;  636	                  PlayerDied(game);
	LD	BC,(IX+6)
	PUSH	BC
.LINE 636

	CALL	_PlayerDied
	POP	BC
;  637	                  break;
.LINE 637

	JMP	L_139
;  638	               case SE_BRIDGE_YES:
L_137:
.LINE 638

;  639	                  printf("\nYou carefully cross the delicate crystal bridge.  But just as you\n make it to the other side, the bridge shatters behind you.\n\n");
	LD	BC,L__145
	PUSH	BC
.LINE 639

	CALL	_printf
	POP	BC
;  640	                  map[RM_LARGE_CAVE].special = SE_BRIDGE_BRK;
.LINE 640

	LD	HL,_map+4896
	LD	A,30
	LD	(HL),A
	INC	HL
	XOR	A,A
	LD	(HL),A
;  641	                  game->current_room = RM_LARGE_CAVE;
.LINE 641

	LD	IY,(IX+6)
	LD	A,34
	LD	(IY+10),A
	XOR	A,A
	LD	(IY+11),A
;  642	                  break;
.LINE 642

	JMP	L_139
;  643	               case SE_BRIDGE_BRK:
L_138:
.LINE 643

;  644	                  printf("\nIt would be suicide to attempt such a foolhardy endeavor.\n");
	LD	BC,L__146
	PUSH	BC
.LINE 644

	CALL	_printf
	POP	BC
;  645	                  map[RM_LARGE_CAVE].special = SE_BRIDGE_NO2;
.LINE 645

	LD	HL,_map+4896
	LD	A,28
	LD	(HL),A
	INC	HL
	XOR	A,A
	LD	(HL),A
;  646	                  break;
;  647	            }
L_139:
.LINE 647

;  648	            retval = TRUE;
.LINE 648

	LD	A,1
	LD	(IX+-3),A
;  649	         }
;  650	         break;
.LINE 650

	JMP	L_179
;  651	
;  652	      case RM_ANSWER:
L_143:
.LINE 652

;  653	         if ( dir == 'w' )
.LINE 653

	LD	A,(IX+9)
	CP	A,119
	JR	NZ,L_179
;  654	         {
;  655	            printf("\nYou find that way back is confusing.  You eventually find a passage out.\n\n");
	LD	BC,L__148
	PUSH	BC
.LINE 655

	CALL	_printf
	POP	BC
;  656	            game->current_room = RM_LARGE_CAVE;
.LINE 656

	LD	IY,(IX+6)
	LD	A,34
	LD	(IY+10),A
	XOR	A,A
	LD	(IY+11),A
;  657	            retval = TRUE;
.LINE 657

	LD	A,1
	LD	(IX+-3),A
;  658	         }
;  659	         break;
.LINE 659

	JMP	L_179
;  660	
;  661	      case RM_LARGE_CAVE:
L_146:
.LINE 661

;  662	         if ( dir == 'n' )
.LINE 662

	LD	A,(IX+9)
	CP	A,110
	JR	NZ,L_179
;  663	         {
;  664	            switch(map[cr].special)
.LINE 664

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	BC,136
	LD	IY,HL
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	DE,4
	LD	BC,L__150
	CALL	__case
	JP	(HL)
L__150:
	DW	27
	DB	0
	JMP	L_147
	DW	28
	DB	0
	JMP	L_148
	DW	29
	DB	0
	JMP	L_149
	DW	30
	DB	0
	JMP	L_150
	JMP	L_151
;  665	            {
;  666	               case SE_BRIDGE_NO:
L_147:
.LINE 666

;  667	                  printf("\nIt would be suicide to attempt such a foolhardy endeavor.\n");
	LD	BC,L__151
	PUSH	BC
.LINE 667

	CALL	_printf
	POP	BC
;  668	                  map[RM_LARGE_CAVE].special = SE_BRIDGE_NO2;
.LINE 668

	LD	HL,_map+4896
	LD	A,28
	LD	(HL),A
	INC	HL
	XOR	A,A
	LD	(HL),A
;  669	                  break;
.LINE 669

	JMP	L_151
;  670	               case SE_BRIDGE_NO2:
L_148:
.LINE 670

;  671	                  printf("\nForegoing all common sense, you plunge headlong into the\ngaping and bottomless fissure.\n");
	LD	BC,L__152
	PUSH	BC
.LINE 671

	CALL	_printf
	POP	BC
;  672	                  PlayerDied(game);
	LD	BC,(IX+6)
	PUSH	BC
.LINE 672

	CALL	_PlayerDied
	POP	BC
;  673	                  break;
.LINE 673

	JMP	L_151
;  674	               case SE_BRIDGE_YES:
L_149:
.LINE 674

;  675	                  printf("\nYou carefully cross the delicate crystal bridge.  But just as you\nmake it to the other side, the bridge shatters behind you.\n\n");
	LD	BC,L__153
	PUSH	BC
.LINE 675

	CALL	_printf
	POP	BC
;  676	                  map[RM_LARGE_CAVE].special = SE_BRIDGE_BRK;
.LINE 676

	LD	HL,_map+4896
	LD	A,30
	LD	(HL),A
	INC	HL
	XOR	A,A
	LD	(HL),A
;  677	                  game->current_room = RM_NARROW_CAVE;
.LINE 677

	LD	IY,(IX+6)
	LD	A,30
	LD	(IY+10),A
	XOR	A,A
	LD	(IY+11),A
;  678	                  break;
.LINE 678

	JMP	L_151
;  679	               case SE_BRIDGE_BRK:
L_150:
.LINE 679

;  680	                  printf("\nIt would be suicide to attempt such a foolhardy endeavor.\n");
	LD	BC,L__154
	PUSH	BC
.LINE 680

	CALL	_printf
	POP	BC
;  681	                  map[RM_LARGE_CAVE].special = SE_BRIDGE_NO2;
.LINE 681

	LD	HL,_map+4896
	LD	A,28
	LD	(HL),A
	INC	HL
	XOR	A,A
	LD	(HL),A
;  682	                  break;
;  683	            }
L_151:
.LINE 683

;  684	            retval = TRUE;
.LINE 684

	LD	A,1
	LD	(IX+-3),A
;  685	         }
;  686	         break;
.LINE 686

	JMP	L_179
;  687	
;  688	      case RM_STRANGE:
L_154:
.LINE 688

;  689	         if ( dir == 'u' )
.LINE 689

	LD	A,(IX+9)
	CP	A,117
	JR	NZ,L_179
;  690	         {
;  691	            if ( map[RM_STRANGE].special == SE_ROPE_RISEN )
.LINE 691

	LD	BC,(_map+5036)
	CALL	__stoi
	LD	BC,18
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_156
;  692	            {
;  693	               printf("\nSurprising yourself with your agility, you easily climb up\nthe strong rope.\n\n");
	LD	BC,L__157
	PUSH	BC
.LINE 693

	CALL	_printf
	POP	BC
;  694	               game->current_room = RM_EGG_ROOM;
.LINE 694

	LD	IY,(IX+6)
	LD	A,32
	LD	(IY+10),A
	XOR	A,A
	LD	(IY+11),A
;  695	            }
;  696	            else
.LINE 696

	JMP	L_157
L_156:
;  697	            {
;  698	               printf("\nThere is no way to climb up to the small hole.\n");
	LD	BC,L__158
	PUSH	BC
.LINE 698

	CALL	_printf
	POP	BC
;  699	            }
L_157:
.LINE 699

;  700	            retval = TRUE;
.LINE 700

	LD	A,1
	LD	(IX+-3),A
;  701	         }
;  702	         break;
.LINE 702

	JMP	L_179
;  703	
;  704	      case RM_NORTH_SIDE_LAKE:
L_160:
.LINE 704

;  705	         if ( dir == 's' )
.LINE 705

	LD	A,(IX+9)
	CP	A,115
	JR	NZ,L_179
;  706	         {
;  707	            if ( map[RM_NORTH_SIDE_LAKE].special == SE_BOOTS_ON )
.LINE 707

	LD	BC,(_map+5316)
	CALL	__stoi
	LD	BC,32
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_162
;  708	            {
;  709	               printf("\nAmazingly you are indeed able to walk on water, and you quickly\ncross to the other side.\n\n");
	LD	BC,L__161
	PUSH	BC
.LINE 709

	CALL	_printf
	POP	BC
;  710	               game->current_room = RM_SOUTH_SIDE_LAKE;
.LINE 710

	LD	IY,(IX+6)
	LD	A,38
	LD	(IY+10),A
	XOR	A,A
	LD	(IY+11),A
;  711	            }
;  712	            else
.LINE 712

	JMP	L_163
L_162:
;  713	            {
;  714	               printf("\nThe lake is far too deep for wading.\n");
	LD	BC,L__162
	PUSH	BC
.LINE 714

	CALL	_printf
	POP	BC
;  715	            }
L_163:
.LINE 715

;  716	            retval = TRUE;
.LINE 716

	LD	A,1
	LD	(IX+-3),A
;  717	         }
;  718	         break;
.LINE 718

	JMP	L_179
;  719	
;  720	      case RM_SOUTH_SIDE_LAKE:
L_166:
.LINE 720

;  721	         if ( dir == 'n' )
.LINE 721

	LD	A,(IX+9)
	CP	A,110
	JR	NZ,L_179
;  722	         {
;  723	            if ( map[RM_SOUTH_SIDE_LAKE].special == SE_BOOTS_ON )
.LINE 723

	LD	BC,(_map+5456)
	CALL	__stoi
	LD	BC,32
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_168
;  724	            {
;  725	               printf("\nAmazingly you are indeed able to walk on water, and you quickly\ncross to the other side.\n\n");
	LD	BC,L__165
	PUSH	BC
.LINE 725

	CALL	_printf
	POP	BC
;  726	               game->current_room = RM_NORTH_SIDE_LAKE;
.LINE 726

	LD	IY,(IX+6)
	LD	A,37
	LD	(IY+10),A
	XOR	A,A
	LD	(IY+11),A
;  727	            }
;  728	            else
.LINE 728

	JMP	L_169
L_168:
;  729	            {
;  730	               printf("\nThe lake is far too deep for wading.\n");
	LD	BC,L__166
	PUSH	BC
.LINE 730

	CALL	_printf
	POP	BC
;  731	            }
L_169:
.LINE 731

;  732	            retval = TRUE;
.LINE 732

	LD	A,1
	LD	(IX+-3),A
;  733	         }
;  734	         break;
.LINE 734

	JMP	L_179
;  735	
;  736	      case RM_QUESTION:
L_172:
.LINE 736

;  737	         if ( dir == 'n' )
.LINE 737

	LD	A,(IX+9)
	CP	A,110
	JR	NZ,L_179
;  738	         {
;  739	            switch(map[cr].special)
.LINE 739

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	BC,136
	LD	IY,HL
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	DE,4
	LD	BC,L__168
	CALL	__case
	JP	(HL)
L__168:
	DW	33
	DB	0
	JMP	L_173
	DW	34
	DB	0
	JMP	L_174
	DW	35
	DB	0
	JMP	L_175
	DW	36
	DB	0
	JMP	L_176
	JMP	L_177
;  740	            {
;  741	               case SE_ANSWER_0:
L_173:
.LINE 741

;  742	                  printf("\nThe strange hooded little man rises and blocks your path.\n");
	LD	BC,L__169
	PUSH	BC
.LINE 742

	CALL	_printf
	POP	BC
;  743	                  break;
.LINE 743

	JMP	L_177
;  744	               case SE_ANSWER_1:
L_174:
.LINE 744

;  745	                  printf("\nThe strange man rises and threatens you with his blade.\n");
	LD	BC,L__170
	PUSH	BC
.LINE 745

	CALL	_printf
	POP	BC
;  746	                  break;
.LINE 746

	JMP	L_177
;  747	               case SE_ANSWER_2:
L_175:
.LINE 747

;  748	                  printf("\nApparently fed up with your insolence, the strange man rises\nand then cuts you cleanly in half with his scythe.\n");
	LD	BC,L__171
	PUSH	BC
.LINE 748

	CALL	_printf
	POP	BC
;  749	                  PlayerDied(game);
	LD	BC,(IX+6)
	PUSH	BC
.LINE 749

	CALL	_PlayerDied
	POP	BC
;  750	                  break;
.LINE 750

	JMP	L_177
;  751	               case SE_ANSWER_3:
L_176:
.LINE 751

;  752	                  printf("\nThe strange man ignores you as you pass through the doorway.\n\n");
	LD	BC,L__172
	PUSH	BC
.LINE 752

	CALL	_printf
	POP	BC
;  753	                  game->current_room = RM_PYRAMID;
.LINE 753

	LD	IY,(IX+6)
	LD	A,40
	LD	(IY+10),A
	XOR	A,A
	LD	(IY+11),A
;  754	                  break;
;  755	            }
L_177:
.LINE 755

;  756	            retval = TRUE;
.LINE 756

	LD	A,1
	LD	(IX+-3),A
;  757	         }
;  758	   }
L_179:
.LINE 758

;  759	
;  760	   return(retval);
.LINE 760

	LD	A,(IX+-3)
;  761	}
.LINE 761

	LD	SP,IX
	POP	IX
	RET	


;**************************** _HandleSpecialDirection ***************************
;Name                         Addr/Register   Size   Type
;_PlayerDied                         IMPORT  -----   function
;_printf                             IMPORT  -----   function
;_map                                IMPORT    140   variable
;retval                                IX-3      1   variable
;cr                                    IX-2      2   variable
;dir                                   IX+9      1   parameter
;game                                  IX+6      3   parameter


; Stack Frame Size: 18 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "HandleSpecialDirection",761,"_HandleSpecialDirection"
	SEGMENT STRSECT
L__111:
	DB	10
	DB	"The door is padlocked."
	DB	10,0
L__112:
	DB	10
	DB	"The door is shut tight."
	DB	10,0
L__115:
	DB	10
	DB	"The door is shut tight."
	DB	10,0
L__117:
	DB	10
	DB	"The decaying skeleton rises to prevent your escape and then attacks."
	DB	10,0
L__118:
	DB	10
	DB	"The attacking skeleton prevents your escape."
	DB	10,0
L__119:
	DB	10
	DB	"The skeleton stabs at you and hits!"
	DB	10,0
L__124:
	DB	10
	DB	"As you reach the doorway, the indian statue releases an arrow "
	DB	10
	DB	"which passes straight through your heart."
	DB	10,0
L__127:
	DB	10
	DB	"You cannot fit through the narrow slit with everything that you"
	DB	10
	DB	"are carrying.  You must drop something first."
	DB	10,0
L__128:
	DB	10
	DB	"You just barely squeezed through the narrow slit."
	DB	10,10,0
L__131:
	DB	10
	DB	"You cannot fit through the narrow slit with everything that you"
	DB	10
	DB	"are carrying.  You must drop something first."
	DB	10,0
L__132:
	DB	10
	DB	"You just barely squeezed through the narrow slit."
	DB	10,10,0
L__135:
	DB	10
	DB	"The grate is locked."
	DB	10,0
L__136:
	DB	10
	DB	"The grate is closed."
	DB	10,0
L__139:
	DB	10
	DB	"The stone slab blocks any possible eastern exit."
	DB	10,0
L__140:
	DB	10
	DB	"You manage to struggle through the tight opening."
	DB	10,10,0
L__143:
	DB	10
	DB	"It would be suicide to attempt such a foolhardy endeavor."
	DB	10,0
L__144:
	DB	10
	DB	"Foregoing all common sense, you plunge headlong into the"
	DB	10
	DB	"gaping and bottomless fissure."
	DB	10,0
L__145:
	DB	10
	DB	"You carefully cross the delicate crystal bridge.  But just as you"
	DB	10
	DB	" make it to the other side, the bridge shatters behind you."
	DB	10,10,0
L__146:
	DB	10
	DB	"It would be suicide to attempt such a foolhardy endeavor."
	DB	10,0
L__148:
	DB	10
	DB	"You find that way back is confusing.  You eventually find a passage out."
	DB	10,10,0
L__151:
	DB	10
	DB	"It would be suicide to attempt such a foolhardy endeavor."
	DB	10,0
L__152:
	DB	10
	DB	"Foregoing all common sense, you plunge headlong into the"
	DB	10
	DB	"gaping and bottomless fissure."
	DB	10,0
L__153:
	DB	10
	DB	"You carefully cross the delicate crystal bridge.  But just as you"
	DB	10
	DB	"make it to the other side, the bridge shatters behind you."
	DB	10,10,0
L__154:
	DB	10
	DB	"It would be suicide to attempt such a foolhardy endeavor."
	DB	10,0
L__157:
	DB	10
	DB	"Surprising yourself with your agility, you easily climb up"
	DB	10
	DB	"the strong rope."
	DB	10,10,0
L__158:
	DB	10
	DB	"There is no way to climb up to the small hole."
	DB	10,0
L__161:
	DB	10
	DB	"Amazingly you are indeed able to walk on water, and you quickly"
	DB	10
	DB	"cross to the other side."
	DB	10,10,0
L__162:
	DB	10
	DB	"The lake is far too deep for wading."
	DB	10,0
L__165:
	DB	10
	DB	"Amazingly you are indeed able to walk on water, and you quickly"
	DB	10
	DB	"cross to the other side."
	DB	10,10,0
L__166:
	DB	10
	DB	"The lake is far too deep for wading."
	DB	10,0
L__169:
	DB	10
	DB	"The strange hooded little man rises and blocks your path."
	DB	10,0
L__170:
	DB	10
	DB	"The strange man rises and threatens you with his blade."
	DB	10,0
L__171:
	DB	10
	DB	"Apparently fed up with your insolence, the strange man rises"
	DB	10
	DB	"and then cuts you cleanly in half with his scythe."
	DB	10,0
L__172:
	DB	10
	DB	"The strange man ignores you as you pass through the doorway."
	DB	10,10,0
	SEGMENT code
;  762	
;  763	
;  764	/* HandleDirection() - handle direction traveled
;  765	 *
;  766	 */
;  767	void HandleDirection(GAME_S_T *game, char dir)
;  768	{
_HandleDirection:
.DEFINE "_HandleDirection"

.VALUE _HandleDirection

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "HandleDirection",768,"_HandleDirection"

.LINE 768

.DEFINE "game"

.CLASS 65

.VALUE 6

.TAG "game_s_t"

.TYPE 40

.ENDEF

.DEFINE "dir"

.CLASS 65

.VALUE 9

.TYPE 2

.ENDEF

.DEFINE "room"

.CLASS 65

.VALUE -2

.TYPE 3

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
	DEC	SP
	DEC	SP
;  769	   INDEX_T	room;
;  770	
;  771	
;  772	   if ( HandleSpecialDirection(game, dir) )
	LD	B,0
	LD	C,(IX+9)
	PUSH	BC
	LD	BC,(IX+6)
	PUSH	BC
.LINE 772

	LD	(IX+-5),IY
	CALL	_HandleSpecialDirection
	LD	IY,(IX+-5)
	POP	BC
	POP	BC
	OR	A,A
	JR	Z,L_182
;  773	      return;
.LINE 773

	JMP	L_208
L_182:
;  774	
;  775	   room = game->current_room;
.LINE 775

	LD	IY,(IX+6)
	LD	BC,(IY+10)
	LD	(IX+-2),C
	LD	(IX+-1),B
;  776	
;  777	   switch( dir )
.LINE 777

	LD	A,(IX+9)
	SEXT	HL
	LD	L,(IX+9)
	LD	DE,6
	LD	BC,L__175
	CALL	__case
	JP	(HL)
L__175:
	DW	100
	DB	0
	JMP	L_203
	DW	101
	DB	0
	JMP	L_191
	DW	110
	DB	0
	JMP	L_183
	DW	115
	DB	0
	JMP	L_187
	DW	117
	DB	0
	JMP	L_199
	DW	119
	DB	0
	JMP	L_195
	JMP	L_207
;  778	   {
;  779	      case 'n':
L_183:
.LINE 779

;  780	         if ( map[room].n > RM_NULL )
.LINE 780

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	IY,HL
	LD	BC,(IY+124)
	CALL	__stoi
	LD	BC,HL
	LD	HL,16777215
	OR	A,A
	SBC	HL,BC
	JP	P,L_185
;  781	         {
;  782	            game->current_room = map[room].n;
	LD	DE,(IX+6)
.LINE 782

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	IY,HL
	LEA	HL,IY+124
	LD	IY,DE
	LD	BC,(HL)
	LD	(IY+10),C
	LD	(IY+11),B
;  783	         }
;  784	         else
.LINE 784

	JMP	L_208
L_185:
;  785	         {
;  786	            printf("\nThere is no way to go north!\n");
	LD	BC,L__177
	PUSH	BC
.LINE 786

	CALL	_printf
	POP	BC
;  787	         }
;  788	         break;
.LINE 788

	JMP	L_208
;  789	
;  790	      case 's':
L_187:
.LINE 790

;  791	         if ( map[room].s > RM_NULL )
.LINE 791

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	IY,HL
	LD	BC,(IY+126)
	CALL	__stoi
	LD	BC,HL
	LD	HL,16777215
	OR	A,A
	SBC	HL,BC
	JP	P,L_189
;  792	         {
;  793	            game->current_room = map[room].s;
	LD	DE,(IX+6)
.LINE 793

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	IY,HL
	LEA	HL,IY+126
	LD	IY,DE
	LD	BC,(HL)
	LD	(IY+10),C
	LD	(IY+11),B
;  794	         }
;  795	         else
.LINE 795

	JMP	L_208
L_189:
;  796	         {
;  797	            printf("\nThere is no way to go south!\n");
	LD	BC,L__179
	PUSH	BC
.LINE 797

	CALL	_printf
	POP	BC
;  798	         }
;  799	         break;
.LINE 799

	JMP	L_208
;  800	
;  801	      case 'e':
L_191:
.LINE 801

;  802	         if ( map[room].e > RM_NULL )
.LINE 802

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	BC,128
	LD	IY,HL
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	BC,HL
	LD	HL,16777215
	OR	A,A
	SBC	HL,BC
	JP	P,L_193
;  803	         {
;  804	            game->current_room = map[room].e;
	LD	DE,(IX+6)
.LINE 804

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	BC,128
	LD	IY,HL
	CALL	__sldiy
	LD	IY,DE
	LD	BC,HL
	LD	(IY+10),C
	LD	(IY+11),B
;  805	         }
;  806	         else
.LINE 806

	JMP	L_208
L_193:
;  807	         {
;  808	            printf("\nThere is no way to go east!\n");
	LD	BC,L__181
	PUSH	BC
.LINE 808

	CALL	_printf
	POP	BC
;  809	         }
;  810	         break;
.LINE 810

	JMP	L_208
;  811	
;  812	      case 'w':
L_195:
.LINE 812

;  813	         if ( map[room].w > RM_NULL )
.LINE 813

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	BC,130
	LD	IY,HL
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	BC,HL
	LD	HL,16777215
	OR	A,A
	SBC	HL,BC
	JP	P,L_197
;  814	         {
;  815	            game->current_room = map[room].w;
	LD	DE,(IX+6)
.LINE 815

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	BC,130
	LD	IY,HL
	CALL	__sldiy
	LD	IY,DE
	LD	BC,HL
	LD	(IY+10),C
	LD	(IY+11),B
;  816	         }
;  817	         else
.LINE 817

	JMP	L_208
L_197:
;  818	         {
;  819	            printf("\nThere is no way to go west!\n");
	LD	BC,L__183
	PUSH	BC
.LINE 819

	CALL	_printf
	POP	BC
;  820	         }
;  821	         break;
.LINE 821

	JMP	L_208
;  822	
;  823	      case 'u':
L_199:
.LINE 823

;  824	         if ( map[room].u > RM_NULL )
.LINE 824

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	BC,134
	LD	IY,HL
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	BC,HL
	LD	HL,16777215
	OR	A,A
	SBC	HL,BC
	JP	P,L_201
;  825	         {
;  826	            game->current_room = map[room].u;
	LD	DE,(IX+6)
.LINE 826

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	BC,134
	LD	IY,HL
	CALL	__sldiy
	LD	IY,DE
	LD	BC,HL
	LD	(IY+10),C
	LD	(IY+11),B
;  827	         }
;  828	         else
.LINE 828

	JMP	L_208
L_201:
;  829	         {
;  830	            printf("\nThere is no way to go up!\n");
	LD	BC,L__185
	PUSH	BC
.LINE 830

	CALL	_printf
	POP	BC
;  831	         }
;  832	         break;
.LINE 832

	JMP	L_208
;  833	
;  834	      case 'd':
L_203:
.LINE 834

;  835	         if ( map[room].d > RM_NULL )
.LINE 835

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	BC,132
	LD	IY,HL
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	BC,HL
	LD	HL,16777215
	OR	A,A
	SBC	HL,BC
	JP	P,L_205
;  836	         {
;  837	            game->current_room = map[room].d;
	LD	DE,(IX+6)
.LINE 837

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	BC,132
	LD	IY,HL
	CALL	__sldiy
	LD	IY,DE
	LD	BC,HL
	LD	(IY+10),C
	LD	(IY+11),B
;  838	         }
;  839	         else
.LINE 839

	JMP	L_208
L_205:
;  840	         {
;  841	            printf("\nThere is no way to go down!\n");
	LD	BC,L__187
	PUSH	BC
.LINE 841

	CALL	_printf
	POP	BC
;  842	         }
;  843	         break;
.LINE 843

	JMP	L_208
;  844	
;  845	      default:
L_207:
.LINE 845

;  846	         printf("\nUnknown direction.\n");
	LD	BC,L__188
	PUSH	BC
.LINE 846

	CALL	_printf
	POP	BC
;  847	         break;
;  848	   }
;  849	}
L_208:
.LINE 849

	LD	SP,IX
	POP	IX
	RET	


;**************************** _HandleDirection ***************************
;Name                         Addr/Register   Size   Type
;_printf                             IMPORT  -----   function
;_map                                IMPORT    140   variable
;room                                  IX-2      2   variable
;dir                                   IX+9      1   parameter
;game                                  IX+6      3   parameter


; Stack Frame Size: 17 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "HandleDirection",849,"_HandleDirection"
	SEGMENT STRSECT
L__177:
	DB	10
	DB	"There is no way to go north!"
	DB	10,0
L__179:
	DB	10
	DB	"There is no way to go south!"
	DB	10,0
L__181:
	DB	10
	DB	"There is no way to go east!"
	DB	10,0
L__183:
	DB	10
	DB	"There is no way to go west!"
	DB	10,0
L__185:
	DB	10
	DB	"There is no way to go up!"
	DB	10,0
L__187:
	DB	10
	DB	"There is no way to go down!"
	DB	10,0
L__188:
	DB	10
	DB	"Unknown direction."
	DB	10,0
	SEGMENT code
;  850	
;  851	
;  852	/* HandleLetterCmd() - handle single letter command
;  853	 *
;  854	 */
;  855	void HandleLetterCmd(GAME_S_T *game)
;  856	{
_HandleLetterCmd:
.DEFINE "_HandleLetterCmd"

.VALUE _HandleLetterCmd

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "HandleLetterCmd",856,"_HandleLetterCmd"

.LINE 856

.DEFINE "game"

.CLASS 65

.VALUE 6

.TAG "game_s_t"

.TYPE 40

.ENDEF

;  857	   switch( game->list[0].cmd[0] )
.LINE 857

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	A,(IY)
	LD	B,A
	SEXT	HL
	LD	L,B
	LD	DE,11
	LD	BC,L__190
	CALL	__case
	JP	(HL)
L__190:
	DW	98
	DB	0
	JMP	L_219
	DW	100
	DB	0
	JMP	L_214
	DW	101
	DB	0
	JMP	L_211
	DW	104
	DB	0
	JMP	L_221
	DW	105
	DB	0
	JMP	L_218
	DW	108
	DB	0
	JMP	L_217
	DW	110
	DB	0
	JMP	L_209
	DW	115
	DB	0
	JMP	L_210
	DW	117
	DB	0
	JMP	L_213
	DW	118
	DB	0
	JMP	L_220
	DW	119
	DB	0
	JMP	L_212
	JMP	L_222
;  858	   {
;  859	      case 'n':
L_209:
.LINE 859

;  860	      case 's':
L_210:
.LINE 860

;  861	      case 'e':
L_211:
.LINE 861

;  862	      case 'w':
L_212:
.LINE 862

;  863	      case 'u':
L_213:
.LINE 863

;  864	      case 'd':
L_214:
.LINE 864

;  865	         if ( CheckLamp(game) )
	LD	BC,(IX+6)
	PUSH	BC
.LINE 865

	LD	(IX+-3),IY
	CALL	_CheckLamp
	LD	IY,(IX+-3)
	POP	BC
	OR	A,A
	JR	Z,L_223
;  866	            HandleDirection(game, game->list[0].cmd[0]);
.LINE 866

	LD	IY,(IX+6)
	LD	BC,311
	CALL	__bldiy
	LD	C,A
	PUSH	BC
	LD	BC,(IX+6)
	PUSH	BC
	CALL	_HandleDirection
	POP	BC
	POP	BC
;  867	         break;
.LINE 867

	JMP	L_223
;  868	      case 'l':
L_217:
.LINE 868

;  869	         HandleLook(game);
	LD	BC,(IX+6)
	PUSH	BC
.LINE 869

	CALL	_HandleLook
	POP	BC
;  870	         break;
.LINE 870

	JMP	L_223
;  871	      case 'i':
L_218:
.LINE 871

;  872	         HandleInventory(game);
	LD	BC,(IX+6)
	PUSH	BC
.LINE 872

	CALL	_HandleInventory
	POP	BC
;  873	         break;
.LINE 873

	JMP	L_223
;  874	      case 'b':
L_219:
.LINE 874

;  875	         game->verbose = FALSE;
.LINE 875

	LD	IY,(IX+6)
	XOR	A,A
	LD	(IY+7),A
;  876	         printf("\nBrief mode\n");
	LD	BC,L__192
	PUSH	BC
.LINE 876

	CALL	_printf
	POP	BC
;  877	         break;
.LINE 877

	JMP	L_223
;  878	      case 'v':
L_220:
.LINE 878

;  879	         game->verbose = TRUE;
.LINE 879

	LD	IY,(IX+6)
	LD	A,1
	LD	(IY+7),A
;  880	         printf("\nVerbose mode\n");
	LD	BC,L__193
	PUSH	BC
.LINE 880

	CALL	_printf
	POP	BC
;  881	         break;
.LINE 881

	JMP	L_223
;  882	      case 'h':
L_221:
.LINE 882

;  883	         HandleHelp();
.LINE 883

	CALL	_HandleHelp
;  884	         break;
.LINE 884

	JMP	L_223
;  885	      default:
L_222:
.LINE 885

;  886	         printf("\nI don't know how to - %s\n", game->list[0].cmd);
.LINE 886

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,L__194
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
;  887	         break;
;  888	   }
;  889	}
L_223:
.LINE 889

	LD	SP,IX
	POP	IX
	RET	


;**************************** _HandleLetterCmd ***************************
;Name                         Addr/Register   Size   Type
;_printf                             IMPORT  -----   function
;_CheckLamp                          IMPORT  -----   function
;game                                  IX+6      3   parameter


; Stack Frame Size: 12 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "HandleLetterCmd",889,"_HandleLetterCmd"
	SEGMENT STRSECT
L__192:
	DB	10
	DB	"Brief mode"
	DB	10,0
L__193:
	DB	10
	DB	"Verbose mode"
	DB	10,0
L__194:
	DB	10
	DB	"I don't know how to - %s"
	DB	10,0
	SEGMENT code
;  890	
;  891	
;  892	/* HandleSingleCmd() - handle single word command
;  893	 *
;  894	 */
;  895	void HandleSingleCmd(GAME_S_T *game)
;  896	{
_HandleSingleCmd:
.DEFINE "_HandleSingleCmd"

.VALUE _HandleSingleCmd

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "HandleSingleCmd",896,"_HandleSingleCmd"

.LINE 896

.DEFINE "game"

.CLASS 65

.VALUE 6

.TAG "game_s_t"

.TYPE 40

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
;  897	   if ( strcmp( game->list[0].cmd, "help" ) == 0 )
	LD	BC,L__196
	PUSH	BC
.LINE 897

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	(IX+-3),IY
	CALL	_strcmp
	LD	IY,(IX+-3)
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_342
;  898	   {
;  899	      HandleHelp();
.LINE 899

	CALL	_HandleHelp
;  900	   }
;  901	   else if ( strcmp( game->list[0].cmd, "look" ) == 0 )
.LINE 901

	JMP	L_343
L_342:
	LD	BC,L__198
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	(IX+-3),IY
	CALL	_strcmp
	LD	IY,(IX+-3)
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_340
;  902	   {
;  903	      HandleLook(game);
	LD	BC,(IX+6)
	PUSH	BC
.LINE 903

	CALL	_HandleLook
	POP	BC
;  904	   }
;  905	   else if ( strcmp( game->list[0].cmd, "north" ) == 0 
.LINE 905

	JMP	L_343
L_340:
;  906			|| strcmp( game->list[0].cmd, "south" ) == 0 
	LD	BC,L__200
	PUSH	BC
.LINE 906

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	(IX+-3),IY
	CALL	_strcmp
	LD	IY,(IX+-3)
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_337
;  907			|| strcmp( game->list[0].cmd, "east" ) == 0 
	LD	BC,L__202
	PUSH	BC
.LINE 907

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	(IX+-3),IY
	CALL	_strcmp
	LD	IY,(IX+-3)
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_337
;  908			|| strcmp( game->list[0].cmd, "west" ) == 0 
	LD	BC,L__204
	PUSH	BC
.LINE 908

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	(IX+-3),IY
	CALL	_strcmp
	LD	IY,(IX+-3)
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_337
;  909			|| strcmp( game->list[0].cmd, "up" ) == 0 
	LD	BC,L__206
	PUSH	BC
.LINE 909

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	(IX+-3),IY
	CALL	_strcmp
	LD	IY,(IX+-3)
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_337
;  910			|| strcmp( game->list[0].cmd, "down" ) == 0 )
	LD	BC,L__208
	PUSH	BC
.LINE 910

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	(IX+-3),IY
	CALL	_strcmp
	LD	IY,(IX+-3)
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_337
	LD	BC,L__210
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	(IX+-3),IY
	CALL	_strcmp
	LD	IY,(IX+-3)
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_338
L_337:
;  911	   {
;  912	      if ( CheckLamp(game) )
	LD	BC,(IX+6)
	PUSH	BC
.LINE 912

	LD	(IX+-3),IY
	CALL	_CheckLamp
	LD	IY,(IX+-3)
	POP	BC
	OR	A,A
	JR	Z,L_343
;  913	         HandleDirection(game, game->list[0].cmd[0]);
.LINE 913

	LD	IY,(IX+6)
	LD	BC,311
	CALL	__bldiy
	LD	C,A
	PUSH	BC
	LD	BC,(IX+6)
	PUSH	BC
	CALL	_HandleDirection
	POP	BC
	POP	BC
;  914	   }
;  915	   else if ( strcmp( game->list[0].cmd, "inv" ) == 0 )
.LINE 915

	JMP	L_343
L_338:
	LD	BC,L__213
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_336
;  916	   {
;  917	      HandleInventory(game);
	LD	BC,(IX+6)
	PUSH	BC
.LINE 917

	CALL	_HandleInventory
	POP	BC
;  918	   }
;  919	   else if ( strcmp( game->list[0].cmd, "load" ) == 0 )
.LINE 919

	JMP	L_343
L_336:
	LD	BC,L__215
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_334
;  920	   {
;  921	      HandleLoad(game);
	LD	BC,(IX+6)
	PUSH	BC
.LINE 921

	CALL	_HandleLoad
	POP	BC
;  922	   }
;  923	   else if ( strcmp( game->list[0].cmd, "save" ) == 0 )
.LINE 923

	JMP	L_343
L_334:
	LD	BC,L__217
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_332
;  924	   {
;  925	      HandleSave(game);
	LD	BC,(IX+6)
	PUSH	BC
.LINE 925

	CALL	_HandleSave
	POP	BC
;  926	   }
;  927	   else if ( strcmp( game->list[0].cmd, "new" ) == 0 )
.LINE 927

	JMP	L_343
L_332:
	LD	BC,L__219
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_330
;  928	   {
;  929	      HandleNew(game);
	LD	BC,(IX+6)
	PUSH	BC
.LINE 929

	CALL	_HandleNew
	POP	BC
;  930	   }
;  931	   else if ( strcmp( game->list[0].cmd, "on" ) == 0 )
.LINE 931

	JMP	L_343
L_330:
	LD	BC,L__221
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_328
;  932	   {
;  933	      HandleOn(game);
	LD	BC,(IX+6)
	PUSH	BC
.LINE 933

	CALL	_HandleOn
	POP	BC
;  934	   }
;  935	   else if ( strcmp( game->list[0].cmd, "off" ) == 0 )
.LINE 935

	JMP	L_343
L_328:
	LD	BC,L__223
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_326
;  936	   {
;  937	      HandleOff(game);
	LD	BC,(IX+6)
	PUSH	BC
.LINE 937

	CALL	_HandleOff
	POP	BC
;  938	   }
;  939	   else if ( strcmp( game->list[0].cmd, "enter" ) == 0 )
.LINE 939

	JMP	L_343
L_326:
	LD	BC,L__225
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_324
;  940	   {
;  941	      HandleEnter(game);
	LD	BC,(IX+6)
	PUSH	BC
.LINE 941

	CALL	_HandleEnter
	POP	BC
;  942	   }
;  943	   else if ( strcmp( game->list[0].cmd, "exit" ) == 0 )
.LINE 943

	JMP	L_343
L_324:
	LD	BC,L__227
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_322
;  944	   {
;  945	      HandleExit(game);
	LD	BC,(IX+6)
	PUSH	BC
.LINE 945

	CALL	_HandleExit
	POP	BC
;  946	   }
;  947	   else if ( strcmp( game->list[0].cmd, "swim" ) == 0 )
.LINE 947

	JMP	L_343
L_322:
	LD	BC,L__229
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_320
;  948	   {
;  949	      HandleSwim(game);
	LD	BC,(IX+6)
	PUSH	BC
.LINE 949

	CALL	_HandleSwim
	POP	BC
;  950	   }
;  951	   else if ( strcmp( game->list[0].cmd, "jump" ) == 0 )
.LINE 951

	JMP	L_343
L_320:
	LD	BC,L__231
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_318
;  952	   {
;  953	      HandleJump(game);
	LD	BC,(IX+6)
	PUSH	BC
.LINE 953

	CALL	_HandleJump
	POP	BC
;  954	   }
;  955	   else if ( strcmp( game->list[0].cmd, "brief" ) == 0 )
.LINE 955

	JMP	L_343
L_318:
	LD	BC,L__233
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_316
;  956	   {
;  957	      game->verbose = FALSE;
.LINE 957

	LD	IY,(IX+6)
	XOR	A,A
	LD	(IY+7),A
;  958	      printf("\nBrief mode\n");
	LD	BC,L__235
	PUSH	BC
.LINE 958

	CALL	_printf
	POP	BC
;  959	   }
;  960	   else if ( strcmp( game->list[0].cmd, "verbose" ) == 0 )
.LINE 960

	JMP	L_343
L_316:
	LD	BC,L__236
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_314
;  961	   {
;  962	      game->verbose = TRUE;
.LINE 962

	LD	IY,(IX+6)
	LD	A,1
	LD	(IY+7),A
;  963	      printf("\nVerbose mode.\n");
	LD	BC,L__238
	PUSH	BC
.LINE 963

	CALL	_printf
	POP	BC
;  964	   }
;  965	   else if ( strcmp( game->list[0].cmd, "wait" ) == 0 )
.LINE 965

	JMP	L_343
L_314:
	LD	BC,L__239
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_312
;  966	   {
;  967	      game->moves++;
	LD	DE,(IX+6)
.LINE 967

	LD	IY,(IX+6)
	LD	BC,(IY+18)
	INC	BC
	LD	IY,DE
	LD	(IY+18),BC
;  968	      printf("\nTime passes.\n");
	LD	BC,L__241
	PUSH	BC
.LINE 968

	CALL	_printf
	POP	BC
;  969	   }
;  970	   else if ( strcmp( game->list[0].cmd, "score" ) == 0 )
.LINE 970

	JMP	L_343
L_312:
	LD	BC,L__242
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_310
;  971	   {
;  972	      ShowScore(game);
	LD	BC,(IX+6)
	PUSH	BC
.LINE 972

	CALL	_ShowScore
	POP	BC
;  973	   }
;  974	   else if ( strcmp( game->list[0].cmd, "health" ) == 0 
.LINE 974

	JMP	L_343
L_310:
;  975			|| strcmp( game->list[0].cmd, "diagnose" ) == 0 )
	LD	BC,L__244
	PUSH	BC
.LINE 975

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_307
	LD	BC,L__246
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_308
L_307:
;  976	   {
;  977	      printf("\nYour health is %d out of %d.\n", 
;  978			game->health, MAX_HEALTH);
	LD	BC,100
	PUSH	BC
.LINE 978

	LD	IY,(IX+6)
	LD	BC,(IY+15)
	PUSH	BC
	LD	BC,L__248
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
	POP	BC
;  979	   }
;  980	   else if ( strcmp( game->list[0].cmd, "about" ) == 0 )
.LINE 980

	JMP	L_343
L_308:
	LD	BC,L__249
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_306
;  981	   {
;  982	      DisplayTitle();
.LINE 982

	CALL	_DisplayTitle
;  983	   }
;  984	   else if ( strcmp( game->list[0].cmd, "hpl" ) == 0 )
.LINE 984

	JMP	L_343
L_306:
	LD	BC,L__251
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_304
;  985	   {
;  986	      game->debug_enabled = TRUE;
.LINE 986

	LD	IY,(IX+6)
	LD	A,1
	LD	(IY+6),A
;  987	      printf("\nOkay.\n");
	LD	BC,L__253
	PUSH	BC
.LINE 987

	CALL	_printf
	POP	BC
;  988	   }
;  989	   else if ( strcmp( game->list[0].cmd, "whoami" ) == 0 )
.LINE 989

	JMP	L_343
L_304:
	LD	BC,L__254
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_302
;  990	   {
;  991	      printf("\nYou are a poor slub who got can't even get to work on time.\n");
	LD	BC,L__256
	PUSH	BC
.LINE 991

	CALL	_printf
	POP	BC
;  992	   }
;  993	   else if ( strcmp( game->list[0].cmd, "amiga" ) == 0 )
.LINE 993

	JMP	L_343
L_302:
	LD	BC,L__257
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_300
;  994	   {
;  995	      printf("\nLong live the Amiga!!!!\n");
	LD	BC,L__259
	PUSH	BC
.LINE 995

	CALL	_printf
	POP	BC
;  996	   }
;  997	   else if ( strcmp( game->list[0].cmd, "thuria" ) == 0 )
.LINE 997

	JMP	L_343
L_300:
	LD	BC,L__260
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_298
;  998	   {
;  999	      printf("\nThuria is a mystical land where dreams oft come true.  But in your \ncase think of it as a pain in the butt.\n");
	LD	BC,L__262
	PUSH	BC
.LINE 999

	CALL	_printf
	POP	BC
; 1000	   }
; 1001	   else if ( strcmp( game->list[0].cmd, "teh" ) == 0 )
.LINE 1001

	JMP	L_343
L_298:
	LD	BC,L__263
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_296
; 1002	   {
; 1003	      printf("\nType much?\n");
	LD	BC,L__265
	PUSH	BC
.LINE 1003

	CALL	_printf
	POP	BC
; 1004	   }
; 1005	   else if ( strcmp( game->list[0].cmd, "take" ) == 0 
.LINE 1005

	JMP	L_343
L_296:
; 1006			|| strcmp( game->list[0].cmd, "drop" ) == 0
	LD	BC,L__266
	PUSH	BC
.LINE 1006

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_293
; 1007			|| strcmp( game->list[0].cmd, "wave" ) == 0
	LD	BC,L__268
	PUSH	BC
.LINE 1007

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_293
; 1008			|| strcmp( game->list[0].cmd, "open" ) == 0 
	LD	BC,L__270
	PUSH	BC
.LINE 1008

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_293
; 1009			|| strcmp( game->list[0].cmd, "close" ) == 0 
	LD	BC,L__272
	PUSH	BC
.LINE 1009

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_293
; 1010			|| strcmp( game->list[0].cmd, "play" ) == 0
	LD	BC,L__274
	PUSH	BC
.LINE 1010

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_293
; 1011			|| strcmp( game->list[0].cmd, "pick" ) == 0
	LD	BC,L__276
	PUSH	BC
.LINE 1011

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_293
; 1012			|| strcmp( game->list[0].cmd, "feed" ) == 0 
	LD	BC,L__278
	PUSH	BC
.LINE 1012

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_293
; 1013			|| strcmp( game->list[0].cmd, "drink" ) == 0 
	LD	BC,L__280
	PUSH	BC
.LINE 1013

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_293
; 1014			|| strcmp( game->list[0].cmd, "eat" ) == 0 
	LD	BC,L__282
	PUSH	BC
.LINE 1014

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_293
; 1015			|| strcmp( game->list[0].cmd, "kill" ) == 0 
	LD	BC,L__284
	PUSH	BC
.LINE 1015

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_293
; 1016			|| strcmp( game->list[0].cmd, "wear" ) == 0 
	LD	BC,L__286
	PUSH	BC
.LINE 1016

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_293
; 1017			|| strcmp( game->list[0].cmd, "read" ) == 0 
	LD	BC,L__288
	PUSH	BC
.LINE 1017

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_293
; 1018			|| strcmp( game->list[0].cmd, "move" ) == 0 
	LD	BC,L__290
	PUSH	BC
.LINE 1018

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_293
; 1019			|| strcmp( game->list[0].cmd, "answer" ) == 0 
	LD	BC,L__292
	PUSH	BC
.LINE 1019

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_293
; 1020			|| strcmp( game->list[0].cmd, "break" ) == 0 
	LD	BC,L__294
	PUSH	BC
.LINE 1020

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_293
; 1021			|| strcmp( game->list[0].cmd, "unlock" ) == 0 
	LD	BC,L__296
	PUSH	BC
.LINE 1021

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_293
; 1022			|| strcmp( game->list[0].cmd, "examine" ) == 0 )
	LD	BC,L__298
	PUSH	BC
.LINE 1022

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_293
	LD	BC,L__300
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_294
L_293:
; 1023	   {
; 1024	      printf("\nWhat do you wish to %s?\n", game->list[0].cmd);
.LINE 1024

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,L__302
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
; 1025	   }
; 1026	   else if ( strcmp( game->list[0].cmd, "ls" ) == 0 
.LINE 1026

	JMP	L_343
L_294:
; 1027			|| strcmp( game->list[0].cmd, "dir" ) == 0
	LD	BC,L__303
	PUSH	BC
.LINE 1027

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_291
; 1028			|| strcmp( game->list[0].cmd, "reboot" ) == 0
	LD	BC,L__305
	PUSH	BC
.LINE 1028

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_291
; 1029			|| strcmp( game->list[0].cmd, "ps" ) == 0 )
	LD	BC,L__307
	PUSH	BC
.LINE 1029

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_291
	LD	BC,L__309
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_292
L_291:
; 1030	   {
; 1031	      printf("\nThis is not a computer, so cut out the geek lingo!\n");
	LD	BC,L__311
	PUSH	BC
.LINE 1031

	CALL	_printf
	POP	BC
; 1032	   }
; 1033	   else if ( strcmp( game->list[0].cmd, "jesus" ) == 0 
.LINE 1033

	JMP	L_343
L_292:
; 1034			|| strcmp( game->list[0].cmd, "damn" ) == 0
	LD	BC,L__312
	PUSH	BC
.LINE 1034

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_289
; 1035			|| strcmp( game->list[0].cmd, "hell" ) == 0
	LD	BC,L__314
	PUSH	BC
.LINE 1035

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_289
; 1036			|| strcmp( game->list[0].cmd, "fuck" ) == 0 )
	LD	BC,L__316
	PUSH	BC
.LINE 1036

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_289
	LD	BC,L__318
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_290
L_289:
; 1037	   {
; 1038	      if (game->adult_enabled) 
.LINE 1038

	LD	IY,(IX+6)
	LD	A,(IY+2)
	OR	A,A
	JR	Z,L_259
; 1039	         printf("\nCursing will not help your situation.\n");
	LD	BC,L__321
	PUSH	BC
.LINE 1039

	CALL	_printf
	POP	BC
; 1040	      else
.LINE 1040

	JMP	L_343
L_259:
; 1041	      {
; 1042	         game->adult_count++;
	LD	DE,(IX+6)
.LINE 1042

	LD	IY,(IX+6)
	LD	BC,(IY+3)
	INC	BC
	LD	IY,DE
	LD	(IY+3),BC
; 1043	         if ( (game->adult_count % ATRG) == 0 )
.LINE 1043

	LD	IY,(IX+6)
	LD	BC,(IY+3)
	LD	HL,5
	CALL	__irems
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_257
; 1044	         {
; 1045	            printf("\nBoy, you really are obsessed!\n");
	LD	BC,L__323
	PUSH	BC
.LINE 1045

	CALL	_printf
	POP	BC
; 1046	         }
; 1047	         else
.LINE 1047

	JMP	L_343
L_257:
; 1048	         {
; 1049	            printf("\nI don't know how to - %s\n", game->list[0].cmd);
.LINE 1049

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,L__324
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
; 1050	         }
; 1051	      }
; 1052	   }
; 1053	   else if ( strcmp( game->list[0].cmd, "shit" ) == 0
.LINE 1053

	JMP	L_343
L_290:
; 1054			|| strcmp( game->list[0].cmd, "piss" ) == 0 
	LD	BC,L__325
	PUSH	BC
.LINE 1054

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_287
; 1055			|| strcmp( game->list[0].cmd, "puke" ) == 0 )
	LD	BC,L__327
	PUSH	BC
.LINE 1055

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_287
	LD	BC,L__329
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_288
L_287:
; 1056	   {
; 1057	      if (game->adult_enabled) 
.LINE 1057

	LD	IY,(IX+6)
	LD	A,(IY+2)
	OR	A,A
	JR	Z,L_266
; 1058	         printf("\nDon't %s in my dungeon!\n", game->list[0].cmd);
.LINE 1058

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,L__332
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
; 1059	      else
.LINE 1059

	JMP	L_343
L_266:
; 1060	      {
; 1061	         game->adult_count++;
	LD	DE,(IX+6)
.LINE 1061

	LD	IY,(IX+6)
	LD	BC,(IY+3)
	INC	BC
	LD	IY,DE
	LD	(IY+3),BC
; 1062	         if ( (game->adult_count % ATRG) == 0 )
.LINE 1062

	LD	IY,(IX+6)
	LD	BC,(IY+3)
	LD	HL,5
	CALL	__irems
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_264
; 1063	         {
; 1064	            printf("\nBoy, you really are obsessed!\n");
	LD	BC,L__334
	PUSH	BC
.LINE 1064

	CALL	_printf
	POP	BC
; 1065	         }
; 1066	         else
.LINE 1066

	JMP	L_343
L_264:
; 1067	         {
; 1068	            printf("\nI don't know how to - %s\n", game->list[0].cmd);
.LINE 1068

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,L__335
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
; 1069	         }
; 1070	      }
; 1071	   }
; 1072	   else if ( strcmp( game->list[0].cmd, "xxx" ) == 0 
.LINE 1072

	JMP	L_343
L_288:
; 1073			|| strcmp( game->list[0].cmd, "sex" ) == 0 )
	LD	BC,L__336
	PUSH	BC
.LINE 1073

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_285
	LD	BC,L__338
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_286
L_285:
; 1074	   {
; 1075	      game->adult_count++;
	LD	DE,(IX+6)
.LINE 1075

	LD	IY,(IX+6)
	LD	BC,(IY+3)
	INC	BC
	LD	IY,DE
	LD	(IY+3),BC
; 1076	      if ( (game->adult_count % ATRG) == 0 )
.LINE 1076

	LD	IY,(IX+6)
	LD	BC,(IY+3)
	LD	HL,5
	CALL	__irems
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_270
; 1077	      {
; 1078	         printf("\nBoy, you really are obsessed!\n");
	LD	BC,L__341
	PUSH	BC
.LINE 1078

	CALL	_printf
	POP	BC
; 1079	      }
; 1080	      else
.LINE 1080

	JMP	L_343
L_270:
; 1081	      {
; 1082	         printf("\nI don't know how to - %s\n", game->list[0].cmd);
.LINE 1082

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,L__342
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
; 1083	      }
; 1084	   }
; 1085	   else if ( strcmp( game->list[0].cmd, "cock" ) == 0
.LINE 1085

	JMP	L_343
L_286:
; 1086			|| strcmp( game->list[0].cmd, "cunt" ) == 0
	LD	BC,L__343
	PUSH	BC
.LINE 1086

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_283
; 1087			|| strcmp( game->list[0].cmd, "pussy" ) == 0
	LD	BC,L__345
	PUSH	BC
.LINE 1087

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_283
; 1088			|| strcmp( game->list[0].cmd, "dick" ) == 0
	LD	BC,L__347
	PUSH	BC
.LINE 1088

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_283
; 1089			|| strcmp( game->list[0].cmd, "penis" ) == 0
	LD	BC,L__349
	PUSH	BC
.LINE 1089

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_283
; 1090			|| strcmp( game->list[0].cmd, "vagina" ) == 0
	LD	BC,L__351
	PUSH	BC
.LINE 1090

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_283
; 1091			|| strcmp( game->list[0].cmd, "tit" ) == 0 )
	LD	BC,L__353
	PUSH	BC
.LINE 1091

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_283
	LD	BC,L__355
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_284
L_283:
; 1092	   {
; 1093	      if (game->adult_enabled) 
.LINE 1093

	LD	IY,(IX+6)
	LD	A,(IY+2)
	OR	A,A
	JR	Z,L_281
; 1094	         printf("\nYou want me to touch your %s?\n", game->list[0].cmd);
.LINE 1094

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,L__358
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
; 1095	      else
.LINE 1095

	JMP	L_343
L_281:
; 1096	      {
; 1097	         game->adult_count++;
	LD	DE,(IX+6)
.LINE 1097

	LD	IY,(IX+6)
	LD	BC,(IY+3)
	INC	BC
	LD	IY,DE
	LD	(IY+3),BC
; 1098	         if ( (game->adult_count % ATRG) == 0 )
.LINE 1098

	LD	IY,(IX+6)
	LD	BC,(IY+3)
	LD	HL,5
	CALL	__irems
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_279
; 1099	         {
; 1100	            printf("\nBoy, you really are obsessed!\n");
	LD	BC,L__360
	PUSH	BC
.LINE 1100

	CALL	_printf
	POP	BC
; 1101	         }
; 1102	         else
.LINE 1102

	JMP	L_343
L_279:
; 1103	         {
; 1104	            printf("\nI don't know how to - %s\n", game->list[0].cmd);
.LINE 1104

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,L__361
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
; 1105	         }
; 1106	      }
; 1107	   }
; 1108	   else
.LINE 1108

	JMP	L_343
L_284:
; 1109	   {
; 1110	      if ( ! HandleMagic( game ) )
	LD	BC,(IX+6)
	PUSH	BC
.LINE 1110

	CALL	_HandleMagic
	POP	BC
	OR	A,A
	JR	NZ,L_343
; 1111	      {
; 1112	         printf("\nI don't know how to - %s\n", game->list[0].cmd);
.LINE 1112

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,L__363
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
; 1113	      }
; 1114	   }
; 1115	}
L_343:
.LINE 1115

	LD	SP,IX
	POP	IX
	RET	


;**************************** _HandleSingleCmd ***************************
;Name                         Addr/Register   Size   Type
;_DisplayTitle                       IMPORT  -----   function
;_ShowScore                          IMPORT  -----   function
;_printf                             IMPORT  -----   function
;_CheckLamp                          IMPORT  -----   function
;_strcmp                             IMPORT  -----   function
;game                                  IX+6      3   parameter


; Stack Frame Size: 12 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "HandleSingleCmd",1115,"_HandleSingleCmd"
	SEGMENT STRSECT
L__196:
	DB	"help"
	DB	0
L__198:
	DB	"look"
	DB	0
L__200:
	DB	"north"
	DB	0
L__202:
	DB	"south"
	DB	0
L__204:
	DB	"east"
	DB	0
L__206:
	DB	"west"
	DB	0
L__208:
	DB	"up"
	DB	0
L__210:
	DB	"down"
	DB	0
L__213:
	DB	"inv"
	DB	0
L__215:
	DB	"load"
	DB	0
L__217:
	DB	"save"
	DB	0
L__219:
	DB	"new"
	DB	0
L__221:
	DB	"on"
	DB	0
L__223:
	DB	"off"
	DB	0
L__225:
	DB	"enter"
	DB	0
L__227:
	DB	"exit"
	DB	0
L__229:
	DB	"swim"
	DB	0
L__231:
	DB	"jump"
	DB	0
L__233:
	DB	"brief"
	DB	0
L__235:
	DB	10
	DB	"Brief mode"
	DB	10,0
L__236:
	DB	"verbose"
	DB	0
L__238:
	DB	10
	DB	"Verbose mode."
	DB	10,0
L__239:
	DB	"wait"
	DB	0
L__241:
	DB	10
	DB	"Time passes."
	DB	10,0
L__242:
	DB	"score"
	DB	0
L__244:
	DB	"health"
	DB	0
L__246:
	DB	"diagnose"
	DB	0
L__248:
	DB	10
	DB	"Your health is %d out of %d."
	DB	10,0
L__249:
	DB	"about"
	DB	0
L__251:
	DB	"hpl"
	DB	0
L__253:
	DB	10
	DB	"Okay."
	DB	10,0
L__254:
	DB	"whoami"
	DB	0
L__256:
	DB	10
	DB	"You are a poor slub who got can't even get to work on time."
	DB	10,0
L__257:
	DB	"amiga"
	DB	0
L__259:
	DB	10
	DB	"Long live the Amiga!!!!"
	DB	10,0
L__260:
	DB	"thuria"
	DB	0
L__262:
	DB	10
	DB	"Thuria is a mystical land where dreams oft come true.  But in your "
	DB	10
	DB	"case think of it as a pain in the butt."
	DB	10,0
L__263:
	DB	"teh"
	DB	0
L__265:
	DB	10
	DB	"Type much?"
	DB	10,0
L__266:
	DB	"take"
	DB	0
L__268:
	DB	"drop"
	DB	0
L__270:
	DB	"wave"
	DB	0
L__272:
	DB	"open"
	DB	0
L__274:
	DB	"close"
	DB	0
L__276:
	DB	"play"
	DB	0
L__278:
	DB	"pick"
	DB	0
L__280:
	DB	"feed"
	DB	0
L__282:
	DB	"drink"
	DB	0
L__284:
	DB	"eat"
	DB	0
L__286:
	DB	"kill"
	DB	0
L__288:
	DB	"wear"
	DB	0
L__290:
	DB	"read"
	DB	0
L__292:
	DB	"move"
	DB	0
L__294:
	DB	"answer"
	DB	0
L__296:
	DB	"break"
	DB	0
L__298:
	DB	"unlock"
	DB	0
L__300:
	DB	"examine"
	DB	0
L__302:
	DB	10
	DB	"What do you wish to %s?"
	DB	10,0
L__303:
	DB	"ls"
	DB	0
L__305:
	DB	"dir"
	DB	0
L__307:
	DB	"reboot"
	DB	0
L__309:
	DB	"ps"
	DB	0
L__311:
	DB	10
	DB	"This is not a computer, so cut out the geek lingo!"
	DB	10,0
L__312:
	DB	"jesus"
	DB	0
L__314:
	DB	"damn"
	DB	0
L__316:
	DB	"hell"
	DB	0
L__318:
	DB	"fuck"
	DB	0
L__321:
	DB	10
	DB	"Cursing will not help your situation."
	DB	10,0
L__323:
	DB	10
	DB	"Boy, you really are obsessed!"
	DB	10,0
L__324:
	DB	10
	DB	"I don't know how to - %s"
	DB	10,0
L__325:
	DB	"shit"
	DB	0
L__327:
	DB	"piss"
	DB	0
L__329:
	DB	"puke"
	DB	0
L__332:
	DB	10
	DB	"Don't %s in my dungeon!"
	DB	10,0
L__334:
	DB	10
	DB	"Boy, you really are obsessed!"
	DB	10,0
L__335:
	DB	10
	DB	"I don't know how to - %s"
	DB	10,0
L__336:
	DB	"xxx"
	DB	0
L__338:
	DB	"sex"
	DB	0
L__341:
	DB	10
	DB	"Boy, you really are obsessed!"
	DB	10,0
L__342:
	DB	10
	DB	"I don't know how to - %s"
	DB	10,0
L__343:
	DB	"cock"
	DB	0
L__345:
	DB	"cunt"
	DB	0
L__347:
	DB	"pussy"
	DB	0
L__349:
	DB	"dick"
	DB	0
L__351:
	DB	"penis"
	DB	0
L__353:
	DB	"vagina"
	DB	0
L__355:
	DB	"tit"
	DB	0
L__358:
	DB	10
	DB	"You want me to touch your %s?"
	DB	10,0
L__360:
	DB	10
	DB	"Boy, you really are obsessed!"
	DB	10,0
L__361:
	DB	10
	DB	"I don't know how to - %s"
	DB	10,0
L__363:
	DB	10
	DB	"I don't know how to - %s"
	DB	10,0
	SEGMENT code
; 1116	
; 1117	
; 1118	/* HandleTake() - handle take object command
; 1119	 *
; 1120	 */
; 1121	void HandleTake(GAME_S_T *game)
; 1122	{
_HandleTake:
.DEFINE "_HandleTake"

.VALUE _HandleTake

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "HandleTake",1122,"_HandleTake"

.LINE 1122

.DEFINE "game"

.CLASS 65

.VALUE 6

.TAG "game_s_t"

.TYPE 40

.ENDEF

.DEFINE "i"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

.DEFINE "invcount"

.CLASS 65

.VALUE -5

.TYPE 3

.ENDEF

.DEFINE "obj"

.CLASS 65

.VALUE -7

.TYPE 3

.ENDEF

.DEFINE "found"

.CLASS 65

.VALUE -8

.TYPE 12

.ENDEF

; 1123	   BOOLEAN_T	found = FALSE;
.LINE 1123

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	IY,IX+-38
	LD	SP,IY
	LD	B,0
	LD	(IX+-8),B
; 1124	   INDEX_T	obj;
; 1125	   INDEX_T	invcount;
; 1126	   int		i;
; 1127	
; 1128	   if (game->current_room == RM_MAIN_CHAMBER)
.LINE 1128

	LD	IY,(IX+6)
	LD	BC,(IY+10)
	CALL	__stoi
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_369
	LD	(IX+-3),BC
; 1129	   {
; 1130	      for (i = 0; i < game->chest.count; i++)
.LINE 1130

	JMP	L_348
L_346:
; 1131	      {
; 1132	         obj = game->chest.list[i];
	LD	HL,(IX+-3)
	ADD	HL,HL
	LD	BC,HL
.LINE 1132

	LD	DE,(IX+6)
	LD	HL,132
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,(HL)
	LD	(IX+-7),C
	LD	(IX+-6),B
; 1133	         if ( strcmp(object[obj].key, game->list[1].cmd) == 0 )
.LINE 1133

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,(IX+-7)
	CALL	__stoi
	LD	BC,HL
	LD	HL,244
	CALL	__imuls
	LD	BC,_object
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+4
	LD	(IX+-38),IY
	CALL	_strcmp
	LD	IY,(IX+-38)
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_347
; 1134	         {
; 1135	            found = TRUE;
.LINE 1135

	LD	A,1
	LD	(IX+-8),A
; 1136	            break;
.LINE 1136

	JMP	L_353
; 1137	         }
; 1138	      }
L_347:
.LINE 1138

	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
L_348:
	LD	IY,(IX+6)
	LD	BC,130
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	BC,HL
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L_346
L_353:
; 1139	
; 1140	      if (found)
.LINE 1140

	LD	A,(IX+-8)
	OR	A,A
	JR	Z,L_352
; 1141	      {
; 1142	         /* remove item from chest */
; 1143	         game->chest.list[i] = game->chest.list[game->chest.count - 1];
	LD	IY,(IX+6)
	LD	BC,130
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	DEC	HL
	ADD	HL,HL
	LD	BC,HL
	LD	DE,(IX+6)
.LINE 1143

	LD	(IX+-32),DE	; spill
	LD	DE,(IX+6)
	LD	(IX+-35),DE	; spill
	LD	DE,(IX+-32)	; unspill
	LD	HL,132
	LD	(IX+-32),DE	; spill
	LD	DE,(IX+-35)	; unspill
	ADD	HL,DE
	LD	DE,(IX+-32)	; unspill
	ADD	HL,BC
	LD	IY,HL
	LD	HL,(IX+-3)
	ADD	HL,HL
	LD	BC,HL
	LD	HL,132
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,(IY)
	LD	(HL),C
	INC	HL
	LD	(HL),B
; 1144	         game->chest.count--;
	LD	DE,(IX+6)
.LINE 1144

	LD	BC,(IX+6)
	LD	IY,130
	ADD	IY,BC
	LD	IY,(IY)
	LEA	HL,IY+-1
	LD	BC,130
	LD	IY,DE
	CALL	__sstiy
; 1145	         /* add item to inventory */
; 1146	         game->inventory.list[game->inventory.count] = obj;
	LD	IY,(IX+6)
	LD	BC,(IY+108)
	CALL	__stoi
	ADD	HL,HL
	LD	BC,HL
.LINE 1146

	LD	DE,(IX+6)
	LD	HL,110
	ADD	HL,DE
	ADD	HL,BC
	LD	A,(IX+-7)
	LD	(HL),A
	INC	HL
	LD	A,(IX+-6)
	LD	(HL),A
; 1147	         game->inventory.count++;
	LD	DE,(IX+6)
.LINE 1147

	LD	IY,(IX+6)
	LD	BC,(IY+108)
	INC	BC
	LD	IY,DE
	LD	(IY+108),C
	LD	(IY+109),B
; 1148	         /* lower score for this item */
; 1149	         game->score -= object[obj].score;
	LD	BC,(IX+-7)
	CALL	__stoi
	LD	BC,HL
	LD	DE,(IX+6)
	LD	HL,244
	CALL	__imuls
	LD	BC,_object
	ADD	HL,BC
	LD	IY,HL
	LD	BC,(IY+2)
	CALL	__stoi
	LD	BC,HL
.LINE 1149

	LD	IY,(IX+6)
	LD	HL,(IY+12)
	OR	A,A
	SBC	HL,BC
	LD	IY,DE
	LD	(IY+12),HL
; 1150	         printf("\nTaken from treasure chest.\n");
	LD	BC,L__369
	PUSH	BC
.LINE 1150

	CALL	_printf
	POP	BC
; 1151	      }
; 1152	      else
.LINE 1152

	JMP	L_370
L_352:
; 1153	      {
; 1154	         printf("\nThe treasure chest doesn't have - %s.\n", game->list[1].cmd);
.LINE 1154

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,L__370
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
; 1155	      }
; 1156	   }
; 1157	   else
.LINE 1157

	JMP	L_370
L_369:
; 1158	   {
; 1159	      obj = map[game->current_room].object;
.LINE 1159

	LD	IY,(IX+6)
	LD	BC,(IY+10)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	BC,138
	LD	IY,HL
	CALL	__sldiy
	LD	BC,HL
	LD	(IX+-7),C
	LD	(IX+-6),B
; 1160	      invcount = game->inventory.count;
.LINE 1160

	LD	IY,(IX+6)
	LD	BC,(IY+108)
	LD	(IX+-5),C
	LD	(IX+-4),B
; 1161	
; 1162	      if (obj > OBJ_NULL)
.LINE 1162

	LD	BC,(IX+-7)
	CALL	__stoi
	LD	BC,HL
	LD	HL,16777215
	OR	A,A
	SBC	HL,BC
	JP	P,L_367
; 1163	      {
; 1164	         if ( strcmp( object[obj].key, game->list[1].cmd ) == 0)
.LINE 1164

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,(IX+-7)
	CALL	__stoi
	LD	BC,HL
	LD	HL,244
	CALL	__imuls
	LD	BC,_object
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+4
	LD	(IX+-38),IY
	CALL	_strcmp
	LD	IY,(IX+-38)
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_365
; 1165	         {
; 1166	            if ( (invcount + 1) < MAX_INV_OBJS )
.LINE 1166

	LD	BC,(IX+-5)
	CALL	__stoi
	INC	HL
	LD	BC,10
	OR	A,A
	SBC	HL,BC
	JP	P,L_363
; 1167	            {
; 1168	               if ( obj == OBJ_RUG 
; 1169				&& map[game->current_room].special == SE_BEAR_HUNGRY)
.LINE 1169

	LD	BC,(IX+-7)
	CALL	__stoi
	LD	BC,20
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_361
	LD	IY,(IX+6)
	LD	BC,(IY+10)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	BC,136
	LD	IY,HL
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	BC,22
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_361
; 1170	               {
; 1171	                  printf("\nThe sleeping bear prevents you from taking the rug.\n");
	LD	BC,L__376
	PUSH	BC
.LINE 1171

	CALL	_printf
	POP	BC
; 1172	               }
; 1173	               else if ( obj == OBJ_RUG 
.LINE 1173

	JMP	L_370
L_361:
; 1174				&& map[game->current_room].special == SE_BEAR_DEAD)
.LINE 1174

	LD	BC,(IX+-7)
	CALL	__stoi
	LD	BC,20
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_359
	LD	IY,(IX+6)
	LD	BC,(IY+10)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	BC,136
	LD	IY,HL
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	BC,24
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_359
; 1175	               {
; 1176	                  printf("\nThe dead bear prevents you from taking the rug.\n");
	LD	BC,L__379
	PUSH	BC
.LINE 1176

	CALL	_printf
	POP	BC
; 1177	               }
; 1178	               else if ( obj == OBJ_OIL )
.LINE 1178

	JMP	L_370
L_359:
	LD	BC,(IX+-7)
	CALL	__stoi
	LD	BC,36
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_357
; 1179	               {
; 1180	                  printf("\nYour lamp is now glowing brighter than ever.\n");
	LD	BC,L__381
	PUSH	BC
.LINE 1180

	LD	(IX+-38),IY
	CALL	_printf
	LD	IY,(IX+-38)
	POP	BC
; 1181	                  game->oil += CAN_OIL;
	LD	BC,(IX+6)
.LINE 1181

	LD	IY,(IX+6)
	LD	HL,(IY+21)
	LD	DE,150
	ADD	HL,DE
	LD	IY,BC
	LD	(IY+21),HL
; 1182	                  map[game->current_room].object = -1;
.LINE 1182

	LD	IY,(IX+6)
	LD	BC,(IY+10)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	IY,HL
	LD.LIS	HL,-1
	LD	BC,138
	CALL	__sstiy
; 1183	                  game->score += object[obj].score;
	LD	DE,(IX+6)
	LD	(IX+-11),BC	; spill
	LD	BC,(IX+6)
	LD	(IX+-23),BC	; spill
	LD	BC,(IX+-11)	; unspill
.LINE 1183

	LD	BC,(IX+-7)
	CALL	__stoi
	LD	BC,HL
; 1184	                  printf("\nTaken.\n");
	LD	HL,L__382
	PUSH	HL
	LD	HL,244
	CALL	__imuls
	LD	(IX+-26),BC	; spill
	LD	BC,_object
	LD	(IX+-29),BC	; spill
	LD	BC,(IX+-26)	; unspill
	LD	(IX+-26),BC	; spill
	LD	BC,(IX+-29)	; unspill
	ADD	HL,BC
	LD	BC,(IX+-26)	; unspill
	LD	IY,HL
	LD	BC,(IY+2)
	CALL	__stoi
	LD	IY,DE
	LD	DE,(IY+12)
	ADD	HL,DE
	LD	(IX+-11),BC	; spill
	LD	IY,(IX+-23)	; unspill
	LD	BC,(IX+-11)	; unspill
	LD	(IY+12),HL
.LINE 1184

	CALL	_printf
	POP	BC
; 1185	               }
; 1186	               else
.LINE 1186

	JMP	L_370
L_357:
; 1187	               {
; 1188	                  /* add item to inventory */
; 1189	                  game->inventory.list[invcount] = obj;
	LD	BC,(IX+-5)
	CALL	__stoi
	ADD	HL,HL
	LD	BC,HL
.LINE 1189

	LD	DE,(IX+6)
	LD	HL,110
	ADD	HL,DE
	ADD	HL,BC
	LD	A,(IX+-7)
	LD	(HL),A
	INC	HL
	LD	A,(IX+-6)
	LD	(HL),A
; 1190	                  game->inventory.count = invcount + 1;
	LD	IY,(IX+6)
.LINE 1190

	LD	BC,(IX+-5)
	CALL	__stoi
	INC	HL
	LD	BC,HL
	LD	(IY+108),C
	LD	(IY+109),B
; 1191	                  /* remove item from room */
; 1192	                  map[game->current_room].object = -1;
.LINE 1192

	LD	IY,(IX+6)
	LD	BC,(IY+10)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	IY,HL
	LD.LIS	HL,-1
	LD	BC,138
	CALL	__sstiy
; 1193	                  /* bump score for this item */
; 1194	                  game->score += object[obj].score;
	LD	DE,(IX+6)
	LD	(IX+-11),BC	; spill
	LD	BC,(IX+6)
	LD	(IX+-14),BC	; spill
	LD	BC,(IX+-11)	; unspill
.LINE 1194

	LD	BC,(IX+-7)
	CALL	__stoi
	LD	BC,HL
; 1195	                  printf("\nTaken.\n");
	LD	HL,L__383
	PUSH	HL
	LD	HL,244
	CALL	__imuls
	LD	(IX+-17),BC	; spill
	LD	BC,_object
	LD	(IX+-20),BC	; spill
	LD	BC,(IX+-17)	; unspill
	LD	(IX+-17),BC	; spill
	LD	BC,(IX+-20)	; unspill
	ADD	HL,BC
	LD	BC,(IX+-17)	; unspill
	LD	IY,HL
	LD	BC,(IY+2)
	CALL	__stoi
	LD	IY,DE
	LD	DE,(IY+12)
	ADD	HL,DE
	LD	(IX+-11),BC	; spill
	LD	IY,(IX+-14)	; unspill
	LD	BC,(IX+-11)	; unspill
	LD	(IY+12),HL
.LINE 1195

	CALL	_printf
	POP	BC
; 1196	               }
; 1197	            }
; 1198	            else
.LINE 1198

	JMP	L_370
L_363:
; 1199	            {
; 1200	               printf("\nYou are carrying too many things.\n");
	LD	BC,L__384
	PUSH	BC
.LINE 1200

	CALL	_printf
	POP	BC
; 1201	            }
; 1202	         }
; 1203	         else
.LINE 1203

	JMP	L_370
L_365:
; 1204	         {
; 1205	            printf("\nI don't see any %s here!\n", game->list[1].cmd);
.LINE 1205

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,L__385
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
; 1206	         }
; 1207	      }
; 1208	      else
.LINE 1208

	JMP	L_370
L_367:
; 1209	      {
; 1210	         printf("\nThere is nothing here to take!\n");
	LD	BC,L__386
	PUSH	BC
.LINE 1210

	CALL	_printf
	POP	BC
; 1211	      }
; 1212	   }
; 1213	}
L_370:
.LINE 1213

	LD	SP,IX
	POP	IX
	RET	


;**************************** _HandleTake ***************************
;Name                         Addr/Register   Size   Type
;_map                                IMPORT    140   variable
;_printf                             IMPORT  -----   function
;_object                             IMPORT    244   variable
;_strcmp                             IMPORT  -----   function
;found                                 IX-8      1   variable
;obj                                   IX-7      2   variable
;invcount                              IX-5      2   variable
;i                                     IX-3      3   variable
;game                                  IX+6      3   parameter


; Stack Frame Size: 47 (bytes)
;       Spill Code: 30 (instruction)


.ENDFUNC "HandleTake",1213,"_HandleTake"
	SEGMENT STRSECT
L__369:
	DB	10
	DB	"Taken from treasure chest."
	DB	10,0
L__370:
	DB	10
	DB	"The treasure chest doesn't have - %s."
	DB	10,0
L__376:
	DB	10
	DB	"The sleeping bear prevents you from taking the rug."
	DB	10,0
L__379:
	DB	10
	DB	"The dead bear prevents you from taking the rug."
	DB	10,0
L__381:
	DB	10
	DB	"Your lamp is now glowing brighter than ever."
	DB	10,0
L__382:
	DB	10
	DB	"Taken."
	DB	10,0
L__383:
	DB	10
	DB	"Taken."
	DB	10,0
L__384:
	DB	10
	DB	"You are carrying too many things."
	DB	10,0
L__385:
	DB	10
	DB	"I don't see any %s here!"
	DB	10,0
L__386:
	DB	10
	DB	"There is nothing here to take!"
	DB	10,0
	SEGMENT code
; 1214	
; 1215	
; 1216	/* HandleDrop() - handle drop object command
; 1217	 *
; 1218	 */
; 1219	void HandleDrop(GAME_S_T *game)
; 1220	{
_HandleDrop:
.DEFINE "_HandleDrop"

.VALUE _HandleDrop

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "HandleDrop",1220,"_HandleDrop"

.LINE 1220

.DEFINE "game"

.CLASS 65

.VALUE 6

.TAG "game_s_t"

.TYPE 40

.ENDEF

.DEFINE "i"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

.DEFINE "count"

.CLASS 65

.VALUE -6

.TYPE 4

.ENDEF

.DEFINE "found"

.CLASS 65

.VALUE -7

.TYPE 12

.ENDEF

.DEFINE "obj"

.CLASS 65

.VALUE -9

.TYPE 3

.ENDEF

; 1221	   BOOLEAN_T	found = FALSE;
.LINE 1221

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	IY,IX+-54
	LD	SP,IY
	LD	B,0
	LD	(IX+-7),B
	LD	BC,0
	LD	(IX+-3),BC
; 1222	   INDEX_T	obj;
; 1223	   int		i, count;
; 1224	
; 1225	   for (i = 0; i < game->inventory.count; i++)
.LINE 1225

	JMP	L_375
L_373:
; 1226	   {
; 1227	      obj = game->inventory.list[i];
	LD	HL,(IX+-3)
	ADD	HL,HL
	LD	BC,HL
.LINE 1227

	LD	DE,(IX+6)
	LD	HL,110
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,(HL)
	LD	(IX+-9),C
	LD	(IX+-8),B
; 1228	      if ( strcmp(object[obj].key, game->list[1].cmd) == 0 )
.LINE 1228

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,(IX+-9)
	CALL	__stoi
	LD	BC,HL
	LD	HL,244
	CALL	__imuls
	LD	BC,_object
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+4
	LD	(IX+-54),IY
	CALL	_strcmp
	LD	IY,(IX+-54)
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_374
; 1229	      {
; 1230	         found = TRUE;
.LINE 1230

	LD	A,1
	LD	(IX+-7),A
; 1231	         break;
.LINE 1231

	JMP	L_392
; 1232	      }
; 1233	   }
L_374:
.LINE 1233

	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
L_375:
	LD	IY,(IX+6)
	LD	BC,(IY+108)
	CALL	__stoi
	LD	BC,HL
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L_373
L_392:
; 1234	
; 1235	   if (found)
.LINE 1235

	LD	A,(IX+-7)
	OR	A,A
	JR	Z,L_391
; 1236	   {
; 1237	      switch(game->current_room)
.LINE 1237

	LD	IY,(IX+6)
	LD	BC,(IY+10)
	CALL	__stoi
	LD	DE,2
	LD	BC,L__391
	CALL	__case
	JP	(HL)
L__391:
	DW	0
	DB	0
	JMP	L_376
	DW	22
	DB	0
	JMP	L_381
	JMP	L_386
; 1238	      {
; 1239	         case RM_MAIN_CHAMBER:	/* drop into treasure chest */
L_376:
.LINE 1239

; 1240	            if (game->chest.count < MAX_CHEST_OBJS)
.LINE 1240

	LD	IY,(IX+6)
	LD	BC,130
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	BC,25
	OR	A,A
	SBC	HL,BC
	JP	P,L_379
; 1241	            {
; 1242	               /* add item to chest */
; 1243	               game->chest.list[game->chest.count] = obj;
	LD	IY,(IX+6)
	LD	BC,130
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	ADD	HL,HL
	LD	BC,HL
.LINE 1243

	LD	DE,(IX+6)
	LD	HL,132
	ADD	HL,DE
	ADD	HL,BC
	LD	A,(IX+-9)
	LD	(HL),A
	INC	HL
	LD	A,(IX+-8)
	LD	(HL),A
; 1244	               game->chest.count++;
	LD	IY,(IX+6)
.LINE 1244

	LD	BC,(IX+6)
	LD	HL,130
	ADD	HL,BC
	LD	HL,(HL)
	INC	HL
	LD	BC,130
	CALL	__sstiy
; 1245	               /* remove item from inventory */
; 1246	               count = game->inventory.count;
.LINE 1246

	LD	IY,(IX+6)
	LD	BC,(IY+108)
	CALL	__stoi
	LD	(IX+-6),HL
; 1247	               game->inventory.list[i] = game->inventory.list[count - 1];
.LINE 1247

	LD	IY,(IX+-6)
	LEA	IY,IY+-1
	LD	(IX+-12),IY
	LD	BC,(IX+6)
	LD	HL,(IX+-12)
	LD	DE,(IX+6)
	ADD	HL,HL
	LD	(IX+-36),BC	; spill
	LD	(IX+-39),HL	; spill
	LD	BC,(IX+-36)	; unspill
	LD	HL,110
	ADD	HL,BC
	LD	(IX+-36),BC	; spill
	LD	BC,(IX+-39)	; unspill
	ADD	HL,BC
	LD	BC,(IX+-36)	; unspill
	LD	IY,HL
	LD	HL,(IX+-3)
	ADD	HL,HL
	LD	BC,HL
	LD	HL,110
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,(IY)
	LD	(HL),C
	INC	HL
	LD	(HL),B
; 1248	               game->inventory.count = count - 1;
	LD	IY,(IX+6)
.LINE 1248

	LD	BC,(IX+-12)
	LD	(IY+108),C
	LD	(IY+109),B
; 1249	               /* bump score for this item */
; 1250	               game->score += object[obj].score;
	LD	DE,(IX+6)
	LD	(IX+-42),BC	; spill
	LD	BC,(IX+6)
	LD	(IX+-45),BC	; spill
	LD	BC,(IX+-42)	; unspill
.LINE 1250

	LD	BC,(IX+-9)
	CALL	__stoi
	LD	BC,HL
; 1251	               printf("\nDropped into treasure chest.\n");
	LD	HL,L__393
	PUSH	HL
	LD	HL,244
	CALL	__imuls
	LD	(IX+-48),BC	; spill
	LD	BC,_object
	LD	(IX+-51),BC	; spill
	LD	BC,(IX+-48)	; unspill
	LD	(IX+-48),BC	; spill
	LD	BC,(IX+-51)	; unspill
	ADD	HL,BC
	LD	BC,(IX+-48)	; unspill
	LD	IY,HL
	LD	BC,(IY+2)
	CALL	__stoi
	LD	IY,DE
	LD	DE,(IY+12)
	ADD	HL,DE
	LD	(IX+-42),BC	; spill
	LD	IY,(IX+-45)	; unspill
	LD	BC,(IX+-42)	; unspill
	LD	(IY+12),HL
.LINE 1251

	CALL	_printf
	POP	BC
; 1252	            }
; 1253	            else
.LINE 1253

	JMP	L_393
L_379:
; 1254	            {
; 1255	               printf("\nSorry, the treasure chest is full.\n");
	LD	BC,L__394
	PUSH	BC
.LINE 1255

	CALL	_printf
	POP	BC
; 1256	            }
; 1257	            break;
.LINE 1257

	JMP	L_393
; 1258	
; 1259	         case RM_STATUE:	/* drop into statue */
L_381:
.LINE 1259

; 1260	            if (obj == OBJ_COINS)
.LINE 1260

	LD	BC,(IX+-9)
	CALL	__stoi
	LD	BC,1
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_384
; 1261	            {
; 1262	               if (map[game->current_room].special == SE_STATUE_NORTH)
.LINE 1262

	LD	IY,(IX+6)
	LD	BC,(IY+10)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	BC,136
	LD	IY,HL
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	BC,15
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_393
; 1263	               { 
; 1264	                  printf("(into coin sized slot)\n");
	LD	BC,L__397
	PUSH	BC
.LINE 1264

	LD	(IX+-54),IY
	CALL	_printf
	LD	IY,(IX+-54)
	POP	BC
; 1265	                  printf("\nSlowly the statue of the indian turns to face the southern doorway.\n");
	LD	BC,L__398
	PUSH	BC
.LINE 1265

	LD	(IX+-54),IY
	CALL	_printf
	LD	IY,(IX+-54)
	POP	BC
; 1266	                  map[game->current_room].special = SE_STATUE_SOUTH;
.LINE 1266

	LD	IY,(IX+6)
	LD	BC,(IY+10)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	IY,HL
	LD.LIS	HL,16
	LD	BC,136
	CALL	__sstiy
; 1267	                  game->score += special[SE_STATUE_SOUTH].score;
	LD	IY,(IX+6)
	LD	DE,(IX+6)
.LINE 1267

	LD	BC,(_special+1986)
	CALL	__stoi
	LD	BC,(IY+12)
	ADD	HL,BC
	LD	IY,DE
	LD	(IY+12),HL
; 1268	                  /* remove item from inventory */
; 1269	                  count = game->inventory.count;
.LINE 1269

	LD	IY,(IX+6)
	LD	BC,(IY+108)
	CALL	__stoi
	LD	(IX+-6),HL
; 1270	                  game->inventory.list[i] = game->inventory.list[count - 1];
.LINE 1270

	LD	IY,(IX+-6)
	LEA	IY,IY+-1
	LD	(IX+-15),IY
	LD	BC,(IX+6)
	LD	HL,(IX+-15)
	LD	DE,(IX+6)
	ADD	HL,HL
	LD	(IX+-30),BC	; spill
	LD	(IX+-33),HL	; spill
	LD	BC,(IX+-30)	; unspill
	LD	HL,110
	ADD	HL,BC
	LD	(IX+-30),BC	; spill
	LD	BC,(IX+-33)	; unspill
	ADD	HL,BC
	LD	BC,(IX+-30)	; unspill
	LD	IY,HL
	LD	HL,(IX+-3)
	ADD	HL,HL
	LD	BC,HL
	LD	HL,110
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,(IY)
	LD	(HL),C
	INC	HL
	LD	(HL),B
; 1271	                  game->inventory.count = count - 1;
	LD	IY,(IX+6)
.LINE 1271

	LD	BC,(IX+-15)
	LD	(IY+108),C
	LD	(IY+109),B
; 1272	               }
; 1273	            }
; 1274	            else
.LINE 1274

	JMP	L_393
L_384:
; 1275	            {
; 1276	               printf("\nYou can't fit the %s into the slot!\n", object[obj].prep, object[obj].name);
.LINE 1276

	LD	BC,(IX+-9)
	CALL	__stoi
	LD	BC,HL
	LD	HL,244
	CALL	__imuls
	LD	(IX+-18),HL
	LD	HL,(IX+-18)
	LD	BC,_object
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+84
	LD	HL,(IX+-18)
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+44
	LD	BC,L__399
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
	POP	BC
; 1277	            }
; 1278	            break;
.LINE 1278

	JMP	L_393
; 1279	
; 1280	         default:		/* drop into empty room */
L_386:
.LINE 1280

; 1281	            if (map[game->current_room].object > -1)
.LINE 1281

	LD	IY,(IX+6)
	LD	BC,(IY+10)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	BC,138
	LD	IY,HL
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	BC,HL
	LD	HL,16777215
	OR	A,A
	SBC	HL,BC
	JP	P,L_388
; 1282	            {
; 1283	               printf("\nYou cannot drop that here.  Find an empty room.\n");
	LD	BC,L__401
	PUSH	BC
.LINE 1283

	CALL	_printf
	POP	BC
; 1284	            }
; 1285	            else
.LINE 1285

	JMP	L_393
L_388:
; 1286	            {
; 1287	               /* place object in room */
; 1288	               map[game->current_room].object = obj;
.LINE 1288

	LD	IY,(IX+6)
	LD	BC,(IY+10)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	IY,HL
	LD	BC,-9
	CALL	__sldix
	LD	BC,138
	CALL	__sstiy
; 1289	               /* remove item from inventory */
; 1290	               count = game->inventory.count;
.LINE 1290

	LD	IY,(IX+6)
	LD	BC,(IY+108)
	CALL	__stoi
	LD	(IX+-6),HL
; 1291	               game->inventory.list[i] = game->inventory.list[count - 1];
.LINE 1291

	LD	IY,(IX+-6)
	LEA	IY,IY+-1
	LD	(IX+-21),IY
	LD	BC,(IX+6)
	LD	HL,(IX+-21)
	LD	DE,(IX+6)
	ADD	HL,HL
	LD	(IX+-24),BC	; spill
	LD	(IX+-27),HL	; spill
	LD	BC,(IX+-24)	; unspill
	LD	HL,110
	ADD	HL,BC
	LD	(IX+-24),BC	; spill
	LD	BC,(IX+-27)	; unspill
	ADD	HL,BC
	LD	BC,(IX+-24)	; unspill
	LD	IY,HL
	LD	HL,(IX+-3)
	ADD	HL,HL
	LD	BC,HL
	LD	HL,110
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,(IY)
	LD	(HL),C
	INC	HL
	LD	(HL),B
; 1292	               game->inventory.count = count - 1;
	LD	IY,(IX+6)
.LINE 1292

	LD	BC,(IX+-21)
	LD	(IY+108),C
	LD	(IY+109),B
; 1293	               printf("\nDropped.\n");
	LD	BC,L__402
	PUSH	BC
.LINE 1293

	CALL	_printf
	POP	BC
; 1294	            }
; 1295	            break;
.LINE 1295

	JMP	L_393
; 1296	      }
; 1297	   }
; 1298	   else
L_391:
.LINE 1298

; 1299	   {
; 1300	      printf("\nYou are not carrying - %s\n", game->list[1].cmd);
.LINE 1300

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,L__403
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
; 1301	   }
; 1302	}
L_393:
.LINE 1302

	LD	SP,IX
	POP	IX
	RET	


;**************************** _HandleDrop ***************************
;Name                         Addr/Register   Size   Type
;_special                            IMPORT    124   variable
;_map                                IMPORT    140   variable
;_printf                             IMPORT  -----   function
;_object                             IMPORT    244   variable
;_strcmp                             IMPORT  -----   function
;obj                                   IX-9      2   variable
;found                                 IX-7      1   variable
;count                                 IX-6      3   variable
;i                                     IX-3      3   variable
;game                                  IX+6      3   parameter


; Stack Frame Size: 63 (bytes)
;       Spill Code: 30 (instruction)


.ENDFUNC "HandleDrop",1302,"_HandleDrop"
	SEGMENT STRSECT
L__393:
	DB	10
	DB	"Dropped into treasure chest."
	DB	10,0
L__394:
	DB	10
	DB	"Sorry, the treasure chest is full."
	DB	10,0
L__397:
	DB	"(into coin sized slot)"
	DB	10,0
L__398:
	DB	10
	DB	"Slowly the statue of the indian turns to face the southern doorway."
	DB	10,0
L__399:
	DB	10
	DB	"You can't fit the %s into the slot!"
	DB	10,0
L__401:
	DB	10
	DB	"You cannot drop that here.  Find an empty room."
	DB	10,0
L__402:
	DB	10
	DB	"Dropped."
	DB	10,0
L__403:
	DB	10
	DB	"You are not carrying - %s"
	DB	10,0
	SEGMENT code
; 1303	
; 1304	
; 1305	/* HandleOpen() - handle open object command
; 1306	 *
; 1307	 */
; 1308	void HandleOpen(GAME_S_T *game)
; 1309	{
_HandleOpen:
.DEFINE "_HandleOpen"

.VALUE _HandleOpen

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "HandleOpen",1309,"_HandleOpen"

.LINE 1309

.DEFINE "game"

.CLASS 65

.VALUE 6

.TAG "game_s_t"

.TYPE 40

.ENDEF

.DEFINE "cr"

.CLASS 65

.VALUE -2

.TYPE 3

.ENDEF

; 1310	   INDEX_T	cr;
; 1311	
; 1312	   cr = game->current_room;
.LINE 1312

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
	DEC	SP
	DEC	SP
	LD	IY,(IX+6)
	LD	BC,(IY+10)
	LD	(IX+-2),C
	LD	(IX+-1),B
; 1313	
; 1314	   switch(cr)
.LINE 1314

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	DE,3
	LD	BC,L__405
	CALL	__case
	JP	(HL)
L__405:
	DW	0
	DB	0
	JMP	L_401
	DW	13
	DB	0
	JMP	L_394
	DW	28
	DB	0
	JMP	L_407
	JMP	L_414
; 1315	   {
; 1316	      case RM_OUTSIDE_MAIN:
L_394:
.LINE 1316

; 1317	         if ( strcmp( game->list[1].cmd, "door" ) == 0 )
	LD	BC,L__406
	PUSH	BC
.LINE 1317

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	(IX+-5),IY
	CALL	_strcmp
	LD	IY,(IX+-5)
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_399
; 1318	         {
; 1319	            switch(map[cr].special)
.LINE 1319

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	BC,136
	LD	IY,HL
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	DE,3
	LD	BC,L__408
	CALL	__case
	JP	(HL)
L__408:
	DW	2
	DB	0
	JMP	L_395
	DW	3
	DB	0
	JMP	L_396
	DW	4
	DB	0
	JMP	L_397
	JMP	L_415
; 1320	            {
; 1321	               case SE_ODOOR_LOCKED:
L_395:
.LINE 1321

; 1322	                  printf("\nThe door is padlocked.\n");
	LD	BC,L__409
	PUSH	BC
.LINE 1322

	CALL	_printf
	POP	BC
; 1323	                  break;
.LINE 1323

	JMP	L_415
; 1324	               case SE_ODOOR_CLOSED:
L_396:
.LINE 1324

; 1325	                  printf("\nThe door swings open with a creaking sound.\n");
	LD	BC,L__410
	PUSH	BC
.LINE 1325

	LD	(IX+-5),IY
	CALL	_printf
	LD	IY,(IX+-5)
	POP	BC
; 1326	                  map[cr].special = SE_ODOOR_OPEN;
.LINE 1326

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	IY,HL
	LD.LIS	HL,4
	LD	BC,136
	CALL	__sstiy
; 1327	                  map[RM_MAIN_CHAMBER].special = SE_IDOOR_OPEN;
.LINE 1327

	LD	HL,_map+136
	LD	A,12
	LD	(HL),A
	INC	HL
	XOR	A,A
	LD	(HL),A
; 1328	                  break;
.LINE 1328

	JMP	L_415
; 1329	               case SE_ODOOR_OPEN:
L_397:
.LINE 1329

; 1330	                  printf("\nThe door is already open.\n");
	LD	BC,L__411
	PUSH	BC
.LINE 1330

	CALL	_printf
	POP	BC
; 1331	                  break;
.LINE 1331

	JMP	L_415
; 1332	            }
; 1333	         }
; 1334	         else
L_399:
.LINE 1334

; 1335	         {
; 1336	            printf("\nYou can't open a %s.\n", game->list[1].cmd);
.LINE 1336

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,L__412
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
; 1337	         }
; 1338	         break;
.LINE 1338

	JMP	L_415
; 1339	
; 1340	      case RM_MAIN_CHAMBER:
L_401:
.LINE 1340

; 1341	         if ( strcmp( game->list[1].cmd, "door" ) == 0 )
	LD	BC,L__413
	PUSH	BC
.LINE 1341

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	(IX+-5),IY
	CALL	_strcmp
	LD	IY,(IX+-5)
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_405
; 1342	         {
; 1343	            switch(map[cr].special)
.LINE 1343

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	BC,136
	LD	IY,HL
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	DE,2
	LD	BC,L__415
	CALL	__case
	JP	(HL)
L__415:
	DW	11
	DB	0
	JMP	L_402
	DW	12
	DB	0
	JMP	L_403
	JMP	L_415
; 1344	            {
; 1345	               case SE_IDOOR_CLOSED:
L_402:
.LINE 1345

; 1346	                  printf("\nThe door swings open with a creaking sound.\n");
	LD	BC,L__416
	PUSH	BC
.LINE 1346

	LD	(IX+-5),IY
	CALL	_printf
	LD	IY,(IX+-5)
	POP	BC
; 1347	                  map[cr].special = SE_IDOOR_OPEN;
.LINE 1347

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	IY,HL
	LD.LIS	HL,12
	LD	BC,136
	CALL	__sstiy
; 1348	                  map[RM_OUTSIDE_MAIN].special = SE_ODOOR_OPEN;
.LINE 1348

	LD	HL,_map+1956
	LD	A,4
	LD	(HL),A
	INC	HL
	XOR	A,A
	LD	(HL),A
; 1349	                  break;
.LINE 1349

	JMP	L_415
; 1350	               case SE_IDOOR_OPEN:
L_403:
.LINE 1350

; 1351	                  printf("\nThe door is already open.\n");
	LD	BC,L__417
	PUSH	BC
.LINE 1351

	CALL	_printf
	POP	BC
; 1352	                  break;
.LINE 1352

	JMP	L_415
; 1353	            }
; 1354	         }
; 1355	         else
L_405:
.LINE 1355

; 1356	         {
; 1357	            printf("\nYou can't open a %s.\n", game->list[1].cmd);
.LINE 1357

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,L__418
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
; 1358	         }
; 1359	         break;
.LINE 1359

	JMP	L_415
; 1360	
; 1361	      case RM_CREVICE:
L_407:
.LINE 1361

; 1362	         if ( strcmp( game->list[1].cmd, "grate" ) == 0 )
	LD	BC,L__419
	PUSH	BC
.LINE 1362

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	(IX+-5),IY
	CALL	_strcmp
	LD	IY,(IX+-5)
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_412
; 1363	         {
; 1364	            switch(map[cr].special)
.LINE 1364

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	BC,136
	LD	IY,HL
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	DE,3
	LD	BC,L__421
	CALL	__case
	JP	(HL)
L__421:
	DW	19
	DB	0
	JMP	L_408
	DW	20
	DB	0
	JMP	L_409
	DW	21
	DB	0
	JMP	L_410
	JMP	L_415
; 1365	            {
; 1366	               case SE_GRATE_LOCKED:
L_408:
.LINE 1366

; 1367	                  printf("\nThe grate is locked.\n");
	LD	BC,L__422
	PUSH	BC
.LINE 1367

	CALL	_printf
	POP	BC
; 1368	                  break;
.LINE 1368

	JMP	L_415
; 1369	               case SE_GRATE_CLOSED:
L_409:
.LINE 1369

; 1370	                  printf("\nThe grate swings open with a creaking sound.\n");
	LD	BC,L__423
	PUSH	BC
.LINE 1370

	LD	(IX+-5),IY
	CALL	_printf
	LD	IY,(IX+-5)
	POP	BC
; 1371	                  map[cr].special = SE_GRATE_OPEN;
.LINE 1371

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	IY,HL
	LD.LIS	HL,21
	LD	BC,136
	CALL	__sstiy
; 1372	                  break;
.LINE 1372

	JMP	L_415
; 1373	               case SE_GRATE_OPEN:
L_410:
.LINE 1373

; 1374	                  printf("\nThe grate is already open.\n");
	LD	BC,L__424
	PUSH	BC
.LINE 1374

	CALL	_printf
	POP	BC
; 1375	                  break;
.LINE 1375

	JMP	L_415
; 1376	            }
; 1377	         }
; 1378	         else
L_412:
.LINE 1378

; 1379	         {
; 1380	            printf("\nYou can't open a %s.\n", game->list[1].cmd);
.LINE 1380

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,L__425
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
; 1381	         }
; 1382	         break;
.LINE 1382

	JMP	L_415
; 1383	
; 1384	      default:
L_414:
.LINE 1384

; 1385	         printf("\nThere is nothing here to open!\n");
	LD	BC,L__426
	PUSH	BC
.LINE 1385

	CALL	_printf
	POP	BC
; 1386	         break;
; 1387	   }
; 1388	}
L_415:
.LINE 1388

	LD	SP,IX
	POP	IX
	RET	


;**************************** _HandleOpen ***************************
;Name                         Addr/Register   Size   Type
;_printf                             IMPORT  -----   function
;_map                                IMPORT    140   variable
;_strcmp                             IMPORT  -----   function
;cr                                    IX-2      2   variable
;game                                  IX+6      3   parameter


; Stack Frame Size: 14 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "HandleOpen",1388,"_HandleOpen"
	SEGMENT STRSECT
L__406:
	DB	"door"
	DB	0
L__409:
	DB	10
	DB	"The door is padlocked."
	DB	10,0
L__410:
	DB	10
	DB	"The door swings open with a creaking sound."
	DB	10,0
L__411:
	DB	10
	DB	"The door is already open."
	DB	10,0
L__412:
	DB	10
	DB	"You can't open a %s."
	DB	10,0
L__413:
	DB	"door"
	DB	0
L__416:
	DB	10
	DB	"The door swings open with a creaking sound."
	DB	10,0
L__417:
	DB	10
	DB	"The door is already open."
	DB	10,0
L__418:
	DB	10
	DB	"You can't open a %s."
	DB	10,0
L__419:
	DB	"grate"
	DB	0
L__422:
	DB	10
	DB	"The grate is locked."
	DB	10,0
L__423:
	DB	10
	DB	"The grate swings open with a creaking sound."
	DB	10,0
L__424:
	DB	10
	DB	"The grate is already open."
	DB	10,0
L__425:
	DB	10
	DB	"You can't open a %s."
	DB	10,0
L__426:
	DB	10
	DB	"There is nothing here to open!"
	DB	10,0
	SEGMENT code
; 1389	
; 1390	
; 1391	/* HandleClose() - handle close object command
; 1392	 *
; 1393	 */
; 1394	void HandleClose(GAME_S_T *game)
; 1395	{
_HandleClose:
.DEFINE "_HandleClose"

.VALUE _HandleClose

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "HandleClose",1395,"_HandleClose"

.LINE 1395

.DEFINE "game"

.CLASS 65

.VALUE 6

.TAG "game_s_t"

.TYPE 40

.ENDEF

.DEFINE "cr"

.CLASS 65

.VALUE -2

.TYPE 3

.ENDEF

; 1396	   INDEX_T	cr;
; 1397	
; 1398	   cr = game->current_room;
.LINE 1398

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
	DEC	SP
	DEC	SP
	LD	IY,(IX+6)
	LD	BC,(IY+10)
	LD	(IX+-2),C
	LD	(IX+-1),B
; 1399	
; 1400	   switch(cr)
.LINE 1400

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	DE,3
	LD	BC,L__428
	CALL	__case
	JP	(HL)
L__428:
	DW	0
	DB	0
	JMP	L_422
	DW	13
	DB	0
	JMP	L_416
	DW	28
	DB	0
	JMP	L_428
	JMP	L_434
; 1401	   {
; 1402	      case RM_OUTSIDE_MAIN:
L_416:
.LINE 1402

; 1403	         if ( strcmp( game->list[1].cmd, "door" ) == 0 )
	LD	BC,L__429
	PUSH	BC
.LINE 1403

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	(IX+-5),IY
	CALL	_strcmp
	LD	IY,(IX+-5)
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_420
; 1404	         {
; 1405	            switch(map[cr].special)
.LINE 1405

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	BC,136
	LD	IY,HL
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	DE,2
	LD	BC,L__431
	CALL	__case
	JP	(HL)
L__431:
	DW	3
	DB	0
	JMP	L_418
	DW	4
	DB	0
	JMP	L_417
	JMP	L_435
; 1406	            {
; 1407	               case SE_ODOOR_OPEN:
L_417:
.LINE 1407

; 1408	                  printf("\nThe door swings closed with a creaking sound.\n");
	LD	BC,L__432
	PUSH	BC
.LINE 1408

	LD	(IX+-5),IY
	CALL	_printf
	LD	IY,(IX+-5)
	POP	BC
; 1409	                  map[cr].special = SE_ODOOR_CLOSED;
.LINE 1409

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	IY,HL
	LD.LIS	HL,3
	LD	BC,136
	CALL	__sstiy
; 1410	                  map[RM_MAIN_CHAMBER].special = SE_IDOOR_CLOSED;
.LINE 1410

	LD	HL,_map+136
	LD	A,11
	LD	(HL),A
	INC	HL
	XOR	A,A
	LD	(HL),A
; 1411	                  break;
.LINE 1411

	JMP	L_435
; 1412	               case SE_ODOOR_CLOSED:
L_418:
.LINE 1412

; 1413	                  printf("\nThe door is already closed.\n");
	LD	BC,L__433
	PUSH	BC
.LINE 1413

	CALL	_printf
	POP	BC
; 1414	                  break;
.LINE 1414

	JMP	L_435
; 1415	            }
; 1416	         }
; 1417	         else
L_420:
.LINE 1417

; 1418	         {
; 1419	            printf("\nYou can't open a %s.\n", game->list[1].cmd);
.LINE 1419

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,L__434
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
; 1420	         }
; 1421	         break;
.LINE 1421

	JMP	L_435
; 1422	
; 1423	      case RM_MAIN_CHAMBER:
L_422:
.LINE 1423

; 1424	         if ( strcmp( game->list[1].cmd, "door" ) == 0 )
	LD	BC,L__435
	PUSH	BC
.LINE 1424

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	(IX+-5),IY
	CALL	_strcmp
	LD	IY,(IX+-5)
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_426
; 1425	         {
; 1426	            switch(map[cr].special)
.LINE 1426

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	BC,136
	LD	IY,HL
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	DE,2
	LD	BC,L__437
	CALL	__case
	JP	(HL)
L__437:
	DW	11
	DB	0
	JMP	L_424
	DW	12
	DB	0
	JMP	L_423
	JMP	L_435
; 1427	            {
; 1428	               case SE_IDOOR_OPEN:
L_423:
.LINE 1428

; 1429	                  printf("\nThe door swings closed with a creaking sound.\n");
	LD	BC,L__438
	PUSH	BC
.LINE 1429

	LD	(IX+-5),IY
	CALL	_printf
	LD	IY,(IX+-5)
	POP	BC
; 1430	                  map[cr].special = SE_IDOOR_CLOSED;
.LINE 1430

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	IY,HL
	LD.LIS	HL,11
	LD	BC,136
	CALL	__sstiy
; 1431	                  map[RM_OUTSIDE_MAIN].special = SE_ODOOR_CLOSED;
.LINE 1431

	LD	HL,_map+1956
	LD	A,3
	LD	(HL),A
	INC	HL
	XOR	A,A
	LD	(HL),A
; 1432	                  break;
.LINE 1432

	JMP	L_435
; 1433	               case SE_IDOOR_CLOSED:
L_424:
.LINE 1433

; 1434	                  printf("\nThe door is already closed.\n");
	LD	BC,L__439
	PUSH	BC
.LINE 1434

	CALL	_printf
	POP	BC
; 1435	                  break;
.LINE 1435

	JMP	L_435
; 1436	            }
; 1437	         }
; 1438	         else
L_426:
.LINE 1438

; 1439	         {
; 1440	            printf("\nYou can't open a %s.\n", game->list[1].cmd);
.LINE 1440

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,L__440
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
; 1441	         }
; 1442	         break;
.LINE 1442

	JMP	L_435
; 1443	
; 1444	      case RM_CREVICE:
L_428:
.LINE 1444

; 1445	         if ( strcmp( game->list[1].cmd, "grate" ) == 0 )
	LD	BC,L__441
	PUSH	BC
.LINE 1445

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	(IX+-5),IY
	CALL	_strcmp
	LD	IY,(IX+-5)
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_432
; 1446	         {
; 1447	            switch(map[cr].special)
.LINE 1447

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	BC,136
	LD	IY,HL
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	DE,2
	LD	BC,L__443
	CALL	__case
	JP	(HL)
L__443:
	DW	20
	DB	0
	JMP	L_430
	DW	21
	DB	0
	JMP	L_429
	JMP	L_435
; 1448	            {
; 1449	               case SE_GRATE_OPEN:
L_429:
.LINE 1449

; 1450	                  printf("\nThe grate swings closed with a creaking sound.\n");
	LD	BC,L__444
	PUSH	BC
.LINE 1450

	LD	(IX+-5),IY
	CALL	_printf
	LD	IY,(IX+-5)
	POP	BC
; 1451	                  map[cr].special = SE_GRATE_CLOSED;
.LINE 1451

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	IY,HL
	LD.LIS	HL,20
	LD	BC,136
	CALL	__sstiy
; 1452	                  break;
.LINE 1452

	JMP	L_435
; 1453	               case SE_GRATE_CLOSED:
L_430:
.LINE 1453

; 1454	                  printf("\nThe grate is already closed.\n");
	LD	BC,L__445
	PUSH	BC
.LINE 1454

	CALL	_printf
	POP	BC
; 1455	                  break;
.LINE 1455

	JMP	L_435
; 1456	            }
; 1457	         }
; 1458	         else
L_432:
.LINE 1458

; 1459	         {
; 1460	            printf("\nYou can't open a %s.\n", game->list[1].cmd);
.LINE 1460

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,L__446
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
; 1461	         }
; 1462	         break;
.LINE 1462

	JMP	L_435
; 1463	
; 1464	      default:
L_434:
.LINE 1464

; 1465	         printf("\nThere is nothing here to close!\n");
	LD	BC,L__447
	PUSH	BC
.LINE 1465

	CALL	_printf
	POP	BC
; 1466	         break;
; 1467	   }
; 1468	}
L_435:
.LINE 1468

	LD	SP,IX
	POP	IX
	RET	


;**************************** _HandleClose ***************************
;Name                         Addr/Register   Size   Type
;_printf                             IMPORT  -----   function
;_map                                IMPORT    140   variable
;_strcmp                             IMPORT  -----   function
;cr                                    IX-2      2   variable
;game                                  IX+6      3   parameter


; Stack Frame Size: 14 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "HandleClose",1468,"_HandleClose"
	SEGMENT STRSECT
L__429:
	DB	"door"
	DB	0
L__432:
	DB	10
	DB	"The door swings closed with a creaking sound."
	DB	10,0
L__433:
	DB	10
	DB	"The door is already closed."
	DB	10,0
L__434:
	DB	10
	DB	"You can't open a %s."
	DB	10,0
L__435:
	DB	"door"
	DB	0
L__438:
	DB	10
	DB	"The door swings closed with a creaking sound."
	DB	10,0
L__439:
	DB	10
	DB	"The door is already closed."
	DB	10,0
L__440:
	DB	10
	DB	"You can't open a %s."
	DB	10,0
L__441:
	DB	"grate"
	DB	0
L__444:
	DB	10
	DB	"The grate swings closed with a creaking sound."
	DB	10,0
L__445:
	DB	10
	DB	"The grate is already closed."
	DB	10,0
L__446:
	DB	10
	DB	"You can't open a %s."
	DB	10,0
L__447:
	DB	10
	DB	"There is nothing here to close!"
	DB	10,0
	SEGMENT code
; 1469	
; 1470	
; 1471	/* HandleWave() - handle wave object command
; 1472	 *
; 1473	 */
; 1474	void HandleWave(GAME_S_T *game)
; 1475	{
_HandleWave:
.DEFINE "_HandleWave"

.VALUE _HandleWave

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "HandleWave",1475,"_HandleWave"

.LINE 1475

.DEFINE "game"

.CLASS 65

.VALUE 6

.TAG "game_s_t"

.TYPE 40

.ENDEF

.DEFINE "i"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

.DEFINE "cr"

.CLASS 65

.VALUE -5

.TYPE 3

.ENDEF

.DEFINE "found"

.CLASS 65

.VALUE -6

.TYPE 12

.ENDEF

.DEFINE "obj"

.CLASS 65

.VALUE -8

.TYPE 3

.ENDEF

; 1476	   BOOLEAN_T    found = FALSE;
.LINE 1476

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
	PUSH	BC
	DEC	SP
	DEC	SP
	LD	B,0
	LD	(IX+-6),B
; 1477	   INDEX_T	obj;
; 1478	   INDEX_T	cr;
; 1479	   int		i;
; 1480	
; 1481	   cr = game->current_room;
.LINE 1481

	LD	IY,(IX+6)
	LD	BC,(IY+10)
	LD	(IX+-5),C
	LD	(IX+-4),B
	LD	BC,0
	LD	(IX+-3),BC
; 1482	
; 1483	   for (i = 0; i < game->inventory.count; i++)
.LINE 1483

	JMP	L_440
L_438:
; 1484	   {
; 1485	      obj = game->inventory.list[i];
	LD	HL,(IX+-3)
	ADD	HL,HL
	LD	BC,HL
.LINE 1485

	LD	DE,(IX+6)
	LD	HL,110
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,(HL)
	LD	(IX+-8),C
	LD	(IX+-7),B
; 1486	      if ( strcmp(object[obj].key, game->list[1].cmd) == 0 )
.LINE 1486

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,(IX+-8)
	CALL	__stoi
	LD	BC,HL
	LD	HL,244
	CALL	__imuls
	LD	BC,_object
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+4
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_439
; 1487	      {
; 1488	         found = TRUE;
.LINE 1488

	LD	A,1
	LD	(IX+-6),A
; 1489	         break;
.LINE 1489

	JMP	L_457
; 1490	      }
; 1491	   }
L_439:
.LINE 1491

	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
L_440:
	LD	IY,(IX+6)
	LD	BC,(IY+108)
	CALL	__stoi
	LD	BC,HL
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L_438
L_457:
; 1492	
; 1493	   if ( found )
.LINE 1493

	LD	A,(IX+-6)
	OR	A,A
	JR	Z,L_456
; 1494	   {
; 1495	      if ( obj == OBJ_ROD )
.LINE 1495

	LD	BC,(IX+-8)
	CALL	__stoi
	LD	BC,16
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_454
; 1496	      {
; 1497	         if ( cr == RM_LARGE_CAVE 
; 1498			&& map[RM_LARGE_CAVE].special == SE_BRIDGE_NO )
.LINE 1498

	LD	BC,(IX+-5)
	CALL	__stoi
	LD	BC,34
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_452
	LD	BC,(_map+4896)
	CALL	__stoi
	LD	BC,27
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_452
; 1499	         {
; 1500	            printf("\nAs you wave the strange black rod over your head, a crystal bridge\ngrows from one side of the fissure to other.\n");
	LD	BC,L__455
	PUSH	BC
.LINE 1500

	CALL	_printf
	POP	BC
; 1501	            map[RM_LARGE_CAVE].special = SE_BRIDGE_YES;
.LINE 1501

	LD	HL,_map+4896
	LD	A,29
	LD	(HL),A
	INC	HL
	XOR	A,A
	LD	(HL),A
; 1502	            game->score += special[SE_BRIDGE_YES].score;
	LD	IY,(IX+6)
	LD	DE,(IX+6)
.LINE 1502

	LD	BC,(_special+3598)
	CALL	__stoi
	LD	BC,(IY+12)
	ADD	HL,BC
	LD	IY,DE
	LD	(IY+12),HL
; 1503	         }
; 1504	         else if ( cr == RM_LARGE_CAVE 
.LINE 1504

	JMP	L_458
L_452:
; 1505			&& map[RM_LARGE_CAVE].special == SE_BRIDGE_BRK )
.LINE 1505

	LD	BC,(IX+-5)
	CALL	__stoi
	LD	BC,34
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_450
	LD	BC,(_map+4896)
	CALL	__stoi
	LD	BC,30
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_450
; 1506	         {
; 1507	            printf("\nAs you wave the strange black rod over your head, a crystal bridge\ngrows from one side of the fissure to other.\n");
	LD	BC,L__458
	PUSH	BC
.LINE 1507

	CALL	_printf
	POP	BC
; 1508	            map[RM_LARGE_CAVE].special = SE_BRIDGE_YES;
.LINE 1508

	LD	HL,_map+4896
	LD	A,29
	LD	(HL),A
	INC	HL
	XOR	A,A
	LD	(HL),A
; 1509	         }
; 1510	         else if ( cr == RM_NARROW_CAVE 
.LINE 1510

	JMP	L_458
L_450:
; 1511			&& map[RM_LARGE_CAVE].special == SE_BRIDGE_NO )
.LINE 1511

	LD	BC,(IX+-5)
	CALL	__stoi
	LD	BC,30
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_448
	LD	BC,(_map+4896)
	CALL	__stoi
	LD	BC,27
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_448
; 1512	         {
; 1513	            printf("\nAs you wave the strange black rod over your head, a crystal bridge\ngrows from one side of the fissure to other.\n");
	LD	BC,L__461
	PUSH	BC
.LINE 1513

	CALL	_printf
	POP	BC
; 1514	            map[RM_LARGE_CAVE].special = SE_BRIDGE_YES;
.LINE 1514

	LD	HL,_map+4896
	LD	A,29
	LD	(HL),A
	INC	HL
	XOR	A,A
	LD	(HL),A
; 1515	         }
; 1516	         else if ( cr == RM_NARROW_CAVE 
.LINE 1516

	JMP	L_458
L_448:
; 1517			&& map[RM_LARGE_CAVE].special == SE_BRIDGE_BRK )
.LINE 1517

	LD	BC,(IX+-5)
	CALL	__stoi
	LD	BC,30
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_446
	LD	BC,(_map+4896)
	CALL	__stoi
	LD	BC,30
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_446
; 1518	         {
; 1519	            printf("\nAs you wave the strange black rod over your head, a crystal bridge\ngrows from one side of the fissure to other.\n");
	LD	BC,L__464
	PUSH	BC
.LINE 1519

	CALL	_printf
	POP	BC
; 1520	            map[RM_LARGE_CAVE].special = SE_BRIDGE_YES;
.LINE 1520

	LD	HL,_map+4896
	LD	A,29
	LD	(HL),A
	INC	HL
	XOR	A,A
	LD	(HL),A
; 1521	         }
; 1522	         else
.LINE 1522

	JMP	L_458
L_446:
; 1523	         {
; 1524	            printf("\nWaving the rod has no effect.\n");
	LD	BC,L__465
	PUSH	BC
.LINE 1524

	CALL	_printf
	POP	BC
; 1525	         }
; 1526	      }
; 1527	      else
.LINE 1527

	JMP	L_458
L_454:
; 1528	      {
; 1529	         printf("\nYou can't wave that!\n");
	LD	BC,L__466
	PUSH	BC
.LINE 1529

	CALL	_printf
	POP	BC
; 1530	      }
; 1531	   }
; 1532	   else
.LINE 1532

	JMP	L_458
L_456:
; 1533	   {
; 1534	      printf("\nYou are not carrying - %s\n", game->list[1].cmd);
.LINE 1534

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,L__467
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
; 1535	   }
; 1536	}
L_458:
.LINE 1536

	LD	SP,IX
	POP	IX
	RET	


;**************************** _HandleWave ***************************
;Name                         Addr/Register   Size   Type
;_special                            IMPORT    124   variable
;_printf                             IMPORT  -----   function
;_map                                IMPORT    140   variable
;_object                             IMPORT    244   variable
;_strcmp                             IMPORT  -----   function
;obj                                   IX-8      2   variable
;found                                 IX-6      1   variable
;cr                                    IX-5      2   variable
;i                                     IX-3      3   variable
;game                                  IX+6      3   parameter


; Stack Frame Size: 17 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "HandleWave",1536,"_HandleWave"
	SEGMENT STRSECT
L__455:
	DB	10
	DB	"As you wave the strange black rod over your head, a crystal bridge"
	DB	10
	DB	"grows from one side of the fissure to other."
	DB	10,0
L__458:
	DB	10
	DB	"As you wave the strange black rod over your head, a crystal bridge"
	DB	10
	DB	"grows from one side of the fissure to other."
	DB	10,0
L__461:
	DB	10
	DB	"As you wave the strange black rod over your head, a crystal bridge"
	DB	10
	DB	"grows from one side of the fissure to other."
	DB	10,0
L__464:
	DB	10
	DB	"As you wave the strange black rod over your head, a crystal bridge"
	DB	10
	DB	"grows from one side of the fissure to other."
	DB	10,0
L__465:
	DB	10
	DB	"Waving the rod has no effect."
	DB	10,0
L__466:
	DB	10
	DB	"You can't wave that!"
	DB	10,0
L__467:
	DB	10
	DB	"You are not carrying - %s"
	DB	10,0
	SEGMENT code
; 1537	
; 1538	
; 1539	/* HandlePlay() - handle play object command
; 1540	 *
; 1541	 */
; 1542	void HandlePlay(GAME_S_T *game)
; 1543	{
_HandlePlay:
.DEFINE "_HandlePlay"

.VALUE _HandlePlay

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "HandlePlay",1543,"_HandlePlay"

.LINE 1543

.DEFINE "game"

.CLASS 65

.VALUE 6

.TAG "game_s_t"

.TYPE 40

.ENDEF

.DEFINE "i"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

.DEFINE "cr"

.CLASS 65

.VALUE -5

.TYPE 3

.ENDEF

.DEFINE "found"

.CLASS 65

.VALUE -6

.TYPE 12

.ENDEF

.DEFINE "obj"

.CLASS 65

.VALUE -8

.TYPE 3

.ENDEF

; 1544	   BOOLEAN_T    found = FALSE;
.LINE 1544

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
	PUSH	BC
	DEC	SP
	DEC	SP
	LD	B,0
	LD	(IX+-6),B
; 1545	   INDEX_T	obj;
; 1546	   INDEX_T	cr;
; 1547	   int		i;
; 1548	
; 1549	   cr = game->current_room;
.LINE 1549

	LD	IY,(IX+6)
	LD	BC,(IY+10)
	LD	(IX+-5),C
	LD	(IX+-4),B
	LD	BC,0
	LD	(IX+-3),BC
; 1550	
; 1551	   for (i = 0; i < game->inventory.count; i++)
.LINE 1551

	JMP	L_463
L_461:
; 1552	   {
; 1553	      obj = game->inventory.list[i];
	LD	HL,(IX+-3)
	ADD	HL,HL
	LD	BC,HL
.LINE 1553

	LD	DE,(IX+6)
	LD	HL,110
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,(HL)
	LD	(IX+-8),C
	LD	(IX+-7),B
; 1554	      if ( strcmp(object[obj].key, game->list[1].cmd) == 0 )
.LINE 1554

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,(IX+-8)
	CALL	__stoi
	LD	BC,HL
	LD	HL,244
	CALL	__imuls
	LD	BC,_object
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+4
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_462
; 1555	      {
; 1556	         found = TRUE;
.LINE 1556

	LD	A,1
	LD	(IX+-6),A
; 1557	         break;
.LINE 1557

	JMP	L_474
; 1558	      }
; 1559	   }
L_462:
.LINE 1559

	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
L_463:
	LD	IY,(IX+6)
	LD	BC,(IY+108)
	CALL	__stoi
	LD	BC,HL
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L_461
L_474:
; 1560	
; 1561	   if ( found )
.LINE 1561

	LD	A,(IX+-6)
	OR	A,A
	JR	Z,L_473
; 1562	   {
; 1563	      if ( obj == OBJ_FLUTE )
.LINE 1563

	LD	BC,(IX+-8)
	CALL	__stoi
	LD	BC,11
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_471
; 1564	      {
; 1565	         if ( cr == RM_STRANGE 
; 1566			&& map[RM_STRANGE].special == SE_ROPE_COILED )
.LINE 1566

	LD	BC,(IX+-5)
	CALL	__stoi
	LD	BC,35
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_469
	LD	BC,(_map+5036)
	CALL	__stoi
	LD	BC,17
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_469
; 1567	         {
; 1568	            printf("\nAs you play, the rope climbs slowly out of the basket and eventually\nreaches all the way up to the small opening.\n");
	LD	BC,L__475
	PUSH	BC
.LINE 1568

	CALL	_printf
	POP	BC
; 1569	            game->score += special[SE_ROPE_RISEN].score;
	LD	IY,(IX+6)
	LD	DE,(IX+6)
.LINE 1569

	LD	BC,(_special+2234)
	CALL	__stoi
	LD	BC,(IY+12)
	ADD	HL,BC
	LD	IY,DE
	LD	(IY+12),HL
; 1570	            map[RM_STRANGE].special = SE_ROPE_RISEN;
.LINE 1570

	LD	HL,_map+5036
	LD	A,18
	LD	(HL),A
	INC	HL
	XOR	A,A
	LD	(HL),A
; 1571	         }
; 1572	         else if ( cr == RM_STRANGE 
.LINE 1572

	JMP	L_475
L_469:
; 1573			&& map[RM_STRANGE].special == SE_ROPE_RISEN )
.LINE 1573

	LD	BC,(IX+-5)
	CALL	__stoi
	LD	BC,35
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_467
	LD	BC,(_map+5036)
	CALL	__stoi
	LD	BC,18
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_467
; 1574	         {
; 1575	            printf("\nAs you play, the rope slowly coils itself back inside of the basket.\n");
	LD	BC,L__478
	PUSH	BC
.LINE 1575

	CALL	_printf
	POP	BC
; 1576	            map[RM_STRANGE].special = SE_ROPE_COILED;
.LINE 1576

	LD	HL,_map+5036
	LD	A,17
	LD	(HL),A
	INC	HL
	XOR	A,A
	LD	(HL),A
; 1577	         }
; 1578	         else
.LINE 1578

	JMP	L_475
L_467:
; 1579	         {
; 1580	            printf("\nPlaying the flute has no effect.\n");
	LD	BC,L__479
	PUSH	BC
.LINE 1580

	CALL	_printf
	POP	BC
; 1581	         }
; 1582	      }
; 1583	      else
.LINE 1583

	JMP	L_475
L_471:
; 1584	      {
; 1585	         printf("\nYou can't play that!\n");
	LD	BC,L__480
	PUSH	BC
.LINE 1585

	CALL	_printf
	POP	BC
; 1586	      }
; 1587	   }
; 1588	   else
.LINE 1588

	JMP	L_475
L_473:
; 1589	   {
; 1590	      printf("\nYou are not carrying - %s\n", game->list[1].cmd);
.LINE 1590

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,L__481
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
; 1591	   }
; 1592	}
L_475:
.LINE 1592

	LD	SP,IX
	POP	IX
	RET	


;**************************** _HandlePlay ***************************
;Name                         Addr/Register   Size   Type
;_special                            IMPORT    124   variable
;_printf                             IMPORT  -----   function
;_map                                IMPORT    140   variable
;_object                             IMPORT    244   variable
;_strcmp                             IMPORT  -----   function
;obj                                   IX-8      2   variable
;found                                 IX-6      1   variable
;cr                                    IX-5      2   variable
;i                                     IX-3      3   variable
;game                                  IX+6      3   parameter


; Stack Frame Size: 17 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "HandlePlay",1592,"_HandlePlay"
	SEGMENT STRSECT
L__475:
	DB	10
	DB	"As you play, the rope climbs slowly out of the basket and eventually"
	DB	10
	DB	"reaches all the way up to the small opening."
	DB	10,0
L__478:
	DB	10
	DB	"As you play, the rope slowly coils itself back inside of the basket."
	DB	10,0
L__479:
	DB	10
	DB	"Playing the flute has no effect."
	DB	10,0
L__480:
	DB	10
	DB	"You can't play that!"
	DB	10,0
L__481:
	DB	10
	DB	"You are not carrying - %s"
	DB	10,0
	SEGMENT code
; 1593	
; 1594	
; 1595	/* HandleDrink() - handle drink object command
; 1596	 *
; 1597	 */
; 1598	void HandleDrink(GAME_S_T *game)
; 1599	{
_HandleDrink:
.DEFINE "_HandleDrink"

.VALUE _HandleDrink

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "HandleDrink",1599,"_HandleDrink"

.LINE 1599

.DEFINE "game"

.CLASS 65

.VALUE 6

.TAG "game_s_t"

.TYPE 40

.ENDEF

.DEFINE "i"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

.DEFINE "found"

.CLASS 65

.VALUE -4

.TYPE 12

.ENDEF

.DEFINE "cr"

.CLASS 65

.VALUE -6

.TYPE 3

.ENDEF

.DEFINE "obj"

.CLASS 65

.VALUE -8

.TYPE 3

.ENDEF

; 1600	   BOOLEAN_T    found = FALSE;
.LINE 1600

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
	PUSH	BC
	DEC	SP
	DEC	SP
	LD	B,0
	LD	(IX+-4),B
; 1601	   INDEX_T	obj;
; 1602	   INDEX_T	cr;
; 1603	   int		i;
; 1604	
; 1605	   cr = game->current_room;
.LINE 1605

	LD	IY,(IX+6)
	LD	BC,(IY+10)
	LD	(IX+-6),C
	LD	(IX+-5),B
	LD	BC,0
	LD	(IX+-3),BC
; 1606	
; 1607	   for (i = 0; i < game->inventory.count; i++)
.LINE 1607

	JMP	L_480
L_478:
; 1608	   {
; 1609	      obj = game->inventory.list[i];
	LD	HL,(IX+-3)
	ADD	HL,HL
	LD	BC,HL
.LINE 1609

	LD	DE,(IX+6)
	LD	HL,110
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,(HL)
	LD	(IX+-8),C
	LD	(IX+-7),B
; 1610	      if ( strcmp(object[obj].key, game->list[1].cmd) == 0 )
.LINE 1610

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,(IX+-8)
	CALL	__stoi
	LD	BC,HL
	LD	HL,244
	CALL	__imuls
	LD	BC,_object
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+4
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_479
; 1611	      {
; 1612	         found = TRUE;
.LINE 1612

	LD	A,1
	LD	(IX+-4),A
; 1613	         break;
.LINE 1613

	JMP	L_484
; 1614	      }
; 1615	   }
L_479:
.LINE 1615

	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
L_480:
	LD	IY,(IX+6)
	LD	BC,(IY+108)
	CALL	__stoi
	LD	BC,HL
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L_478
L_484:
; 1616	
; 1617	   if ( found )
.LINE 1617

	LD	A,(IX+-4)
	OR	A,A
	JR	Z,L_483
; 1618	   {
; 1619	      switch(cr)
; 1620	      {
; 1621	         default:
; 1622	            printf("\nDrinking the %s has no effect.\n", game->list[1].cmd);
.LINE 1622

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,L__486
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
; 1623	            break;
.LINE 1623

	JMP	L_485
; 1624	      }
; 1625	   }
; 1626	   else
L_483:
.LINE 1626

; 1627	   {
; 1628	      printf("\nYou are not carrying - %s\n", game->list[1].cmd);
.LINE 1628

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,L__487
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
; 1629	   }
; 1630	}
L_485:
.LINE 1630

	LD	SP,IX
	POP	IX
	RET	


;**************************** _HandleDrink ***************************
;Name                         Addr/Register   Size   Type
;_printf                             IMPORT  -----   function
;_object                             IMPORT    244   variable
;_strcmp                             IMPORT  -----   function
;obj                                   IX-8      2   variable
;cr                                    IX-6      2   variable
;found                                 IX-4      1   variable
;i                                     IX-3      3   variable
;game                                  IX+6      3   parameter


; Stack Frame Size: 17 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "HandleDrink",1630,"_HandleDrink"
	SEGMENT STRSECT
L__486:
	DB	10
	DB	"Drinking the %s has no effect."
	DB	10,0
L__487:
	DB	10
	DB	"You are not carrying - %s"
	DB	10,0
	SEGMENT code
; 1631	
; 1632	
; 1633	/* HandleEat() - handle eat object command
; 1634	 *
; 1635	 */
; 1636	void HandleEat(GAME_S_T *game)
; 1637	{
_HandleEat:
.DEFINE "_HandleEat"

.VALUE _HandleEat

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "HandleEat",1637,"_HandleEat"

.LINE 1637

.DEFINE "game"

.CLASS 65

.VALUE 6

.TAG "game_s_t"

.TYPE 40

.ENDEF

.DEFINE "i"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

.DEFINE "found"

.CLASS 65

.VALUE -4

.TYPE 12

.ENDEF

.DEFINE "count"

.CLASS 65

.VALUE -7

.TYPE 4

.ENDEF

.DEFINE "cr"

.CLASS 65

.VALUE -9

.TYPE 3

.ENDEF

.DEFINE "obj"

.CLASS 65

.VALUE -11

.TYPE 3

.ENDEF

; 1638	   BOOLEAN_T    found = FALSE;
.LINE 1638

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	IY,IX+-20
	LD	SP,IY
	LD	B,0
	LD	(IX+-4),B
; 1639	   INDEX_T	obj;
; 1640	   INDEX_T	cr;
; 1641	   int		i, count;
; 1642	
; 1643	   cr = game->current_room;
.LINE 1643

	LD	IY,(IX+6)
	LD	BC,(IY+10)
	LD	(IX+-9),C
	LD	(IX+-8),B
	LD	BC,0
	LD	(IX+-3),BC
; 1644	
; 1645	   for (i = 0; i < game->inventory.count; i++)
.LINE 1645

	JMP	L_490
L_488:
; 1646	   {
; 1647	      obj = game->inventory.list[i];
	LD	HL,(IX+-3)
	ADD	HL,HL
	LD	BC,HL
.LINE 1647

	LD	DE,(IX+6)
	LD	HL,110
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,(HL)
	LD	(IX+-11),C
	LD	(IX+-10),B
; 1648	      if ( strcmp(object[obj].key, game->list[1].cmd) == 0 )
.LINE 1648

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,(IX+-11)
	CALL	__stoi
	LD	BC,HL
	LD	HL,244
	CALL	__imuls
	LD	BC,_object
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+4
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_489
; 1649	      {
; 1650	         found = TRUE;
.LINE 1650

	LD	A,1
	LD	(IX+-4),A
; 1651	         break;
.LINE 1651

	JMP	L_495
; 1652	      }
; 1653	   }
L_489:
.LINE 1653

	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
L_490:
	LD	IY,(IX+6)
	LD	BC,(IY+108)
	CALL	__stoi
	LD	BC,HL
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L_488
L_495:
; 1654	
; 1655	   if ( found )
.LINE 1655

	LD	A,(IX+-4)
	OR	A,A
	JR	Z,L_494
; 1656	   {
; 1657	      switch(obj)
.LINE 1657

	LD	BC,(IX+-11)
	CALL	__stoi
	LD	DE,1
	LD	BC,L__492
	CALL	__case
	JP	(HL)
L__492:
	DW	5
	DB	0
	JMP	L_491
	JMP	L_492
; 1658	      {
; 1659	         case OBJ_TWINKIES:
L_491:
.LINE 1659

; 1660	            printf("\nYou gobble down the twinkies only to realize that they are quite stale.\n");
	LD	BC,L__493
	PUSH	BC
.LINE 1660

	CALL	_printf
	POP	BC
; 1661	            /* remove item from inventory */
; 1662	            count = game->inventory.count;
.LINE 1662

	LD	IY,(IX+6)
	LD	BC,(IY+108)
	CALL	__stoi
	LD	(IX+-7),HL
; 1663	            game->inventory.list[i] = game->inventory.list[count - 1];
.LINE 1663

	LD	IY,(IX+-7)
	LEA	IY,IY+-1
	LD	(IX+-14),IY
	LD	BC,(IX+6)
	LD	HL,(IX+-14)
	LD	DE,(IX+6)
	ADD	HL,HL
	LD	(IX+-17),BC	; spill
	LD	(IX+-20),HL	; spill
	LD	BC,(IX+-17)	; unspill
	LD	HL,110
	ADD	HL,BC
	LD	(IX+-17),BC	; spill
	LD	BC,(IX+-20)	; unspill
	ADD	HL,BC
	LD	BC,(IX+-17)	; unspill
	LD	IY,HL
	LD	HL,(IX+-3)
	ADD	HL,HL
	LD	BC,HL
	LD	HL,110
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,(IY)
	LD	(HL),C
	INC	HL
	LD	(HL),B
; 1664	            game->inventory.count = count - 1;
	LD	IY,(IX+6)
.LINE 1664

	LD	BC,(IX+-14)
	LD	(IY+108),C
	LD	(IY+109),B
; 1665	            break;
.LINE 1665

	JMP	L_496
; 1666	
; 1667	         default:
L_492:
.LINE 1667

; 1668	            printf("\nEating the %s has no effect.\n", game->list[1].cmd);
.LINE 1668

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,L__494
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
; 1669	            break;
.LINE 1669

	JMP	L_496
; 1670	      }
; 1671	   }
; 1672	   else
L_494:
.LINE 1672

; 1673	   {
; 1674	      printf("\nYou are not carrying - %s\n", game->list[1].cmd);
.LINE 1674

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,L__495
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
; 1675	   }
; 1676	}
L_496:
.LINE 1676

	LD	SP,IX
	POP	IX
	RET	


;**************************** _HandleEat ***************************
;Name                         Addr/Register   Size   Type
;_printf                             IMPORT  -----   function
;_object                             IMPORT    244   variable
;_strcmp                             IMPORT  -----   function
;obj                                  IX-11      2   variable
;cr                                    IX-9      2   variable
;count                                 IX-7      3   variable
;found                                 IX-4      1   variable
;i                                     IX-3      3   variable
;game                                  IX+6      3   parameter


; Stack Frame Size: 29 (bytes)
;       Spill Code: 6 (instruction)


.ENDFUNC "HandleEat",1676,"_HandleEat"
	SEGMENT STRSECT
L__493:
	DB	10
	DB	"You gobble down the twinkies only to realize that they are quite stale."
	DB	10,0
L__494:
	DB	10
	DB	"Eating the %s has no effect."
	DB	10,0
L__495:
	DB	10
	DB	"You are not carrying - %s"
	DB	10,0
	SEGMENT code
; 1677	
; 1678	
; 1679	/* HandleAnswer() - handle answer command
; 1680	 *
; 1681	 */
; 1682	void HandleAnswer(GAME_S_T *game)
; 1683	{
_HandleAnswer:
.DEFINE "_HandleAnswer"

.VALUE _HandleAnswer

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "HandleAnswer",1683,"_HandleAnswer"

.LINE 1683

.DEFINE "game"

.CLASS 65

.VALUE 6

.TAG "game_s_t"

.TYPE 40

.ENDEF

.DEFINE "cr"

.CLASS 65

.VALUE -2

.TYPE 3

.ENDEF

; 1684	   INDEX_T	cr;
; 1685	
; 1686	   cr = game->current_room;
.LINE 1686

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	IY,IX+-20
	LD	SP,IY
	LD	IY,(IX+6)
	LD	BC,(IY+10)
	LD	(IX+-2),C
	LD	(IX+-1),B
; 1687	
; 1688	   if ( cr == RM_QUESTION )
.LINE 1688

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,39
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_508
; 1689	   {
; 1690	      switch(map[cr].special)
.LINE 1690

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	BC,136
	LD	IY,HL
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	DE,4
	LD	BC,L__498
	CALL	__case
	JP	(HL)
L__498:
	DW	33
	DB	0
	JMP	L_497
	DW	34
	DB	0
	JMP	L_498
	DW	35
	DB	0
	JMP	L_502
	DW	36
	DB	0
	JMP	L_506
	JMP	L_509
; 1691	      {
; 1692	         case SE_ANSWER_0:	/* accept player's name */
L_497:
.LINE 1692

; 1693	            map[cr].special = SE_ANSWER_1;
.LINE 1693

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	(IX+-5),HL
	LD	HL,(IX+-5)
	LD	BC,_map
	ADD	HL,BC
	LD	IY,HL
	LD.LIS	HL,34
	LD	BC,136
	CALL	__sstiy
; 1694	            printf("\n%s\n", special[map[cr].special].phrase); 
.LINE 1694

	LD	HL,(IX+-5)
	LD	BC,_map
	ADD	HL,BC
	LD	BC,136
	LD	IY,HL
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	BC,HL
	LD	HL,124
	CALL	__imuls
	LD	BC,_special
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+4
	LD	BC,L__499
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
; 1695	            break;
.LINE 1695

	JMP	L_509
; 1696	         case SE_ANSWER_1:	/* accept "home" */
L_498:
.LINE 1696

; 1697	            if ( strcmp( game->list[1].cmd, "home" ) == 0 )
	LD	BC,L__500
	PUSH	BC
.LINE 1697

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	(IX+-20),IY
	CALL	_strcmp
	LD	IY,(IX+-20)
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_500
; 1698	            {
; 1699	               map[cr].special = SE_ANSWER_2;
.LINE 1699

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	(IX+-8),HL
	LD	HL,(IX+-8)
	LD	BC,_map
	ADD	HL,BC
	LD	IY,HL
	LD.LIS	HL,35
	LD	BC,136
	CALL	__sstiy
; 1700	               printf("\n%s\n", special[map[cr].special].phrase); 
.LINE 1700

	LD	HL,(IX+-8)
	LD	BC,_map
	ADD	HL,BC
	LD	BC,136
	LD	IY,HL
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	BC,HL
	LD	HL,124
	CALL	__imuls
	LD	BC,_special
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+4
	LD	BC,L__502
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
; 1701	            }
; 1702	            else
.LINE 1702

	JMP	L_509
L_500:
; 1703	            {
; 1704	               map[cr].special = SE_ANSWER_0;
.LINE 1704

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	(IX+-11),HL
	LD	HL,(IX+-11)
	LD	BC,_map
	ADD	HL,BC
	LD	IY,HL
	LD.LIS	HL,33
	LD	BC,136
	CALL	__sstiy
; 1705	               printf("\n%s\n", special[map[cr].special].phrase); 
.LINE 1705

	LD	HL,(IX+-11)
	LD	BC,_map
	ADD	HL,BC
	LD	BC,136
	LD	IY,HL
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	BC,HL
	LD	HL,124
	CALL	__imuls
	LD	BC,_special
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+4
	LD	BC,L__503
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
; 1706	            }
; 1707	            break;
.LINE 1707

	JMP	L_509
; 1708	         case SE_ANSWER_2:	/* accept "marcus" */
L_502:
.LINE 1708

; 1709	            if ( strcmp( game->list[1].cmd, "marcus" ) == 0 )
	LD	BC,L__504
	PUSH	BC
.LINE 1709

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	(IX+-20),IY
	CALL	_strcmp
	LD	IY,(IX+-20)
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_504
; 1710	            {
; 1711	               map[cr].special = SE_ANSWER_3;
.LINE 1711

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	(IX+-14),HL
	LD	HL,(IX+-14)
	LD	BC,_map
	ADD	HL,BC
	LD	IY,HL
	LD.LIS	HL,36
	LD	BC,136
	CALL	__sstiy
; 1712	               game->score += special[SE_ANSWER_3].score;
	LD	IY,(IX+6)
	LD	DE,(IX+6)
.LINE 1712

	LD	BC,(_special+4466)
	CALL	__stoi
	LD	BC,(IY+12)
	ADD	HL,BC
	LD	IY,DE
	LD	(IY+12),HL
; 1713	               printf("\n%s\n", special[map[cr].special].phrase); 
.LINE 1713

	LD	HL,(IX+-14)
	LD	BC,_map
	ADD	HL,BC
	LD	BC,136
	LD	IY,HL
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	BC,HL
	LD	HL,124
	CALL	__imuls
	LD	BC,_special
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+4
	LD	BC,L__506
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
; 1714	            }
; 1715	            else
.LINE 1715

	JMP	L_509
L_504:
; 1716	            {
; 1717	               map[cr].special = SE_ANSWER_0;
.LINE 1717

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	(IX+-17),HL
	LD	HL,(IX+-17)
	LD	BC,_map
	ADD	HL,BC
	LD	IY,HL
	LD.LIS	HL,33
	LD	BC,136
	CALL	__sstiy
; 1718	               printf("\n%s\n", special[map[cr].special].phrase); 
.LINE 1718

	LD	HL,(IX+-17)
	LD	BC,_map
	ADD	HL,BC
	LD	BC,136
	LD	IY,HL
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	BC,HL
	LD	HL,124
	CALL	__imuls
	LD	BC,_special
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+4
	LD	BC,L__507
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
; 1719	            }
; 1720	            break;
.LINE 1720

	JMP	L_509
; 1721	         case SE_ANSWER_3:
L_506:
.LINE 1721

; 1722	            printf("\n%s\n", special[map[cr].special].phrase); 
.LINE 1722

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	BC,136
	LD	IY,HL
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	BC,HL
	LD	HL,124
	CALL	__imuls
	LD	BC,_special
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+4
	LD	BC,L__508
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
; 1723	            break;
.LINE 1723

	JMP	L_509
; 1724	      }
; 1725	   }
; 1726	   else
L_508:
.LINE 1726

; 1727	   {
; 1728	      printf("\nWho are you talking to?\n");
	LD	BC,L__509
	PUSH	BC
.LINE 1728

	CALL	_printf
	POP	BC
; 1729	   }
; 1730	} 
L_509:
.LINE 1730

	LD	SP,IX
	POP	IX
	RET	


;**************************** _HandleAnswer ***************************
;Name                         Addr/Register   Size   Type
;_strcmp                             IMPORT  -----   function
;_special                            IMPORT    124   variable
;_printf                             IMPORT  -----   function
;_map                                IMPORT    140   variable
;cr                                    IX-2      2   variable
;game                                  IX+6      3   parameter


; Stack Frame Size: 29 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "HandleAnswer",1730,"_HandleAnswer"
	SEGMENT STRSECT
L__499:
	DB	10
	DB	"%s"
	DB	10,0
L__500:
	DB	"home"
	DB	0
L__502:
	DB	10
	DB	"%s"
	DB	10,0
L__503:
	DB	10
	DB	"%s"
	DB	10,0
L__504:
	DB	"marcus"
	DB	0
L__506:
	DB	10
	DB	"%s"
	DB	10,0
L__507:
	DB	10
	DB	"%s"
	DB	10,0
L__508:
	DB	10
	DB	"%s"
	DB	10,0
L__509:
	DB	10
	DB	"Who are you talking to?"
	DB	10,0
	SEGMENT code
; 1731	
; 1732	
; 1733	/* HandleBreak() - handle break object command
; 1734	 *
; 1735	 */
; 1736	void HandleBreak(GAME_S_T *game)
; 1737	{
_HandleBreak:
.DEFINE "_HandleBreak"

.VALUE _HandleBreak

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "HandleBreak",1737,"_HandleBreak"

.LINE 1737

.DEFINE "game"

.CLASS 65

.VALUE 6

.TAG "game_s_t"

.TYPE 40

.ENDEF

.DEFINE "i"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

.DEFINE "found"

.CLASS 65

.VALUE -4

.TYPE 12

.ENDEF

.DEFINE "count"

.CLASS 65

.VALUE -7

.TYPE 4

.ENDEF

.DEFINE "cr"

.CLASS 65

.VALUE -9

.TYPE 3

.ENDEF

.DEFINE "obj"

.CLASS 65

.VALUE -11

.TYPE 3

.ENDEF

; 1738	   BOOLEAN_T    found = FALSE;
.LINE 1738

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	IY,IX+-23
	LD	SP,IY
	LD	B,0
	LD	(IX+-4),B
; 1739	   INDEX_T	obj;
; 1740	   INDEX_T	cr;
; 1741	   int		i, count;
; 1742	
; 1743	   cr = game->current_room;
.LINE 1743

	LD	IY,(IX+6)
	LD	BC,(IY+10)
	LD	(IX+-9),C
	LD	(IX+-8),B
	LD	BC,0
	LD	(IX+-3),BC
; 1744	
; 1745	   for (i = 0; i < game->inventory.count; i++)
.LINE 1745

	JMP	L_514
L_512:
; 1746	   {
; 1747	      obj = game->inventory.list[i];
	LD	HL,(IX+-3)
	ADD	HL,HL
	LD	BC,HL
.LINE 1747

	LD	DE,(IX+6)
	LD	HL,110
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,(HL)
	LD	(IX+-11),C
	LD	(IX+-10),B
; 1748	      if ( strcmp(object[obj].key, game->list[1].cmd) == 0 )
.LINE 1748

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,(IX+-11)
	CALL	__stoi
	LD	BC,HL
	LD	HL,244
	CALL	__imuls
	LD	BC,_object
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+4
	LD	(IX+-23),IY
	CALL	_strcmp
	LD	IY,(IX+-23)
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_513
; 1749	      {
; 1750	         found = TRUE;
.LINE 1750

	LD	A,1
	LD	(IX+-4),A
; 1751	         break;
.LINE 1751

	JMP	L_519
; 1752	      }
; 1753	   }
L_513:
.LINE 1753

	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
L_514:
	LD	IY,(IX+6)
	LD	BC,(IY+108)
	CALL	__stoi
	LD	BC,HL
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L_512
L_519:
; 1754	
; 1755	   if ( found )
.LINE 1755

	LD	A,(IX+-4)
	OR	A,A
	JR	Z,L_518
; 1756	   {
; 1757	      switch(obj)
.LINE 1757

	LD	BC,(IX+-11)
	CALL	__stoi
	LD	DE,1
	LD	BC,L__514
	CALL	__case
	JP	(HL)
L__514:
	DW	25
	DB	0
	JMP	L_515
	JMP	L_516
; 1758	      {
; 1759	         case OBJ_EGG:
L_515:
.LINE 1759

; 1760	            printf("\nThe golden is fragile and breaks quite easily, revealing a %s.\n", object[OBJ_KEY].name);
	LD	BC,_object+8380
	PUSH	BC
	LD	BC,L__515
	PUSH	BC
.LINE 1760

	LD	(IX+-23),IY
	CALL	_printf
	LD	IY,(IX+-23)
	POP	BC
	POP	BC
; 1761	            map[cr].object = OBJ_KEY;
.LINE 1761

	LD	BC,(IX+-9)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	IY,HL
	LD.LIS	HL,34
	LD	BC,138
	CALL	__sstiy
; 1762	            /* remove item from inventory */
; 1763	            count = game->inventory.count;
.LINE 1763

	LD	IY,(IX+6)
	LD	BC,(IY+108)
	CALL	__stoi
	LD	(IX+-7),HL
; 1764	            game->inventory.list[i] = game->inventory.list[count - 1];
.LINE 1764

	LD	IY,(IX+-7)
	LEA	IY,IY+-1
	LD	(IX+-14),IY
	LD	BC,(IX+6)
	LD	HL,(IX+-14)
	LD	DE,(IX+6)
	ADD	HL,HL
	LD	(IX+-17),BC	; spill
	LD	(IX+-20),HL	; spill
	LD	BC,(IX+-17)	; unspill
	LD	HL,110
	ADD	HL,BC
	LD	(IX+-17),BC	; spill
	LD	BC,(IX+-20)	; unspill
	ADD	HL,BC
	LD	BC,(IX+-17)	; unspill
	LD	IY,HL
	LD	HL,(IX+-3)
	ADD	HL,HL
	LD	BC,HL
	LD	HL,110
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,(IY)
	LD	(HL),C
	INC	HL
	LD	(HL),B
; 1765	            game->inventory.count = count - 1;
	LD	IY,(IX+6)
.LINE 1765

	LD	BC,(IX+-14)
	LD	(IY+108),C
	LD	(IY+109),B
; 1766	            break;
.LINE 1766

	JMP	L_520
; 1767	
; 1768	         default:
L_516:
.LINE 1768

; 1769	            printf("\nBreaking the %s has no effect.\n", game->list[1].cmd);
.LINE 1769

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,L__516
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
; 1770	            break;
.LINE 1770

	JMP	L_520
; 1771	      }
; 1772	   }
; 1773	   else
L_518:
.LINE 1773

; 1774	   {
; 1775	      printf("\nYou are not carrying - %s\n", game->list[1].cmd);
.LINE 1775

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,L__517
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
; 1776	   }
; 1777	}
L_520:
.LINE 1777

	LD	SP,IX
	POP	IX
	RET	


;**************************** _HandleBreak ***************************
;Name                         Addr/Register   Size   Type
;_map                                IMPORT    140   variable
;_printf                             IMPORT  -----   function
;_object                             IMPORT    244   variable
;_strcmp                             IMPORT  -----   function
;obj                                  IX-11      2   variable
;cr                                    IX-9      2   variable
;count                                 IX-7      3   variable
;found                                 IX-4      1   variable
;i                                     IX-3      3   variable
;game                                  IX+6      3   parameter


; Stack Frame Size: 32 (bytes)
;       Spill Code: 6 (instruction)


.ENDFUNC "HandleBreak",1777,"_HandleBreak"
	SEGMENT STRSECT
L__515:
	DB	10
	DB	"The golden is fragile and breaks quite easily, revealing a %s."
	DB	10,0
L__516:
	DB	10
	DB	"Breaking the %s has no effect."
	DB	10,0
L__517:
	DB	10
	DB	"You are not carrying - %s"
	DB	10,0
	SEGMENT code
; 1778	
; 1779	
; 1780	/* HandleKill() - handle kill object command
; 1781	 *
; 1782	 */
; 1783	void HandleKill(GAME_S_T *game)
; 1784	{
_HandleKill:
.DEFINE "_HandleKill"

.VALUE _HandleKill

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "HandleKill",1784,"_HandleKill"

.LINE 1784

.DEFINE "game"

.CLASS 65

.VALUE 6

.TAG "game_s_t"

.TYPE 40

.ENDEF

.DEFINE "cr"

.CLASS 65

.VALUE -2

.TYPE 3

.ENDEF

.DEFINE "index"

.CLASS 65

.VALUE -4

.TYPE 3

.ENDEF

; 1785	   INDEX_T	cr, index;
; 1786	
; 1787	   cr = game->current_room;
.LINE 1787

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
	PUSH	BC
	DEC	SP
	LD	IY,(IX+6)
	LD	BC,(IY+10)
	LD	(IX+-2),C
	LD	(IX+-1),B
; 1788	
; 1789	   if ( HaveObject(game, OBJ_SWORD, &index) )
	PEA	IX+-4
	LD	BC,3
	PUSH	BC
	LD	BC,(IX+6)
	PUSH	BC
.LINE 1789

	LD	(IX+-7),IY
	CALL	_HaveObject
	LD	IY,(IX+-7)
	POP	BC
	POP	BC
	POP	BC
	OR	A,A
	JR	Z,L_535
; 1790	   {
; 1791	      printf("(with %s)\n", object[OBJ_SWORD].name);
	LD	BC,_object+816
	PUSH	BC
	LD	BC,L__520
	PUSH	BC
.LINE 1791

	LD	(IX+-7),IY
	CALL	_printf
	LD	IY,(IX+-7)
	POP	BC
	POP	BC
; 1792	      switch(cr)
.LINE 1792

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	DE,4
	LD	BC,L__521
	CALL	__case
	JP	(HL)
L__521:
	DW	2
	DB	0
	JMP	L_521
	DW	11
	DB	0
	JMP	L_524
	DW	29
	DB	0
	JMP	L_527
	DW	39
	DB	0
	JMP	L_530
	JMP	L_533
; 1793	      {
; 1794	         case RM_THRONE:
L_521:
.LINE 1794

; 1795	            if ( strcmp(object[OBJ_SKELETON].key, game->list[1].cmd) == 0)
.LINE 1795

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,_object+492
	PUSH	BC
	LD	(IX+-7),IY
	CALL	_strcmp
	LD	IY,(IX+-7)
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_536
; 1796	            {
; 1797	               printf("\nYou stab at where the skeleton's heart used to be and it \ncrumples to the floor.\n");
	LD	BC,L__523
	PUSH	BC
.LINE 1797

	LD	(IX+-7),IY
	CALL	_printf
	LD	IY,(IX+-7)
	POP	BC
; 1798	               game->score += special[SE_SKEL_DEAD].score;
	LD	IY,(IX+6)
	LD	DE,(IX+6)
.LINE 1798

	LD	BC,(_special+870)
	CALL	__stoi
	LD	BC,(IY+12)
	ADD	HL,BC
	LD	IY,DE
	LD	(IY+12),HL
; 1799	               map[cr].special = SE_SKEL_DEAD;
.LINE 1799

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	IY,HL
	LD.LIS	HL,7
	LD	BC,136
	CALL	__sstiy
; 1800	            }
; 1801	            break;
.LINE 1801

	JMP	L_536
; 1802	
; 1803	         case RM_BEAVER_POND:
L_524:
.LINE 1803

; 1804	            if ( strcmp(object[OBJ_BEAVER].key, game->list[1].cmd) == 0)
.LINE 1804

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,_object+1956
	PUSH	BC
	LD	(IX+-7),IY
	CALL	_strcmp
	LD	IY,(IX+-7)
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_536
; 1805	            {
; 1806	               printf("\nYou cut the poor defenseless beaver cleanly in half.\n");
	LD	BC,L__525
	PUSH	BC
.LINE 1806

	LD	(IX+-7),IY
	CALL	_printf
	LD	IY,(IX+-7)
	POP	BC
; 1807	               map[cr].special = SE_BEAV_DEAD;
.LINE 1807

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	IY,HL
	LD.LIS	HL,10
	LD	BC,136
	CALL	__sstiy
; 1808	            }
; 1809	            break;
.LINE 1809

	JMP	L_536
; 1810	
; 1811	         case RM_RUG_ROOM:
L_527:
.LINE 1811

; 1812	            if ( strcmp(object[OBJ_BEAR].key, game->list[1].cmd) == 0)
.LINE 1812

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,_object+5128
	PUSH	BC
	LD	(IX+-7),IY
	CALL	_strcmp
	LD	IY,(IX+-7)
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_536
; 1813	            {
; 1814	               printf("\nYou attack the poor sleeping bear, killing it after several blows.\n");
	LD	BC,L__527
	PUSH	BC
.LINE 1814

	LD	(IX+-7),IY
	CALL	_printf
	LD	IY,(IX+-7)
	POP	BC
; 1815	               map[cr].special = SE_BEAR_DEAD;
.LINE 1815

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	IY,HL
	LD.LIS	HL,24
	LD	BC,136
	CALL	__sstiy
; 1816	            }
; 1817	            break;
.LINE 1817

	JMP	L_536
; 1818	
; 1819	         case RM_QUESTION:
L_530:
.LINE 1819

; 1820	            if ( strcmp(object[OBJ_MAN].key, game->list[1].cmd) == 0)
.LINE 1820

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,_object+7812
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_536
; 1821	            {
; 1822	               printf("\nYou try to attack the strange man, but he is surprisingly quick \nand cuts you cleanly in half with his scythe.\n");
	LD	BC,L__529
	PUSH	BC
.LINE 1822

	CALL	_printf
	POP	BC
; 1823	               PlayerDied(game);
	LD	BC,(IX+6)
	PUSH	BC
.LINE 1823

	CALL	_PlayerDied
	POP	BC
; 1824	            }
; 1825	            break;
.LINE 1825

	JMP	L_536
; 1826	
; 1827	         default:
L_533:
.LINE 1827

; 1828	            printf("\nThere is nothing to kill here.\n");
	LD	BC,L__530
	PUSH	BC
.LINE 1828

	CALL	_printf
	POP	BC
; 1829	            break;
.LINE 1829

	JMP	L_536
; 1830	      }
; 1831	   }
; 1832	   else
L_535:
.LINE 1832

; 1833	   {
; 1834	      printf("\nYou are not carrying a weapon.\n");
	LD	BC,L__531
	PUSH	BC
.LINE 1834

	CALL	_printf
	POP	BC
; 1835	   }
; 1836	}
L_536:
.LINE 1836

	LD	SP,IX
	POP	IX
	RET	


;**************************** _HandleKill ***************************
;Name                         Addr/Register   Size   Type
;_PlayerDied                         IMPORT  -----   function
;_map                                IMPORT    140   variable
;_special                            IMPORT    124   variable
;_strcmp                             IMPORT  -----   function
;_object                             IMPORT    244   variable
;_printf                             IMPORT  -----   function
;_HaveObject                         IMPORT  -----   function
;index                                 IX-4      2   variable
;cr                                    IX-2      2   variable
;game                                  IX+6      3   parameter


; Stack Frame Size: 16 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "HandleKill",1836,"_HandleKill"
	SEGMENT STRSECT
L__520:
	DB	"(with %s)"
	DB	10,0
L__523:
	DB	10
	DB	"You stab at where the skeleton's heart used to be and it "
	DB	10
	DB	"crumples to the floor."
	DB	10,0
L__525:
	DB	10
	DB	"You cut the poor defenseless beaver cleanly in half."
	DB	10,0
L__527:
	DB	10
	DB	"You attack the poor sleeping bear, killing it after several blows."
	DB	10,0
L__529:
	DB	10
	DB	"You try to attack the strange man, but he is surprisingly quick "
	DB	10
	DB	"and cuts you cleanly in half with his scythe."
	DB	10,0
L__530:
	DB	10
	DB	"There is nothing to kill here."
	DB	10,0
L__531:
	DB	10
	DB	"You are not carrying a weapon."
	DB	10,0
	SEGMENT code
; 1837	
; 1838	
; 1839	/* HandleWear() - handle wear object command
; 1840	 *
; 1841	 */
; 1842	void HandleWear(GAME_S_T *game)
; 1843	{
_HandleWear:
.DEFINE "_HandleWear"

.VALUE _HandleWear

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "HandleWear",1843,"_HandleWear"

.LINE 1843

.DEFINE "game"

.CLASS 65

.VALUE 6

.TAG "game_s_t"

.TYPE 40

.ENDEF

.DEFINE "i"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

.DEFINE "cr"

.CLASS 65

.VALUE -5

.TYPE 3

.ENDEF

.DEFINE "found"

.CLASS 65

.VALUE -6

.TYPE 12

.ENDEF

.DEFINE "obj"

.CLASS 65

.VALUE -8

.TYPE 3

.ENDEF

; 1844	   BOOLEAN_T    found = FALSE;
.LINE 1844

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
	PUSH	BC
	DEC	SP
	DEC	SP
	LD	B,0
	LD	(IX+-6),B
; 1845	   INDEX_T	obj;
; 1846	   INDEX_T	cr;
; 1847	   int		i;
; 1848	
; 1849	   cr = game->current_room;
.LINE 1849

	LD	IY,(IX+6)
	LD	BC,(IY+10)
	LD	(IX+-5),C
	LD	(IX+-4),B
	LD	BC,0
	LD	(IX+-3),BC
; 1850	
; 1851	   for (i = 0; i < game->inventory.count; i++)
.LINE 1851

	JMP	L_541
L_539:
; 1852	   {
; 1853	      obj = game->inventory.list[i];
	LD	HL,(IX+-3)
	ADD	HL,HL
	LD	BC,HL
.LINE 1853

	LD	DE,(IX+6)
	LD	HL,110
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,(HL)
	LD	(IX+-8),C
	LD	(IX+-7),B
; 1854	      if ( strcmp(object[obj].key, game->list[1].cmd) == 0 )
.LINE 1854

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,(IX+-8)
	CALL	__stoi
	LD	BC,HL
	LD	HL,244
	CALL	__imuls
	LD	BC,_object
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+4
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_540
; 1855	      {
; 1856	         found = TRUE;
.LINE 1856

	LD	A,1
	LD	(IX+-6),A
; 1857	         break;
.LINE 1857

	JMP	L_552
; 1858	      }
; 1859	   }
L_540:
.LINE 1859

	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
L_541:
	LD	IY,(IX+6)
	LD	BC,(IY+108)
	CALL	__stoi
	LD	BC,HL
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L_539
L_552:
; 1860	
; 1861	   if ( found )
.LINE 1861

	LD	A,(IX+-6)
	OR	A,A
	JR	Z,L_551
; 1862	   {
; 1863	      if ( obj == OBJ_BOOTS )
.LINE 1863

	LD	BC,(IX+-8)
	CALL	__stoi
	LD	BC,18
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_549
; 1864	      {
; 1865	         if ( cr == RM_NORTH_SIDE_LAKE 
; 1866			&& map[RM_NORTH_SIDE_LAKE].special == SE_BOOTS_OFF )
.LINE 1866

	LD	BC,(IX+-5)
	CALL	__stoi
	LD	BC,37
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_547
	LD	BC,(_map+5316)
	CALL	__stoi
	LD	BC,31
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_547
; 1867	         {
; 1868	            printf("\nAs you finish lacing up the rotting boots, you suddenly feel like\nyou could walk on water.\n");
	LD	BC,L__539
	PUSH	BC
.LINE 1868

	CALL	_printf
	POP	BC
; 1869	            map[RM_NORTH_SIDE_LAKE].special = SE_BOOTS_ON;
.LINE 1869

	LD	HL,_map+5316
	LD	A,32
	LD	(HL),A
	INC	HL
	XOR	A,A
	LD	(HL),A
; 1870	            map[RM_SOUTH_SIDE_LAKE].special = SE_BOOTS_ON;
.LINE 1870

	LD	HL,_map+5456
	LD	A,32
	LD	(HL),A
	INC	HL
	XOR	A,A
	LD	(HL),A
; 1871	            game->score += special[SE_BOOTS_ON].score;
	LD	IY,(IX+6)
	LD	DE,(IX+6)
.LINE 1871

	LD	BC,(_special+3970)
	CALL	__stoi
	LD	BC,(IY+12)
	ADD	HL,BC
	LD	IY,DE
	LD	(IY+12),HL
; 1872	         }
; 1873	         else if ( cr == RM_SOUTH_SIDE_LAKE 
.LINE 1873

	JMP	L_553
L_547:
; 1874			&& map[RM_SOUTH_SIDE_LAKE].special == SE_BOOTS_OFF )
.LINE 1874

	LD	BC,(IX+-5)
	CALL	__stoi
	LD	BC,38
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_545
	LD	BC,(_map+5456)
	CALL	__stoi
	LD	BC,31
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_545
; 1875	         {
; 1876	            printf("\nAs you finish lacing up the rotting boots, you suddenly feel like\nyou could walk on water.\n");
	LD	BC,L__542
	PUSH	BC
.LINE 1876

	CALL	_printf
	POP	BC
; 1877	            map[RM_NORTH_SIDE_LAKE].special = SE_BOOTS_ON;
.LINE 1877

	LD	HL,_map+5316
	LD	A,32
	LD	(HL),A
	INC	HL
	XOR	A,A
	LD	(HL),A
; 1878	            map[RM_SOUTH_SIDE_LAKE].special = SE_BOOTS_ON;
.LINE 1878

	LD	HL,_map+5456
	LD	A,32
	LD	(HL),A
	INC	HL
	XOR	A,A
	LD	(HL),A
; 1879	         }
; 1880	         else
.LINE 1880

	JMP	L_553
L_545:
; 1881	         {
; 1882	            printf("\nWearing the boots has no effect.\n");
	LD	BC,L__543
	PUSH	BC
.LINE 1882

	CALL	_printf
	POP	BC
; 1883	         }
; 1884	      }
; 1885	      else
.LINE 1885

	JMP	L_553
L_549:
; 1886	      {
; 1887	         printf("\nYou can't wear that!\n");
	LD	BC,L__544
	PUSH	BC
.LINE 1887

	CALL	_printf
	POP	BC
; 1888	      }
; 1889	   }
; 1890	   else
.LINE 1890

	JMP	L_553
L_551:
; 1891	   {
; 1892	      printf("\nYou are not carrying - %s\n", game->list[1].cmd);
.LINE 1892

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,L__545
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
; 1893	   }
; 1894	}
L_553:
.LINE 1894

	LD	SP,IX
	POP	IX
	RET	


;**************************** _HandleWear ***************************
;Name                         Addr/Register   Size   Type
;_special                            IMPORT    124   variable
;_printf                             IMPORT  -----   function
;_map                                IMPORT    140   variable
;_object                             IMPORT    244   variable
;_strcmp                             IMPORT  -----   function
;obj                                   IX-8      2   variable
;found                                 IX-6      1   variable
;cr                                    IX-5      2   variable
;i                                     IX-3      3   variable
;game                                  IX+6      3   parameter


; Stack Frame Size: 17 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "HandleWear",1894,"_HandleWear"
	SEGMENT STRSECT
L__539:
	DB	10
	DB	"As you finish lacing up the rotting boots, you suddenly feel like"
	DB	10
	DB	"you could walk on water."
	DB	10,0
L__542:
	DB	10
	DB	"As you finish lacing up the rotting boots, you suddenly feel like"
	DB	10
	DB	"you could walk on water."
	DB	10,0
L__543:
	DB	10
	DB	"Wearing the boots has no effect."
	DB	10,0
L__544:
	DB	10
	DB	"You can't wear that!"
	DB	10,0
L__545:
	DB	10
	DB	"You are not carrying - %s"
	DB	10,0
	SEGMENT code
; 1895	
; 1896	
; 1897	/* HandleMove() - handle move object command
; 1898	 *
; 1899	 */
; 1900	void HandleMove(GAME_S_T *game)
; 1901	{
_HandleMove:
.DEFINE "_HandleMove"

.VALUE _HandleMove

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "HandleMove",1901,"_HandleMove"

.LINE 1901

.DEFINE "game"

.CLASS 65

.VALUE 6

.TAG "game_s_t"

.TYPE 40

.ENDEF

.DEFINE "cr"

.CLASS 65

.VALUE -2

.TYPE 3

.ENDEF

; 1902	   INDEX_T	cr;
; 1903	
; 1904	   cr = game->current_room;
.LINE 1904

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
	DEC	SP
	DEC	SP
	LD	IY,(IX+6)
	LD	BC,(IY+10)
	LD	(IX+-2),C
	LD	(IX+-1),B
; 1905	
; 1906	   switch(cr)
.LINE 1906

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	DE,1
	LD	BC,L__547
	CALL	__case
	JP	(HL)
L__547:
	DW	30
	DB	0
	JMP	L_554
	JMP	L_560
; 1907	   {
; 1908	      case RM_NARROW_CAVE:
L_554:
.LINE 1908

; 1909	         if ( strcmp( game->list[1].cmd, "slab" ) == 0 )
	LD	BC,L__548
	PUSH	BC
.LINE 1909

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	(IX+-5),IY
	CALL	_strcmp
	LD	IY,(IX+-5)
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_558
; 1910	         {
; 1911	            switch(map[cr].special)
.LINE 1911

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	BC,136
	LD	IY,HL
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	DE,2
	LD	BC,L__550
	CALL	__case
	JP	(HL)
L__550:
	DW	25
	DB	0
	JMP	L_555
	DW	26
	DB	0
	JMP	L_556
	JMP	L_561
; 1912	            {
; 1913	               case SE_SLAB_CLOSED:
L_555:
.LINE 1913

; 1914	                  printf("\nAfter some major effort, you manage to move the slab a few inches.\n");
	LD	BC,L__551
	PUSH	BC
.LINE 1914

	LD	(IX+-5),IY
	CALL	_printf
	LD	IY,(IX+-5)
	POP	BC
; 1915	                  map[cr].special = SE_SLAB_OPEN;
.LINE 1915

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	IY,HL
	LD.LIS	HL,26
	LD	BC,136
	CALL	__sstiy
; 1916	                  game->score += special[SE_SLAB_OPEN].score;
	LD	IY,(IX+6)
	LD	DE,(IX+6)
.LINE 1916

	LD	BC,(_special+3226)
	CALL	__stoi
	LD	BC,(IY+12)
	ADD	HL,BC
	LD	IY,DE
	LD	(IY+12),HL
; 1917	                  break;
.LINE 1917

	JMP	L_561
; 1918	               case SE_SLAB_OPEN:
L_556:
.LINE 1918

; 1919	                  printf("\nAfter some major effort, you manage to move the slab back.\n");
	LD	BC,L__552
	PUSH	BC
.LINE 1919

	LD	(IX+-5),IY
	CALL	_printf
	LD	IY,(IX+-5)
	POP	BC
; 1920	                  map[cr].special = SE_SLAB_CLOSED;
.LINE 1920

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	IY,HL
	LD.LIS	HL,25
	LD	BC,136
	CALL	__sstiy
; 1921	                  break;
.LINE 1921

	JMP	L_561
; 1922	            }
; 1923	         }
; 1924	         else
L_558:
.LINE 1924

; 1925	         {
; 1926	            printf("\nYou can't move a %s.\n", game->list[1].cmd);
.LINE 1926

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,L__553
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
; 1927	         }
; 1928	         break;
.LINE 1928

	JMP	L_561
; 1929	
; 1930	      default:
L_560:
.LINE 1930

; 1931	         printf("\nThere is nothing here to move.\n");
	LD	BC,L__554
	PUSH	BC
.LINE 1931

	CALL	_printf
	POP	BC
; 1932	         break;
; 1933	   }
; 1934	}
L_561:
.LINE 1934

	LD	SP,IX
	POP	IX
	RET	


;**************************** _HandleMove ***************************
;Name                         Addr/Register   Size   Type
;_special                            IMPORT    124   variable
;_printf                             IMPORT  -----   function
;_map                                IMPORT    140   variable
;_strcmp                             IMPORT  -----   function
;cr                                    IX-2      2   variable
;game                                  IX+6      3   parameter


; Stack Frame Size: 14 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "HandleMove",1934,"_HandleMove"
	SEGMENT STRSECT
L__548:
	DB	"slab"
	DB	0
L__551:
	DB	10
	DB	"After some major effort, you manage to move the slab a few inches."
	DB	10,0
L__552:
	DB	10
	DB	"After some major effort, you manage to move the slab back."
	DB	10,0
L__553:
	DB	10
	DB	"You can't move a %s."
	DB	10,0
L__554:
	DB	10
	DB	"There is nothing here to move."
	DB	10,0
	SEGMENT code
; 1935	
; 1936	
; 1937	/* HandlePick() - handle pick object command
; 1938	 *
; 1939	 */
; 1940	void HandlePick(GAME_S_T *game)
; 1941	{
_HandlePick:
.DEFINE "_HandlePick"

.VALUE _HandlePick

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "HandlePick",1941,"_HandlePick"

.LINE 1941

.DEFINE "game"

.CLASS 65

.VALUE 6

.TAG "game_s_t"

.TYPE 40

.ENDEF

.DEFINE "cr"

.CLASS 65

.VALUE -2

.TYPE 3

.ENDEF

.DEFINE "index"

.CLASS 65

.VALUE -4

.TYPE 3

.ENDEF

; 1942	   INDEX_T	cr, index;
; 1943	
; 1944	   cr = game->current_room;
.LINE 1944

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
	PUSH	BC
	DEC	SP
	LD	IY,(IX+6)
	LD	BC,(IY+10)
	LD	(IX+-2),C
	LD	(IX+-1),B
; 1945	
; 1946	   switch(cr)
.LINE 1946

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	DE,2
	LD	BC,L__556
	CALL	__case
	JP	(HL)
L__556:
	DW	13
	DB	0
	JMP	L_562
	DW	28
	DB	0
	JMP	L_572
	JMP	L_582
; 1947	   {
; 1948	      case RM_OUTSIDE_MAIN:
L_562:
.LINE 1948

; 1949	         if ( strcmp( game->list[1].cmd, "lock" ) == 0 
; 1950			|| strcmp( game->list[1].cmd, "padlock" ) == 0 )
	LD	BC,L__557
	PUSH	BC
.LINE 1950

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	(IX+-7),IY
	CALL	_strcmp
	LD	IY,(IX+-7)
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_569
	LD	BC,L__559
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	(IX+-7),IY
	CALL	_strcmp
	LD	IY,(IX+-7)
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_570
L_569:
; 1951	         {
; 1952	            if ( HaveObject(game, OBJ_NAIL, &index) )
	PEA	IX+-4
	LD	BC,6
	PUSH	BC
	LD	BC,(IX+6)
	PUSH	BC
.LINE 1952

	LD	(IX+-7),IY
	CALL	_HaveObject
	LD	IY,(IX+-7)
	POP	BC
	POP	BC
	POP	BC
	OR	A,A
	JR	Z,L_568
; 1953	            {
; 1954	               printf("(with %s)\n", object[game->inventory.list[index]].name);
	LD	BC,(IX+-4)
	CALL	__stoi
	ADD	HL,HL
	LD	BC,HL
.LINE 1954

	LD	DE,(IX+6)
	LD	HL,110
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,(HL)
	CALL	__stoi
	LD	BC,HL
	LD	HL,244
	CALL	__imuls
	LD	BC,_object
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+84
	LD	BC,L__562
	PUSH	BC
	LD	(IX+-7),IY
	CALL	_printf
	LD	IY,(IX+-7)
	POP	BC
	POP	BC
; 1955	               switch(map[cr].special)
.LINE 1955

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	BC,136
	LD	IY,HL
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	DE,3
	LD	BC,L__563
	CALL	__case
	JP	(HL)
L__563:
	DW	2
	DB	0
	JMP	L_564
	DW	3
	DB	0
	JMP	L_565
	DW	4
	DB	0
	JMP	L_566
	JMP	L_583
; 1956	               {
; 1957	                  case SE_ODOOR_LOCKED:
L_564:
.LINE 1957

; 1958	                     printf("\nAfter some effort, the padlock clicks open.\n");
	LD	BC,L__564
	PUSH	BC
.LINE 1958

	LD	(IX+-7),IY
	CALL	_printf
	LD	IY,(IX+-7)
	POP	BC
; 1959	                     map[cr].special = SE_ODOOR_CLOSED;
.LINE 1959

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	IY,HL
	LD.LIS	HL,3
	LD	BC,136
	CALL	__sstiy
; 1960	                     game->score += special[SE_ODOOR_CLOSED].score;
	LD	IY,(IX+6)
	LD	DE,(IX+6)
.LINE 1960

	LD	BC,(_special+374)
	CALL	__stoi
	LD	BC,(IY+12)
	ADD	HL,BC
	LD	IY,DE
	LD	(IY+12),HL
; 1961	                     break;
.LINE 1961

	JMP	L_583
; 1962	                  case SE_ODOOR_CLOSED:
L_565:
.LINE 1962

; 1963	                  case SE_ODOOR_OPEN:
L_566:
.LINE 1963

; 1964	                     printf("\nThe padlock is already unlocked.\n");
	LD	BC,L__565
	PUSH	BC
.LINE 1964

	CALL	_printf
	POP	BC
; 1965	                     break;
.LINE 1965

	JMP	L_583
; 1966	               }
; 1967	            }
; 1968	            else
L_568:
.LINE 1968

; 1969	            {
; 1970	               printf("\nYou aren't carrying anything to pick with.\n");
	LD	BC,L__566
	PUSH	BC
.LINE 1970

	CALL	_printf
	POP	BC
; 1971	            }
; 1972	         }
; 1973	         else
.LINE 1973

	JMP	L_583
L_570:
; 1974	         {
; 1975	            printf("\nYou can't pick a %s.\n", game->list[1].cmd);
.LINE 1975

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,L__567
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
; 1976	         }
; 1977	         break;
.LINE 1977

	JMP	L_583
; 1978	
; 1979	      case RM_CREVICE:
L_572:
.LINE 1979

; 1980	         if ( strcmp( game->list[1].cmd, "lock" ) == 0 
; 1981			|| strcmp( game->list[1].cmd, "grate" ) == 0 )
	LD	BC,L__568
	PUSH	BC
.LINE 1981

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	(IX+-7),IY
	CALL	_strcmp
	LD	IY,(IX+-7)
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_579
	LD	BC,L__570
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	(IX+-7),IY
	CALL	_strcmp
	LD	IY,(IX+-7)
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_580
L_579:
; 1982	         {
; 1983	            if ( HaveObject(game, OBJ_NAIL, &index) )
	PEA	IX+-4
	LD	BC,6
	PUSH	BC
	LD	BC,(IX+6)
	PUSH	BC
.LINE 1983

	LD	(IX+-7),IY
	CALL	_HaveObject
	LD	IY,(IX+-7)
	POP	BC
	POP	BC
	POP	BC
	OR	A,A
	JR	Z,L_578
; 1984	            {
; 1985	               printf("(with %s)\n", object[game->inventory.list[index]].name);
	LD	BC,(IX+-4)
	CALL	__stoi
	ADD	HL,HL
	LD	BC,HL
.LINE 1985

	LD	DE,(IX+6)
	LD	HL,110
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,(HL)
	CALL	__stoi
	LD	BC,HL
	LD	HL,244
	CALL	__imuls
	LD	BC,_object
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+84
	LD	BC,L__573
	PUSH	BC
	LD	(IX+-7),IY
	CALL	_printf
	LD	IY,(IX+-7)
	POP	BC
	POP	BC
; 1986	               switch(map[cr].special)
.LINE 1986

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	BC,136
	LD	IY,HL
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	DE,3
	LD	BC,L__574
	CALL	__case
	JP	(HL)
L__574:
	DW	19
	DB	0
	JMP	L_574
	DW	20
	DB	0
	JMP	L_575
	DW	21
	DB	0
	JMP	L_576
	JMP	L_583
; 1987	               {
; 1988	                  case SE_GRATE_LOCKED:
L_574:
.LINE 1988

; 1989	                     printf("\nAfter some effort, the lock clicks open.\n");
	LD	BC,L__575
	PUSH	BC
.LINE 1989

	LD	(IX+-7),IY
	CALL	_printf
	LD	IY,(IX+-7)
	POP	BC
; 1990	                     map[cr].special = SE_GRATE_CLOSED;
.LINE 1990

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	IY,HL
	LD.LIS	HL,20
	LD	BC,136
	CALL	__sstiy
; 1991	                     game->score += special[SE_GRATE_CLOSED].score;
	LD	IY,(IX+6)
	LD	DE,(IX+6)
.LINE 1991

	LD	BC,(_special+2482)
	CALL	__stoi
	LD	BC,(IY+12)
	ADD	HL,BC
	LD	IY,DE
	LD	(IY+12),HL
; 1992	                     break;
.LINE 1992

	JMP	L_583
; 1993	                  case SE_GRATE_CLOSED:
L_575:
.LINE 1993

; 1994	                  case SE_GRATE_OPEN:
L_576:
.LINE 1994

; 1995	                     printf("\nThe grate is already unlocked.\n");
	LD	BC,L__576
	PUSH	BC
.LINE 1995

	CALL	_printf
	POP	BC
; 1996	                     break;
.LINE 1996

	JMP	L_583
; 1997	               }
; 1998	            }
; 1999	            else
L_578:
.LINE 1999

; 2000	            {
; 2001	               printf("\nYou aren't carrying anything to pick with.\n");
	LD	BC,L__577
	PUSH	BC
.LINE 2001

	CALL	_printf
	POP	BC
; 2002	            }
; 2003	         }
; 2004	         else
.LINE 2004

	JMP	L_583
L_580:
; 2005	         {
; 2006	            printf("\nYou can't pick a %s.\n", game->list[1].cmd);
.LINE 2006

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,L__578
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
; 2007	         }
; 2008	         break;
.LINE 2008

	JMP	L_583
; 2009	
; 2010	      default:
L_582:
.LINE 2010

; 2011	         printf("\nThere is nothing here to pick!\n");
	LD	BC,L__579
	PUSH	BC
.LINE 2011

	CALL	_printf
	POP	BC
; 2012	         break;
; 2013	   }
; 2014	}
L_583:
.LINE 2014

	LD	SP,IX
	POP	IX
	RET	


;**************************** _HandlePick ***************************
;Name                         Addr/Register   Size   Type
;_special                            IMPORT    124   variable
;_map                                IMPORT    140   variable
;_object                             IMPORT    244   variable
;_printf                             IMPORT  -----   function
;_HaveObject                         IMPORT  -----   function
;_strcmp                             IMPORT  -----   function
;index                                 IX-4      2   variable
;cr                                    IX-2      2   variable
;game                                  IX+6      3   parameter


; Stack Frame Size: 16 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "HandlePick",2014,"_HandlePick"
	SEGMENT STRSECT
L__557:
	DB	"lock"
	DB	0
L__559:
	DB	"padlock"
	DB	0
L__562:
	DB	"(with %s)"
	DB	10,0
L__564:
	DB	10
	DB	"After some effort, the padlock clicks open."
	DB	10,0
L__565:
	DB	10
	DB	"The padlock is already unlocked."
	DB	10,0
L__566:
	DB	10
	DB	"You aren't carrying anything to pick with."
	DB	10,0
L__567:
	DB	10
	DB	"You can't pick a %s."
	DB	10,0
L__568:
	DB	"lock"
	DB	0
L__570:
	DB	"grate"
	DB	0
L__573:
	DB	"(with %s)"
	DB	10,0
L__575:
	DB	10
	DB	"After some effort, the lock clicks open."
	DB	10,0
L__576:
	DB	10
	DB	"The grate is already unlocked."
	DB	10,0
L__577:
	DB	10
	DB	"You aren't carrying anything to pick with."
	DB	10,0
L__578:
	DB	10
	DB	"You can't pick a %s."
	DB	10,0
L__579:
	DB	10
	DB	"There is nothing here to pick!"
	DB	10,0
	SEGMENT code
; 2015	
; 2016	
; 2017	/* HandleUnlock() - handle unlock object command
; 2018	 *
; 2019	 */
; 2020	void HandleUnlock(GAME_S_T *game)
; 2021	{
_HandleUnlock:
.DEFINE "_HandleUnlock"

.VALUE _HandleUnlock

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "HandleUnlock",2021,"_HandleUnlock"

.LINE 2021

.DEFINE "game"

.CLASS 65

.VALUE 6

.TAG "game_s_t"

.TYPE 40

.ENDEF

.DEFINE "cr"

.CLASS 65

.VALUE -2

.TYPE 3

.ENDEF

.DEFINE "index"

.CLASS 65

.VALUE -4

.TYPE 3

.ENDEF

; 2022	   INDEX_T	cr, index;
; 2023	
; 2024	   cr = game->current_room;
.LINE 2024

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
	PUSH	BC
	DEC	SP
	LD	IY,(IX+6)
	LD	BC,(IY+10)
	LD	(IX+-2),C
	LD	(IX+-1),B
; 2025	
; 2026	   switch(cr)
.LINE 2026

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	DE,1
	LD	BC,L__581
	CALL	__case
	JP	(HL)
L__581:
	DW	28
	DB	0
	JMP	L_584
	JMP	L_594
; 2027	   {
; 2028	      case RM_CREVICE:
L_584:
.LINE 2028

; 2029	         if ( strcmp( game->list[1].cmd, "lock" ) == 0 
; 2030			|| strcmp( game->list[1].cmd, "grate" ) == 0 )
	LD	BC,L__582
	PUSH	BC
.LINE 2030

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	(IX+-7),IY
	CALL	_strcmp
	LD	IY,(IX+-7)
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_591
	LD	BC,L__584
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	(IX+-7),IY
	CALL	_strcmp
	LD	IY,(IX+-7)
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_592
L_591:
; 2031	         {
; 2032	            if ( HaveObject(game, OBJ_KEY, &index) )
	PEA	IX+-4
	LD	BC,34
	PUSH	BC
	LD	BC,(IX+6)
	PUSH	BC
.LINE 2032

	LD	(IX+-7),IY
	CALL	_HaveObject
	LD	IY,(IX+-7)
	POP	BC
	POP	BC
	POP	BC
	OR	A,A
	JR	Z,L_590
; 2033	            {
; 2034	               printf("(with %s)\n", object[game->inventory.list[index]].name);
	LD	BC,(IX+-4)
	CALL	__stoi
	ADD	HL,HL
	LD	BC,HL
.LINE 2034

	LD	DE,(IX+6)
	LD	HL,110
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,(HL)
	CALL	__stoi
	LD	BC,HL
	LD	HL,244
	CALL	__imuls
	LD	BC,_object
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+84
	LD	BC,L__587
	PUSH	BC
	LD	(IX+-7),IY
	CALL	_printf
	LD	IY,(IX+-7)
	POP	BC
	POP	BC
; 2035	               switch(map[cr].special)
.LINE 2035

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	BC,136
	LD	IY,HL
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	DE,3
	LD	BC,L__588
	CALL	__case
	JP	(HL)
L__588:
	DW	19
	DB	0
	JMP	L_586
	DW	20
	DB	0
	JMP	L_587
	DW	21
	DB	0
	JMP	L_588
	JMP	L_595
; 2036	               {
; 2037	                  case SE_GRATE_LOCKED:
L_586:
.LINE 2037

; 2038	                     printf("\nAfter some effort, the lock clicks open.\n");
	LD	BC,L__589
	PUSH	BC
.LINE 2038

	LD	(IX+-7),IY
	CALL	_printf
	LD	IY,(IX+-7)
	POP	BC
; 2039	                     map[cr].special = SE_GRATE_CLOSED;
.LINE 2039

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	IY,HL
	LD.LIS	HL,20
	LD	BC,136
	CALL	__sstiy
; 2040	                     game->score += special[SE_GRATE_CLOSED].score;
	LD	IY,(IX+6)
	LD	DE,(IX+6)
.LINE 2040

	LD	BC,(_special+2482)
	CALL	__stoi
	LD	BC,(IY+12)
	ADD	HL,BC
	LD	IY,DE
	LD	(IY+12),HL
; 2041	                     break;
.LINE 2041

	JMP	L_595
; 2042	                  case SE_GRATE_CLOSED:
L_587:
.LINE 2042

; 2043	                  case SE_GRATE_OPEN:
L_588:
.LINE 2043

; 2044	                     printf("\nThe grate is already unlocked.\n");
	LD	BC,L__590
	PUSH	BC
.LINE 2044

	CALL	_printf
	POP	BC
; 2045	                     break;
.LINE 2045

	JMP	L_595
; 2046	               }
; 2047	            }
; 2048	            else
L_590:
.LINE 2048

; 2049	            {
; 2050	               printf("\nYou aren't carrying a key.\n");
	LD	BC,L__591
	PUSH	BC
.LINE 2050

	CALL	_printf
	POP	BC
; 2051	            }
; 2052	         }
; 2053	         else
.LINE 2053

	JMP	L_595
L_592:
; 2054	         {
; 2055	            printf("\nYou can't unlock a %s.\n", game->list[1].cmd);
.LINE 2055

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,L__592
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
; 2056	         }
; 2057	         break;
.LINE 2057

	JMP	L_595
; 2058	
; 2059	      default:
L_594:
.LINE 2059

; 2060	         printf("\nThere is nothing here to unlock!\n");
	LD	BC,L__593
	PUSH	BC
.LINE 2060

	CALL	_printf
	POP	BC
; 2061	         break;
; 2062	   }
; 2063	}
L_595:
.LINE 2063

	LD	SP,IX
	POP	IX
	RET	


;**************************** _HandleUnlock ***************************
;Name                         Addr/Register   Size   Type
;_special                            IMPORT    124   variable
;_map                                IMPORT    140   variable
;_object                             IMPORT    244   variable
;_printf                             IMPORT  -----   function
;_HaveObject                         IMPORT  -----   function
;_strcmp                             IMPORT  -----   function
;index                                 IX-4      2   variable
;cr                                    IX-2      2   variable
;game                                  IX+6      3   parameter


; Stack Frame Size: 16 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "HandleUnlock",2063,"_HandleUnlock"
	SEGMENT STRSECT
L__582:
	DB	"lock"
	DB	0
L__584:
	DB	"grate"
	DB	0
L__587:
	DB	"(with %s)"
	DB	10,0
L__589:
	DB	10
	DB	"After some effort, the lock clicks open."
	DB	10,0
L__590:
	DB	10
	DB	"The grate is already unlocked."
	DB	10,0
L__591:
	DB	10
	DB	"You aren't carrying a key."
	DB	10,0
L__592:
	DB	10
	DB	"You can't unlock a %s."
	DB	10,0
L__593:
	DB	10
	DB	"There is nothing here to unlock!"
	DB	10,0
	SEGMENT code
; 2064	
; 2065	
; 2066	/* HandleFeed() - handle feed object command
; 2067	 *
; 2068	 */
; 2069	void HandleFeed(GAME_S_T *game)
; 2070	{
_HandleFeed:
.DEFINE "_HandleFeed"

.VALUE _HandleFeed

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "HandleFeed",2070,"_HandleFeed"

.LINE 2070

.DEFINE "game"

.CLASS 65

.VALUE 6

.TAG "game_s_t"

.TYPE 40

.ENDEF

.DEFINE "cr"

.CLASS 65

.VALUE -2

.TYPE 3

.ENDEF

.DEFINE "count"

.CLASS 65

.VALUE -5

.TYPE 4

.ENDEF

.DEFINE "index"

.CLASS 65

.VALUE -7

.TYPE 3

.ENDEF

; 2071	   INDEX_T	cr;
; 2072	   INDEX_T	index;
; 2073	   int 		count;
; 2074	
; 2075	   cr = game->current_room;
.LINE 2075

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	IY,IX+-19
	LD	SP,IY
	LD	IY,(IX+6)
	LD	BC,(IY+10)
	LD	(IX+-2),C
	LD	(IX+-1),B
; 2076	
; 2077	   switch(cr)
.LINE 2077

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	DE,2
	LD	BC,L__595
	CALL	__case
	JP	(HL)
L__595:
	DW	11
	DB	0
	JMP	L_596
	DW	29
	DB	0
	JMP	L_605
	JMP	L_614
; 2078	   {
; 2079	      case RM_BEAVER_POND:
L_596:
.LINE 2079

; 2080	         if ( strcmp( game->list[1].cmd, "beaver" ) == 0 )
	LD	BC,L__596
	PUSH	BC
.LINE 2080

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	(IX+-19),IY
	CALL	_strcmp
	LD	IY,(IX+-19)
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_603
; 2081	         {
; 2082	            if ( HaveObject(game, OBJ_TWINKIES, &index) )
	PEA	IX+-7
	LD	BC,5
	PUSH	BC
	LD	BC,(IX+6)
	PUSH	BC
.LINE 2082

	LD	(IX+-19),IY
	CALL	_HaveObject
	LD	IY,(IX+-19)
	POP	BC
	POP	BC
	POP	BC
	OR	A,A
	JR	Z,L_601
; 2083	            {
; 2084	               printf("(the %s)\n", object[OBJ_TWINKIES].name);
	LD	BC,_object+1304
	PUSH	BC
	LD	BC,L__599
	PUSH	BC
.LINE 2084

	LD	(IX+-19),IY
	CALL	_printf
	LD	IY,(IX+-19)
	POP	BC
	POP	BC
; 2085	               switch(map[cr].special)
.LINE 2085

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	BC,136
	LD	IY,HL
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	DE,3
	LD	BC,L__600
	CALL	__case
	JP	(HL)
L__600:
	DW	8
	DB	0
	JMP	L_597
	DW	9
	DB	0
	JMP	L_598
	DW	10
	DB	0
	JMP	L_599
	JMP	L_615
; 2086	               {
; 2087	                  case SE_BEAV_HUNGRY:
L_597:
.LINE 2087

; 2088	                     printf("\nThe beaver waddles up, sniffs the twinkies, and then bites your leg.\n");
	LD	BC,L__601
	PUSH	BC
.LINE 2088

	LD	(IX+-19),IY
	CALL	_printf
	LD	IY,(IX+-19)
	POP	BC
; 2089	                     map[cr].special = SE_BEAV_BITES;
.LINE 2089

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	IY,HL
	LD.LIS	HL,9
	LD	BC,136
	CALL	__sstiy
; 2090	                     game->health -= DAMAGE_BEAVER;
	LD	BC,(IX+6)
.LINE 2090

	LD	IY,(IX+6)
	LEA	HL,IY+15
	LD	IY,(HL)
	LEA	IY,IY+-10
	LD	DE,IY
	LD	IY,BC
	LD	(IY+15),DE
; 2091	                     break;
.LINE 2091

	JMP	L_615
; 2092	                  case SE_BEAV_BITES:
L_598:
.LINE 2092

; 2093	                     printf("\nThe beaver has ignored your offering, and bites you again.\n");
	LD	BC,L__602
	PUSH	BC
.LINE 2093

	CALL	_printf
	POP	BC
; 2094	                     game->health -= DAMAGE_BEAVER;
	LD	BC,(IX+6)
.LINE 2094

	LD	IY,(IX+6)
	LEA	HL,IY+15
	LD	IY,(HL)
	LEA	IY,IY+-10
	LD	DE,IY
	LD	IY,BC
	LD	(IY+15),DE
; 2095	                     break;
.LINE 2095

	JMP	L_615
; 2096	                  case SE_BEAV_DEAD:
L_599:
.LINE 2096

; 2097	                     printf("\nWhy you would try to feed a dead beaver is beyond me.\n");
	LD	BC,L__603
	PUSH	BC
.LINE 2097

	CALL	_printf
	POP	BC
; 2098	                     break;
.LINE 2098

	JMP	L_615
; 2099	               }
; 2100	            }
; 2101	            else
L_601:
.LINE 2101

; 2102	            {
; 2103	               printf("\nYou aren't carrying any food item.\n");
	LD	BC,L__604
	PUSH	BC
.LINE 2103

	CALL	_printf
	POP	BC
; 2104	            }
; 2105	         }
; 2106	         else
.LINE 2106

	JMP	L_615
L_603:
; 2107	         {
; 2108	            printf("\nYou can't feed a %s.\n", game->list[1].cmd);
.LINE 2108

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,L__605
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
; 2109	         }
; 2110	         break;
.LINE 2110

	JMP	L_615
; 2111	
; 2112	      case RM_RUG_ROOM:
L_605:
.LINE 2112

; 2113	         if ( strcmp( game->list[1].cmd, "bear" ) == 0 )
	LD	BC,L__606
	PUSH	BC
.LINE 2113

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	(IX+-19),IY
	CALL	_strcmp
	LD	IY,(IX+-19)
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_612
; 2114	         {
; 2115	            if ( HaveObject(game, OBJ_TWINKIES, &index) )
	PEA	IX+-7
	LD	BC,5
	PUSH	BC
	LD	BC,(IX+6)
	PUSH	BC
.LINE 2115

	LD	(IX+-19),IY
	CALL	_HaveObject
	LD	IY,(IX+-19)
	POP	BC
	POP	BC
	POP	BC
	OR	A,A
	JR	Z,L_610
; 2116	            {
; 2117	               printf("(the %s)\n", object[OBJ_TWINKIES].name);
	LD	BC,_object+1304
	PUSH	BC
	LD	BC,L__609
	PUSH	BC
.LINE 2117

	LD	(IX+-19),IY
	CALL	_printf
	LD	IY,(IX+-19)
	POP	BC
	POP	BC
; 2118	               switch(map[cr].special)
.LINE 2118

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	BC,136
	LD	IY,HL
	CALL	__sldiy
	LD	BC,HL
	CALL	__stoi
	LD	DE,3
	LD	BC,L__610
	CALL	__case
	JP	(HL)
L__610:
	DW	22
	DB	0
	JMP	L_606
	DW	23
	DB	0
	JMP	L_607
	DW	24
	DB	0
	JMP	L_608
	JMP	L_615
; 2119	               {
; 2120	                  case SE_BEAR_HUNGRY:
L_606:
.LINE 2120

; 2121	                     printf("\nThe bear wakes up, eagerly gobbles down your twinkies, then wanders away.\n");
	LD	BC,L__611
	PUSH	BC
.LINE 2121

	LD	(IX+-19),IY
	CALL	_printf
	LD	IY,(IX+-19)
	POP	BC
; 2122	                     map[cr].special = SE_BEAR_GONE;
.LINE 2122

	LD	BC,(IX+-2)
	CALL	__stoi
	LD	BC,HL
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	IY,HL
	LD.LIS	HL,23
	LD	BC,136
	CALL	__sstiy
; 2123	                     game->score += special[SE_BEAR_GONE].score;
	LD	IY,(IX+6)
	LD	DE,(IX+6)
.LINE 2123

	LD	BC,(_special+2854)
	CALL	__stoi
	LD	BC,(IY+12)
	ADD	HL,BC
	LD	IY,DE
	LD	(IY+12),HL
; 2124	                     /* remove item from inventory */
; 2125	                     count = game->inventory.count;
.LINE 2125

	LD	IY,(IX+6)
	LD	BC,(IY+108)
	CALL	__stoi
	LD	(IX+-5),HL
; 2126	                     game->inventory.list[index] = game->inventory.list[count - 1];
.LINE 2126

	LD	IY,(IX+-5)
	LEA	IY,IY+-1
	LD	(IX+-10),IY
	LD	BC,(IX+6)
	LD	HL,(IX+-10)
	LD	DE,(IX+6)
	ADD	HL,HL
	LD	(IX+-13),BC	; spill
	LD	(IX+-16),HL	; spill
	LD	BC,(IX+-13)	; unspill
	LD	HL,110
	ADD	HL,BC
	LD	(IX+-13),BC	; spill
	LD	BC,(IX+-16)	; unspill
	ADD	HL,BC
	LD	BC,(IX+-13)	; unspill
	LD	IY,HL
	LD	BC,(IX+-7)
	CALL	__stoi
	ADD	HL,HL
	LD	BC,HL
	LD	HL,110
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,(IY)
	LD	(HL),C
	INC	HL
	LD	(HL),B
; 2127	                     game->inventory.count = count - 1;
	LD	IY,(IX+6)
.LINE 2127

	LD	BC,(IX+-10)
	LD	(IY+108),C
	LD	(IY+109),B
; 2128	                     break;
.LINE 2128

	JMP	L_615
; 2129	                  case SE_BEAR_GONE:
L_607:
.LINE 2129

; 2130	                     printf("\nThe bear is long gone, having fed on your twinkies.\n");
	LD	BC,L__612
	PUSH	BC
.LINE 2130

	CALL	_printf
	POP	BC
; 2131	                     break;
.LINE 2131

	JMP	L_615
; 2132	                  case SE_BEAR_DEAD:
L_608:
.LINE 2132

; 2133	                     printf("\nFeeding twinkies to a dead bear is just plain twisted.\n");
	LD	BC,L__613
	PUSH	BC
.LINE 2133

	CALL	_printf
	POP	BC
; 2134	                     break;
.LINE 2134

	JMP	L_615
; 2135	               }
; 2136	            }
; 2137	            else
L_610:
.LINE 2137

; 2138	            {
; 2139	               printf("\nYou aren't carrying any food item.\n");
	LD	BC,L__614
	PUSH	BC
.LINE 2139

	CALL	_printf
	POP	BC
; 2140	            }
; 2141	         }
; 2142	         else
.LINE 2142

	JMP	L_615
L_612:
; 2143	         {
; 2144	            printf("\nYou can't feed a %s.\n", game->list[1].cmd);
.LINE 2144

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,L__615
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
; 2145	         }
; 2146	         break;
.LINE 2146

	JMP	L_615
; 2147	
; 2148	      default:
L_614:
.LINE 2148

; 2149	         printf("\nThere is nothing here to feed!\n");
	LD	BC,L__616
	PUSH	BC
.LINE 2149

	CALL	_printf
	POP	BC
; 2150	         break;
; 2151	   }
; 2152	}
L_615:
.LINE 2152

	LD	SP,IX
	POP	IX
	RET	


;**************************** _HandleFeed ***************************
;Name                         Addr/Register   Size   Type
;_special                            IMPORT    124   variable
;_map                                IMPORT    140   variable
;_object                             IMPORT    244   variable
;_printf                             IMPORT  -----   function
;_HaveObject                         IMPORT  -----   function
;_strcmp                             IMPORT  -----   function
;index                                 IX-7      2   variable
;count                                 IX-5      3   variable
;cr                                    IX-2      2   variable
;game                                  IX+6      3   parameter


; Stack Frame Size: 28 (bytes)
;       Spill Code: 6 (instruction)


.ENDFUNC "HandleFeed",2152,"_HandleFeed"
	SEGMENT STRSECT
L__596:
	DB	"beaver"
	DB	0
L__599:
	DB	"(the %s)"
	DB	10,0
L__601:
	DB	10
	DB	"The beaver waddles up, sniffs the twinkies, and then bites your leg."
	DB	10,0
L__602:
	DB	10
	DB	"The beaver has ignored your offering, and bites you again."
	DB	10,0
L__603:
	DB	10
	DB	"Why you would try to feed a dead beaver is beyond me."
	DB	10,0
L__604:
	DB	10
	DB	"You aren't carrying any food item."
	DB	10,0
L__605:
	DB	10
	DB	"You can't feed a %s."
	DB	10,0
L__606:
	DB	"bear"
	DB	0
L__609:
	DB	"(the %s)"
	DB	10,0
L__611:
	DB	10
	DB	"The bear wakes up, eagerly gobbles down your twinkies, then wanders away."
	DB	10,0
L__612:
	DB	10
	DB	"The bear is long gone, having fed on your twinkies."
	DB	10,0
L__613:
	DB	10
	DB	"Feeding twinkies to a dead bear is just plain twisted."
	DB	10,0
L__614:
	DB	10
	DB	"You aren't carrying any food item."
	DB	10,0
L__615:
	DB	10
	DB	"You can't feed a %s."
	DB	10,0
L__616:
	DB	10
	DB	"There is nothing here to feed!"
	DB	10,0
	SEGMENT code
; 2153	
; 2154	
; 2155	/* HandleRead() - handle read (examine) object command
; 2156	 *
; 2157	 */
; 2158	void HandleRead(GAME_S_T *game)
; 2159	{
_HandleRead:
.DEFINE "_HandleRead"

.VALUE _HandleRead

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "HandleRead",2159,"_HandleRead"

.LINE 2159

.DEFINE "game"

.CLASS 65

.VALUE 6

.TAG "game_s_t"

.TYPE 40

.ENDEF

.DEFINE "i"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

.DEFINE "invcount"

.CLASS 65

.VALUE -5

.TYPE 3

.ENDEF

.DEFINE "exm"

.CLASS 65

.VALUE -7

.TYPE 3

.ENDEF

.DEFINE "cr"

.CLASS 65

.VALUE -9

.TYPE 3

.ENDEF

.DEFINE "obj"

.CLASS 65

.VALUE -11

.TYPE 3

.ENDEF

; 2160	   INDEX_T	obj;
; 2161	   INDEX_T	exm;
; 2162	   INDEX_T	invcount;
; 2163	   INDEX_T	cr;
; 2164	   int		i;
; 2165	
; 2166	   invcount = game->inventory.count;
.LINE 2166

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	IY,IX+-11
	LD	SP,IY
	LD	IY,(IX+6)
	LD	BC,(IY+108)
	LD	(IX+-5),C
	LD	(IX+-4),B
; 2167	   cr = game->current_room;
.LINE 2167

	LD	IY,(IX+6)
	LD	BC,(IY+10)
	LD	(IX+-9),C
	LD	(IX+-8),B
; 2168	   exm = EX_NULL;
.LINE 2168

	LD	A,255
	LD	(IX+-7),A
	LD	(IX+-6),A
; 2169	
; 2170	   switch(cr)
.LINE 2170

	LD	BC,(IX+-9)
	CALL	__stoi
	LD	DE,15
	LD	BC,L__618
	CALL	__case
	JP	(HL)
L__618:
	DW	0
	DB	0
	JMP	L_616
	DW	2
	DB	0
	JMP	L_619
	DW	11
	DB	0
	JMP	L_622
	DW	13
	DB	0
	JMP	L_625
	DW	19
	DB	0
	JMP	L_633
	DW	22
	DB	0
	JMP	L_630
	DW	28
	DB	0
	JMP	L_636
	DW	29
	DB	0
	JMP	L_639
	DW	30
	DB	0
	JMP	L_644
	DW	33
	DB	0
	JMP	L_647
	DW	34
	DB	0
	JMP	L_650
	DW	35
	DB	0
	JMP	L_653
	DW	37
	DB	0
	JMP	L_658
	DW	38
	DB	0
	JMP	L_659
	DW	39
	DB	0
	JMP	L_662
	JMP	L_670
; 2171	   {
; 2172	      case RM_MAIN_CHAMBER:
L_616:
.LINE 2172

; 2173	         if ( strcmp( game->list[1].cmd, "chest" ) == 0 )
	LD	BC,L__619
	PUSH	BC
.LINE 2173

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_670
; 2174	         {
; 2175	            printf("\n%s\n", object[OBJ_CHEST].examine);
	LD	BC,_object+1832
	PUSH	BC
	LD	BC,L__621
	PUSH	BC
.LINE 2175

	CALL	_printf
	POP	BC
	POP	BC
; 2176	            return;
.LINE 2176

	JMP	L_674
; 2177	         }
; 2178	         break;
; 2179	
; 2180	      case RM_THRONE:
L_619:
.LINE 2180

; 2181	         if ( strcmp( game->list[1].cmd, "skeleton" ) == 0 )
	LD	BC,L__622
	PUSH	BC
.LINE 2181

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_670
; 2182	         {
; 2183	            printf("\n%s\n", object[OBJ_SKELETON].examine);
	LD	BC,_object+612
	PUSH	BC
	LD	BC,L__624
	PUSH	BC
.LINE 2183

	CALL	_printf
	POP	BC
	POP	BC
; 2184	            return;
.LINE 2184

	JMP	L_674
; 2185	         }
; 2186	         break;
; 2187	
; 2188	      case RM_BEAVER_POND:
L_622:
.LINE 2188

; 2189	         if ( strcmp( game->list[1].cmd, "beaver" ) == 0 )
	LD	BC,L__625
	PUSH	BC
.LINE 2189

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_670
; 2190	         {
; 2191	            printf("\n%s\n", object[OBJ_BEAVER].examine);
	LD	BC,_object+2076
	PUSH	BC
	LD	BC,L__627
	PUSH	BC
.LINE 2191

	CALL	_printf
	POP	BC
	POP	BC
; 2192	            return;
.LINE 2192

	JMP	L_674
; 2193	         }
; 2194	         break;
; 2195	
; 2196	      case RM_OUTSIDE_MAIN:
L_625:
.LINE 2196

; 2197	         if ( strcmp( game->list[1].cmd, "padlock" ) == 0 )
	LD	BC,L__628
	PUSH	BC
.LINE 2197

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_628
; 2198	         {
; 2199	            printf("\n%s\n", object[OBJ_PADLOCK].examine);
	LD	BC,_object+2320
	PUSH	BC
	LD	BC,L__630
	PUSH	BC
.LINE 2199

	CALL	_printf
	POP	BC
	POP	BC
; 2200	            return;
.LINE 2200

	JMP	L_674
; 2201	         }
; 2202	         else if ( strcmp( game->list[1].cmd, "door" ) == 0 )
L_628:
.LINE 2202

	LD	BC,L__631
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_670
; 2203	         {
; 2204	            printf("\n%s\n", object[OBJ_DOOR].examine);
	LD	BC,_object+8176
	PUSH	BC
	LD	BC,L__633
	PUSH	BC
.LINE 2204

	CALL	_printf
	POP	BC
	POP	BC
; 2205	            return;
.LINE 2205

	JMP	L_674
; 2206	         }
; 2207	         break;
; 2208	
; 2209	      case RM_STATUE:
L_630:
.LINE 2209

; 2210	         if ( strcmp( game->list[1].cmd, "statue" ) == 0 )
	LD	BC,L__634
	PUSH	BC
.LINE 2210

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_670
; 2211	         {
; 2212	            printf("\n%s\n", object[OBJ_STATUE].examine);
	LD	BC,_object+3784
	PUSH	BC
	LD	BC,L__636
	PUSH	BC
.LINE 2212

	CALL	_printf
	POP	BC
	POP	BC
; 2213	            return;
.LINE 2213

	JMP	L_674
; 2214	         }
; 2215	         break;
; 2216	
; 2217	      case RM_PILLOW:
L_633:
.LINE 2217

; 2218	         if ( strcmp( game->list[1].cmd, "pillows" ) == 0 )
	LD	BC,L__637
	PUSH	BC
.LINE 2218

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_670
; 2219	         {
; 2220	            printf("\n%s\n", object[OBJ_PILLOWS].examine);
	LD	BC,_object+3296
	PUSH	BC
	LD	BC,L__639
	PUSH	BC
.LINE 2220

	CALL	_printf
	POP	BC
	POP	BC
; 2221	            return;
.LINE 2221

	JMP	L_674
; 2222	         }
; 2223	         break;
; 2224	
; 2225	      case RM_CREVICE:
L_636:
.LINE 2225

; 2226	         if ( strcmp( game->list[1].cmd, "grate" ) == 0 )
	LD	BC,L__640
	PUSH	BC
.LINE 2226

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_670
; 2227	         {
; 2228	            printf("\n%s\n", object[OBJ_GRATE].examine);
	LD	BC,_object+4760
	PUSH	BC
	LD	BC,L__642
	PUSH	BC
.LINE 2228

	CALL	_printf
	POP	BC
	POP	BC
; 2229	            return;
.LINE 2229

	JMP	L_674
; 2230	         }
; 2231	         break;
; 2232	
; 2233	      case RM_RUG_ROOM:
L_639:
.LINE 2233

; 2234	         if ( strcmp( game->list[1].cmd, "rug" ) == 0 )
	LD	BC,L__643
	PUSH	BC
.LINE 2234

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_642
; 2235	         {
; 2236	            printf("\n%s\n", object[OBJ_RUG].examine);
	LD	BC,_object+5004
	PUSH	BC
	LD	BC,L__645
	PUSH	BC
.LINE 2236

	CALL	_printf
	POP	BC
	POP	BC
; 2237	            return;
.LINE 2237

	JMP	L_674
; 2238	         }
; 2239	         else if ( strcmp( game->list[1].cmd, "bear" ) == 0 )
L_642:
.LINE 2239

	LD	BC,L__646
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_670
; 2240	         {
; 2241	            printf("\n%s\n", object[OBJ_BEAR].examine);
	LD	BC,_object+5248
	PUSH	BC
	LD	BC,L__648
	PUSH	BC
.LINE 2241

	CALL	_printf
	POP	BC
	POP	BC
; 2242	            return;
.LINE 2242

	JMP	L_674
; 2243	         }
; 2244	         break;
; 2245	
; 2246	      case RM_NARROW_CAVE:
L_644:
.LINE 2246

; 2247	         if ( strcmp( game->list[1].cmd, "slab" ) == 0 )
	LD	BC,L__649
	PUSH	BC
.LINE 2247

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_670
; 2248	         {
; 2249	            printf("\n%s\n", object[OBJ_SLAB].examine);
	LD	BC,_object+5736
	PUSH	BC
	LD	BC,L__651
	PUSH	BC
.LINE 2249

	CALL	_printf
	POP	BC
	POP	BC
; 2250	            return;
.LINE 2250

	JMP	L_674
; 2251	         }
; 2252	         break;
; 2253	
; 2254	      case RM_LIBRARY:
L_647:
.LINE 2254

; 2255	         if ( strcmp( game->list[1].cmd, "book" ) == 0 )
	LD	BC,L__652
	PUSH	BC
.LINE 2255

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_670
; 2256	         {
; 2257	            printf("\n%s\n", object[OBJ_BOOK].examine);
	LD	BC,_object+6468
	PUSH	BC
	LD	BC,L__654
	PUSH	BC
.LINE 2257

	CALL	_printf
	POP	BC
	POP	BC
; 2258	            return;
.LINE 2258

	JMP	L_674
; 2259	         }
; 2260	         break;
; 2261	
; 2262	      case RM_LARGE_CAVE:
L_650:
.LINE 2262

; 2263	         if ( strcmp( game->list[1].cmd, "fissure" ) == 0 )
	LD	BC,L__655
	PUSH	BC
.LINE 2263

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_670
; 2264	         {
; 2265	            printf("\n%s\n", object[OBJ_FISSURE].examine);
	LD	BC,_object+6712
	PUSH	BC
	LD	BC,L__657
	PUSH	BC
.LINE 2265

	CALL	_printf
	POP	BC
	POP	BC
; 2266	            return;
.LINE 2266

	JMP	L_674
; 2267	         }
; 2268	         break;
; 2269	
; 2270	      case RM_STRANGE:
L_653:
.LINE 2270

; 2271	         if ( strcmp( game->list[1].cmd, "rope" ) == 0 )
	LD	BC,L__658
	PUSH	BC
.LINE 2271

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_656
; 2272	         {
; 2273	            printf("\n%s\n", object[OBJ_ROPE].examine);
	LD	BC,_object+6956
	PUSH	BC
	LD	BC,L__660
	PUSH	BC
.LINE 2273

	CALL	_printf
	POP	BC
	POP	BC
; 2274	            return;
.LINE 2274

	JMP	L_674
; 2275	         }
; 2276	         else if ( strcmp( game->list[1].cmd, "basket" ) == 0 )
L_656:
.LINE 2276

	LD	BC,L__661
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_670
; 2277	         {
; 2278	            printf("\n%s\n", object[OBJ_BASKET].examine);
	LD	BC,_object+7200
	PUSH	BC
	LD	BC,L__663
	PUSH	BC
.LINE 2278

	CALL	_printf
	POP	BC
	POP	BC
; 2279	            return;
.LINE 2279

	JMP	L_674
; 2280	         }
; 2281	         break;
; 2282	
; 2283	      case RM_NORTH_SIDE_LAKE:
L_658:
.LINE 2283

; 2284	      case RM_SOUTH_SIDE_LAKE:
L_659:
.LINE 2284

; 2285	         if ( strcmp( game->list[1].cmd, "lake" ) == 0 )
	LD	BC,L__664
	PUSH	BC
.LINE 2285

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_670
; 2286	         {
; 2287	            printf("\n%s\n", object[OBJ_LAKE].examine);
	LD	BC,_object+8664
	PUSH	BC
	LD	BC,L__666
	PUSH	BC
.LINE 2287

	CALL	_printf
	POP	BC
	POP	BC
; 2288	            return;
.LINE 2288

	JMP	L_674
; 2289	         }
; 2290	         break;
; 2291	
; 2292	      case RM_QUESTION:
L_662:
.LINE 2292

; 2293	         if ( strcmp( game->list[1].cmd, "man" ) == 0 )
	LD	BC,L__667
	PUSH	BC
.LINE 2293

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_670
; 2294	         {
; 2295	            printf("\n%s\n", object[OBJ_MAN].examine);
	LD	BC,_object+7932
	PUSH	BC
	LD	BC,L__669
	PUSH	BC
.LINE 2295

	CALL	_printf
	POP	BC
	POP	BC
; 2296	            return;
.LINE 2296

	JMP	L_674
; 2297	         }
; 2298	         break;
; 2299	   }
L_670:
.LINE 2299

	LD	BC,0
	LD	(IX+-3),BC
; 2300	
; 2301	   for (i = 0; i < invcount; i++)
.LINE 2301

	JMP	L_669
L_667:
; 2302	   {
; 2303	      obj = game->inventory.list[i];
	LD	HL,(IX+-3)
	ADD	HL,HL
	LD	BC,HL
.LINE 2303

	LD	DE,(IX+6)
	LD	HL,110
	ADD	HL,DE
	ADD	HL,BC
	LD	BC,(HL)
	LD	(IX+-11),C
	LD	(IX+-10),B
; 2304	
; 2305	      if ( strcmp( object[obj].key, game->list[1].cmd ) == 0 )
.LINE 2305

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,(IX+-11)
	CALL	__stoi
	LD	BC,HL
	LD	HL,244
	CALL	__imuls
	LD	BC,_object
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+4
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_668
; 2306	      {
; 2307	         exm = obj;
.LINE 2307

	LD	BC,(IX+-11)
	LD	(IX+-7),C
	LD	(IX+-6),B
; 2308	         break;
.LINE 2308

	JMP	L_673
; 2309	      }
; 2310	   }
L_668:
.LINE 2310

	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
L_669:
	LD	BC,(IX+-5)
	CALL	__stoi
	LD	BC,HL
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L_667
L_673:
; 2311	
; 2312	   if (i < invcount)
.LINE 2312

	LD	BC,(IX+-5)
	CALL	__stoi
	LD	BC,HL
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	P,L_672
; 2313	   {
; 2314	      printf("\n%s\n", object[exm].examine);
.LINE 2314

	LD	BC,(IX+-7)
	CALL	__stoi
	LD	BC,HL
	LD	HL,244
	CALL	__imuls
	LD	BC,_object
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+124
	LD	BC,L__673
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
; 2315	   }
; 2316	   else
.LINE 2316

	JMP	L_674
L_672:
; 2317	   {
; 2318	      printf("\nYou are not carrying - %s\n", game->list[1].cmd);
.LINE 2318

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,L__674
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
; 2319	   }
; 2320	}
L_674:
.LINE 2320

	LD	SP,IX
	POP	IX
	RET	


;**************************** _HandleRead ***************************
;Name                         Addr/Register   Size   Type
;_object                             IMPORT    244   variable
;_printf                             IMPORT  -----   function
;_strcmp                             IMPORT  -----   function
;obj                                  IX-11      2   variable
;cr                                    IX-9      2   variable
;exm                                   IX-7      2   variable
;invcount                              IX-5      2   variable
;i                                     IX-3      3   variable
;game                                  IX+6      3   parameter


; Stack Frame Size: 20 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "HandleRead",2320,"_HandleRead"
	SEGMENT STRSECT
L__619:
	DB	"chest"
	DB	0
L__621:
	DB	10
	DB	"%s"
	DB	10,0
L__622:
	DB	"skeleton"
	DB	0
L__624:
	DB	10
	DB	"%s"
	DB	10,0
L__625:
	DB	"beaver"
	DB	0
L__627:
	DB	10
	DB	"%s"
	DB	10,0
L__628:
	DB	"padlock"
	DB	0
L__630:
	DB	10
	DB	"%s"
	DB	10,0
L__631:
	DB	"door"
	DB	0
L__633:
	DB	10
	DB	"%s"
	DB	10,0
L__634:
	DB	"statue"
	DB	0
L__636:
	DB	10
	DB	"%s"
	DB	10,0
L__637:
	DB	"pillows"
	DB	0
L__639:
	DB	10
	DB	"%s"
	DB	10,0
L__640:
	DB	"grate"
	DB	0
L__642:
	DB	10
	DB	"%s"
	DB	10,0
L__643:
	DB	"rug"
	DB	0
L__645:
	DB	10
	DB	"%s"
	DB	10,0
L__646:
	DB	"bear"
	DB	0
L__648:
	DB	10
	DB	"%s"
	DB	10,0
L__649:
	DB	"slab"
	DB	0
L__651:
	DB	10
	DB	"%s"
	DB	10,0
L__652:
	DB	"book"
	DB	0
L__654:
	DB	10
	DB	"%s"
	DB	10,0
L__655:
	DB	"fissure"
	DB	0
L__657:
	DB	10
	DB	"%s"
	DB	10,0
L__658:
	DB	"rope"
	DB	0
L__660:
	DB	10
	DB	"%s"
	DB	10,0
L__661:
	DB	"basket"
	DB	0
L__663:
	DB	10
	DB	"%s"
	DB	10,0
L__664:
	DB	"lake"
	DB	0
L__666:
	DB	10
	DB	"%s"
	DB	10,0
L__667:
	DB	"man"
	DB	0
L__669:
	DB	10
	DB	"%s"
	DB	10,0
L__673:
	DB	10
	DB	"%s"
	DB	10,0
L__674:
	DB	10
	DB	"You are not carrying - %s"
	DB	10,0
	SEGMENT code
; 2321	
; 2322	
; 2323	/* HandleMultiCmd() - handle multi-word command
; 2324	 *
; 2325	 */
; 2326	void HandleMultiCmd(GAME_S_T *game)
; 2327	{
_HandleMultiCmd:
.DEFINE "_HandleMultiCmd"

.VALUE _HandleMultiCmd

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "HandleMultiCmd",2327,"_HandleMultiCmd"

.LINE 2327

.DEFINE "game"

.CLASS 65

.VALUE 6

.TAG "game_s_t"

.TYPE 40

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
; 2328	   if ( strcmp( game->list[0].cmd, "take" ) == 0 )
	LD	BC,L__676
	PUSH	BC
.LINE 2328

	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_688
; 2329	   {
; 2330	      HandleTake(game);
	LD	BC,(IX+6)
	PUSH	BC
.LINE 2330

	CALL	_HandleTake
	POP	BC
; 2331	   }
; 2332	   else if ( strcmp( game->list[0].cmd, "drop" ) == 0 )
.LINE 2332

	JMP	L_689
L_688:
	LD	BC,L__678
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_686
; 2333	   {
; 2334	      HandleDrop(game);
	LD	BC,(IX+6)
	PUSH	BC
.LINE 2334

	CALL	_HandleDrop
	POP	BC
; 2335	   }
; 2336	   else if ( strcmp( game->list[0].cmd, "wave" ) == 0 )
.LINE 2336

	JMP	L_689
L_686:
	LD	BC,L__680
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_684
; 2337	   {
; 2338	      HandleWave(game);
	LD	BC,(IX+6)
	PUSH	BC
.LINE 2338

	CALL	_HandleWave
	POP	BC
; 2339	   }
; 2340	   else if ( strcmp( game->list[0].cmd, "open" ) == 0 )
.LINE 2340

	JMP	L_689
L_684:
	LD	BC,L__682
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_682
; 2341	   {
; 2342	      HandleOpen(game);
	LD	BC,(IX+6)
	PUSH	BC
.LINE 2342

	CALL	_HandleOpen
	POP	BC
; 2343	   }
; 2344	   else if ( strcmp( game->list[0].cmd, "close" ) == 0 )
.LINE 2344

	JMP	L_689
L_682:
	LD	BC,L__684
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_680
; 2345	   {
; 2346	      HandleClose(game);
	LD	BC,(IX+6)
	PUSH	BC
.LINE 2346

	CALL	_HandleClose
	POP	BC
; 2347	   }
; 2348	   else if ( strcmp( game->list[0].cmd, "play" ) == 0 )
.LINE 2348

	JMP	L_689
L_680:
	LD	BC,L__686
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_678
; 2349	   {
; 2350	      HandlePlay(game);
	LD	BC,(IX+6)
	PUSH	BC
.LINE 2350

	CALL	_HandlePlay
	POP	BC
; 2351	   }
; 2352	   else if ( strcmp( game->list[0].cmd, "pick" ) == 0 )
.LINE 2352

	JMP	L_689
L_678:
	LD	BC,L__688
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_676
; 2353	   {
; 2354	      HandlePick(game);   }
	LD	BC,(IX+6)
	PUSH	BC
.LINE 2354

	CALL	_HandlePick
	POP	BC
; 2355	#if 0
; 2356	   else if ( strcmp( game->list[0].cmd, "feed" ) == 0 )
; 2357	   {
; 2358	      HandleFeed(game);
; 2359	   }
; 2360	   else if ( strcmp( game->list[0].cmd, "drink" ) == 0 )
; 2361	   {
; 2362	      HandleDrink(game);
; 2363	   }
; 2364	   else if ( strcmp( game->list[0].cmd, "eat" ) == 0 )
; 2365	   {
; 2366	      HandleEat(game);
; 2367	   }
; 2368	   else if ( strcmp( game->list[0].cmd, "kill" ) == 0 )
; 2369	   {
; 2370	      HandleKill(game);
; 2371	   }
; 2372	   else if ( strcmp( game->list[0].cmd, "wear" ) == 0 )
; 2373	   {
; 2374	      HandleWear(game);
; 2375	   }
; 2376	   else if ( strcmp( game->list[0].cmd, "move" ) == 0 )
; 2377	   {
; 2378	      HandleMove(game);
; 2379	   }
; 2380	   else if ( strcmp( game->list[0].cmd, "answer" ) == 0 )
; 2381	   {
; 2382	      HandleAnswer(game);
; 2383	   }
; 2384	   else if ( strcmp( game->list[0].cmd, "break" ) == 0 )
; 2385	   {
; 2386	      HandleBreak(game);
; 2387	   }
; 2388	   else if ( strcmp( game->list[0].cmd, "unlock" ) == 0 )
; 2389	   {
; 2390	      HandleUnlock(game);
; 2391	   }
; 2392	#ifdef DUNGEON_DEBUG
; 2393	   else if ( strcmp( game->list[0].cmd, "debug" ) == 0 )
; 2394	   {
; 2395	      HandleDebug(game);
; 2396	   }
; 2397	#endif
; 2398	   else if ( strcmp( game->list[0].cmd, "read" ) == 0
; 2399			|| strcmp( game->list[0].cmd, "examine" ) == 0
; 2400			|| strcmp( game->list[0].cmd, "x" ) == 0 )
; 2401	   {
; 2402	      HandleRead(game);
; 2403	   }
; 2404	   else if ( (strcmp( game->list[0].cmd, "bill" ) == 0
; 2405				&& strcmp( game->list[1].cmd, "gates" ) == 0) )
; 2406	   {
; 2407	      printf("\nLogic error 666 -- please reboot system.\n");
; 2408	   }
; 2409	   else if ( (strcmp( game->list[0].cmd, "adult" ) == 0
; 2410				&& strcmp( game->list[1].cmd, "enabled" ) == 0) )
; 2411	   {
; 2412	      printf("\nOkay.\n");
; 2413	      game->adult_enabled = TRUE;
; 2414	   }
; 2415	   else if ( (strcmp( game->list[0].cmd, "fuck" ) == 0)
; 2416			|| (strcmp( game->list[0].cmd, "bite" ) == 0
; 2417				&& strcmp( game->list[1].cmd, "me" ) == 0) )
; 2418	   {
; 2419	      if (game->adult_enabled) 
; 2420	         printf("\nAnd %s %s to you too!\n", game->list[0].cmd, game->list[1].cmd);
; 2421	      else
; 2422	      {
; 2423	         game->adult_count++;
; 2424	         if ( (game->adult_count % ATRG) == 0 )
; 2425	         {
; 2426	            printf("\nBoy, you really are obsessed!\n");
; 2427	         }
; 2428	         else
; 2429	         {
; 2430	            printf("\nI don't know how to - %s\n", game->list[0].cmd);
; 2431	         }
; 2432	      }
; 2433	   }
; 2434	   else if ( strcmp( game->list[0].cmd, "jesus" ) == 0
; 2435				&& strcmp( game->list[1].cmd, "christ" ) == 0 )
; 2436	   {
; 2437	      if (game->adult_enabled) 
; 2438	         printf("\nCursing will not help your situation.\n");
; 2439	      else
; 2440	      {
; 2441	         game->adult_count++;
; 2442	         if ( (game->adult_count % ATRG) == 0 )
; 2443	         {
; 2444	            printf("\nBoy, you really are obsessed!\n");
; 2445	         }
; 2446	         else
; 2447	         {
; 2448	            printf("\nI don't know how to - %s\n", game->list[0].cmd);
; 2449	         }
; 2450	      }
; 2451	   }
; 2452	#endif
; 2453	   else
.LINE 2453

	JMP	L_689
L_676:
; 2454	   {
; 2455	      printf("\nI don't know how to - %s %s\n", 
; 2456			game->list[0].cmd, game->list[1].cmd);
.LINE 2456

	LD	BC,(IX+6)
	LD	IY,357
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,(IX+6)
	LD	IY,311
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	BC,L__690
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
	POP	BC
; 2457	   }
; 2458	}
L_689:
.LINE 2458

	LD	SP,IX
	POP	IX
	RET	


;**************************** _HandleMultiCmd ***************************
;Name                         Addr/Register   Size   Type
;_printf                             IMPORT  -----   function
;_strcmp                             IMPORT  -----   function
;game                                  IX+6      3   parameter


; Stack Frame Size: 9 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "HandleMultiCmd",2458,"_HandleMultiCmd"
	SEGMENT STRSECT
L__676:
	DB	"take"
	DB	0
L__678:
	DB	"drop"
	DB	0
L__680:
	DB	"wave"
	DB	0
L__682:
	DB	"open"
	DB	0
L__684:
	DB	"close"
	DB	0
L__686:
	DB	"play"
	DB	0
L__688:
	DB	"pick"
	DB	0
L__690:
	DB	10
	DB	"I don't know how to - %s %s"
	DB	10,0
	XREF _ShowScore:ROM
	XREF _HaveObject:ROM
	XREF _DisplayTitle:ROM
	XREF _CheckLamp:ROM
	XREF _PlayerDied:ROM
	XREF _DescribeObject:ROM
	XREF _DescribeSpecial:ROM
	XREF _DescribeRoom:ROM
	XREF _magic:ROM
	XREF _special:ROM
	XREF _object:ROM
	XREF _map:ROM
	XREF _strcmp:ROM
	XREF _gets:ROM
	XREF _printf:ROM
	XREF __imuls:ROM
	XREF __irems:ROM
	XREF __case:ROM
	XREF __stoi:ROM
	XREF __bldiy:ROM
	XREF __sldix:ROM
	XREF __sldiy:ROM
	XREF __sstiy:ROM
	XDEF _HandleMultiCmd
	XDEF _HandleRead
	XDEF _HandleFeed
	XDEF _HandleUnlock
	XDEF _HandlePick
	XDEF _HandleMove
	XDEF _HandleWear
	XDEF _HandleKill
	XDEF _HandleBreak
	XDEF _HandleAnswer
	XDEF _HandleEat
	XDEF _HandleDrink
	XDEF _HandlePlay
	XDEF _HandleWave
	XDEF _HandleClose
	XDEF _HandleOpen
	XDEF _HandleDrop
	XDEF _HandleTake
	XDEF _HandleSingleCmd
	XDEF _HandleLetterCmd
	XDEF _HandleDirection
	XDEF _HandleSpecialDirection
	XDEF _HandleJump
	XDEF _HandleSwim
	XDEF _HandleExit
	XDEF _HandleEnter
	XDEF _HandleOff
	XDEF _HandleOn
	XDEF _HandleLook
	XDEF _HandleMagic
	XDEF _HandleNew
	XDEF _HandleSave
	XDEF _HandleLoad
	XDEF _HandleInventory
	XDEF _HandleHelp
	END
