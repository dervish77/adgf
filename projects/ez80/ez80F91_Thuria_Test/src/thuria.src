; ZiLOG eZ80 ANSI C Compiler Release 2.06
; -alias -debug -intsrc -nomodsect -optsize -localcse
; -peephole -globalopt -nosdiopt -bitfieldsize=24 -charsize=8
; -doublesize=32 -floatsize=32 -intsize=24 -longsize=32
; -nofastcall -noregvar -nostkck -nooptlink -swap 
	FILE	".\THURIA.C"
	.assume ADL=1
.DEBUG "C"
	SEGMENT code
.BEGREC "NONAME0",6
.DEFINE "quot"
.VALUE 0
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "rem"
.VALUE 3
.CLASS 8
.TYPE 4
.ENDEF
.ENDREC "NONAME0"
.BEGREC "NONAME1",8
.DEFINE "quot"
.VALUE 0
.CLASS 8
.TYPE 5
.ENDEF
.DEFINE "rem"
.VALUE 4
.CLASS 8
.TYPE 5
.ENDEF
.ENDREC "NONAME1"
.BEGREC "header",6
.DEFINE "s"
.VALUE 0
.CLASS 11
.TAG "NONAME2"
.TYPE 8
.ENDEF
.DEFINE "x"
.VALUE 0
.CLASS 11
.TYPE 2
.ENDEF
.ENDREC "header"
.BEGREC "NONAME2",6
.DEFINE "ptr"
.VALUE 0
.CLASS 8
.TAG "header"
.TYPE 40
.ENDEF
.DEFINE "size"
.VALUE 3
.CLASS 8
.TYPE 14
.ENDEF
.ENDREC "NONAME2"
.BEGREC "map_s_t",140
.DEFINE "roomnum"
.VALUE 0
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "roomname"
.VALUE 2
.CLASS 8
.DIM 120
.TYPE 98
.ENDEF
.DEFINE "beenhere"
.VALUE 122
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "inside"
.VALUE 123
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "n"
.VALUE 124
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "s"
.VALUE 126
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "e"
.VALUE 128
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "w"
.VALUE 130
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "d"
.VALUE 132
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "u"
.VALUE 134
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "special"
.VALUE 136
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "object"
.VALUE 138
.CLASS 8
.TYPE 3
.ENDEF
.ENDREC "map_s_t"
.BEGREC "object_s_t",244
.DEFINE "objnum"
.VALUE 0
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "score"
.VALUE 2
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "key"
.VALUE 4
.CLASS 8
.DIM 40
.TYPE 98
.ENDEF
.DEFINE "prep"
.VALUE 44
.CLASS 8
.DIM 40
.TYPE 98
.ENDEF
.DEFINE "name"
.VALUE 84
.CLASS 8
.DIM 40
.TYPE 98
.ENDEF
.DEFINE "examine"
.VALUE 124
.CLASS 8
.DIM 120
.TYPE 98
.ENDEF
.ENDREC "object_s_t"
.BEGREC "special_s_t",124
.DEFINE "spnum"
.VALUE 0
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "score"
.VALUE 2
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "phrase"
.VALUE 4
.CLASS 8
.DIM 120
.TYPE 98
.ENDEF
.ENDREC "special_s_t"
.BEGREC "magic_s_t",168
.DEFINE "mgnum"
.VALUE 0
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "score"
.VALUE 2
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "fromroom"
.VALUE 4
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "toroom"
.VALUE 6
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "word"
.VALUE 8
.CLASS 8
.DIM 40
.TYPE 98
.ENDEF
.DEFINE "phrase"
.VALUE 48
.CLASS 8
.DIM 120
.TYPE 98
.ENDEF
.ENDREC "magic_s_t"
.BEGREC "rank_s_t",162
.DEFINE "rnum"
.VALUE 0
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "title"
.VALUE 2
.CLASS 8
.DIM 40
.TYPE 98
.ENDEF
.DEFINE "phrase"
.VALUE 42
.CLASS 8
.DIM 120
.TYPE 98
.ENDEF
.ENDREC "rank_s_t"
.BEGREC "verb_s_t",44
.DEFINE "vnum"
.VALUE 0
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "word"
.VALUE 2
.CLASS 8
.DIM 40
.TYPE 98
.ENDEF
.DEFINE "type"
.VALUE 42
.CLASS 8
.TYPE 3
.ENDEF
.ENDREC "verb_s_t"
.BEGREC "room_s_t",124
.DEFINE "roomnum"
.VALUE 0
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "linenum"
.VALUE 2
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "roomline"
.VALUE 4
.CLASS 8
.DIM 120
.TYPE 98
.ENDEF
.ENDREC "room_s_t"
.BEGREC "intro_s_t",122
.DEFINE "linenum"
.VALUE 0
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "introline"
.VALUE 2
.CLASS 8
.DIM 120
.TYPE 98
.ENDEF
.ENDREC "intro_s_t"
.BEGREC "inv_s_t",22
.DEFINE "count"
.VALUE 0
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "list"
.VALUE 2
.CLASS 8
.DIM 10
.TYPE 99
.ENDEF
.ENDREC "inv_s_t"
.BEGREC "chest_s_t",52
.DEFINE "count"
.VALUE 0
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "list"
.VALUE 2
.CLASS 8
.DIM 25
.TYPE 99
.ENDEF
.ENDREC "chest_s_t"
.BEGREC "cmd_s_t",46
.DEFINE "type"
.VALUE 0
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "length"
.VALUE 3
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "cmd"
.VALUE 6
.CLASS 8
.DIM 40
.TYPE 98
.ENDEF
.ENDREC "cmd_s_t"
.BEGREC "game_s_t",857
.DEFINE "play_game"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "suppress_instructions"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "adult_enabled"
.VALUE 2
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "adult_count"
.VALUE 3
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "debug_enabled"
.VALUE 6
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "verbose"
.VALUE 7
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "have_lamp"
.VALUE 8
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "lamp_is_on"
.VALUE 9
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "current_room"
.VALUE 10
.CLASS 8
.TYPE 3
.ENDEF
.DEFINE "score"
.VALUE 12
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "health"
.VALUE 15
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "moves"
.VALUE 18
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "oil"
.VALUE 21
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "load_game"
.VALUE 24
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "save_game"
.VALUE 25
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "game_loaded"
.VALUE 26
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "game_saved"
.VALUE 27
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "load_file_name"
.VALUE 28
.CLASS 8
.DIM 40
.TYPE 98
.ENDEF
.DEFINE "save_file_name"
.VALUE 68
.CLASS 8
.DIM 40
.TYPE 98
.ENDEF
.DEFINE "inventory"
.VALUE 108
.CLASS 8
.TAG "inv_s_t"
.TYPE 8
.ENDEF
.DEFINE "chest"
.VALUE 130
.CLASS 8
.TAG "chest_s_t"
.TYPE 8
.ENDEF
.DEFINE "cmdstring"
.VALUE 182
.CLASS 8
.DIM 120
.TYPE 98
.ENDEF
.DEFINE "argcount"
.VALUE 302
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "list"
.VALUE 305
.CLASS 8
.DIM 12
.TAG "cmd_s_t"
.TYPE 104
.ENDEF
.ENDREC "game_s_t"
	SEGMENT BSS
_suppress_intro:
	DS	1
.DEFINE "suppress_intro"
.ALIAS "_suppress_intro"
.CLASS 83
.VALUE _suppress_intro
.TYPE 12
.ENDEF
;    1	/*****************************************************************************
;    2	 *
;    3	 *	Main source code for Dungeons of Thuria Game.
;    4	 *
;    5	 *	File:	main.c
;    6	 *
;    7	 *	Author: Brian Lingard
;    8	 *
;    9	 *	Usage:
;   10	 *		thuria [-h] [-n] [-s file.sav] 
;   11	 *
;   12	 *              -h            show help
;   13	 *              -n            suppress introduction
;   14	 *              -s file.save  load saved game
;   15	 *
;   16	 *	Date:	12/12/96
;   17	 *
;   18	 *	Revs:
;   19	 *	  0.4   04/05/98  added proper save, load, and new game functions
;   20	 *	  0.0 	12/12/96  originated
;   21	 *
;   22	 *****************************************************************************/
;   23	
;   24	
;   25	#include <stdio.h>
;   26	#include <stdlib.h>
;   27	#include <string.h>
;   28	
;   29	#ifndef MAIN_H
;   30	#include "main.h"
;   31	#endif
;   32	
;   33	
;   34	
;   35	
;   36	/*
;   37	 *  GLOBALS
;   38	 */
;   39	BOOLEAN_T suppress_intro;
	SEGMENT code
;   40	
;   41	extern INTRO_S_T intro[];
;   42	
;   43	extern void PlayGame(GAME_S_T *game);
;   44	
;   45	
;   46	
;   47	/* DisplayIntroduction() - show instructions
;   48	 *
;   49	 *
;   50	 */
;   51	void DisplayIntroduction(void)
;   52	{
_DisplayIntroduction:
.DEFINE "_DisplayIntroduction"

.VALUE _DisplayIntroduction

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "DisplayIntroduction",52,"_DisplayIntroduction"

.LINE 52

.DEFINE "i"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

;   53	   int i = 0;
.LINE 53

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
	PUSH	BC
	LD	BC,0
	LD	(IX+-3),BC
;   54	
;   55	   printf("\n");
	LD	BC,L__0
	PUSH	BC
.LINE 55

	CALL	_printf
	POP	BC
;   56	
;   57	   while( intro[i].linenum > -1 )
.LINE 57

	JMP	L_1
L_2:
;   58	   {
;   59	      printf("%s\n", intro[i++].introline);
.LINE 59

	LD	BC,(IX+-3)
	LD	(IX+-6),BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
	LD	BC,(IX+-6)
	LD	HL,122
	CALL	__imuls
	LD	BC,_intro
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+2
	LD	BC,L__1
	PUSH	BC
	CALL	_printf
	POP	BC
	POP	BC
;   60	   }
L_1:
.LINE 60

	LD	BC,(IX+-3)
	LD	HL,122
	CALL	__imuls
	LD	BC,_intro
	ADD	HL,BC
	LD	BC,(HL)
	CALL	__stoi
	LD	BC,HL
	LD	HL,16777215
	OR	A,A
	SBC	HL,BC
	JP	M,L_2
;   61	
;   62	   printf("\n");
	LD	BC,L__3
	PUSH	BC
.LINE 62

	CALL	_printf
	POP	BC
;   63	}
.LINE 63

	LD	SP,IX
	POP	IX
	RET	


;**************************** _DisplayIntroduction ***************************
;Name                         Addr/Register   Size   Type
;_intro                              IMPORT    122   variable
;_printf                             IMPORT  -----   function
;i                                     IX-3      3   variable


; Stack Frame Size: 12 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "DisplayIntroduction",63,"_DisplayIntroduction"
	SEGMENT STRSECT
L__0:
	DB	10,0
L__1:
	DB	"%s"
	DB	10,0
L__3:
	DB	10,0
	SEGMENT code
;   64	
;   65	
;   66	/* DisplayTitle() - show game titles and credits
;   67	 *
;   68	 *
;   69	 */
;   70	void DisplayTitle(void)
;   71	{
_DisplayTitle:
.DEFINE "_DisplayTitle"

.VALUE _DisplayTitle

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "DisplayTitle",71,"_DisplayTitle"

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;   72	   printf("\n");
	LD	BC,L__5
	PUSH	BC
.LINE 72

	CALL	_printf
	POP	BC
;   73	   printf("DUNGEONS of THURIA\n");
	LD	BC,L__6
	PUSH	BC
.LINE 73

	CALL	_printf
	POP	BC
;   74	   printf("Copyright 1998, by Brian S. Lingard.  All rights reserved.\n");
	LD	BC,L__7
	PUSH	BC
.LINE 74

	CALL	_printf
	POP	BC
;   75	   printf("Version %s  %s  Whirling Dervish Software.\n", 
;   76		VERSION, VERSIONDATE);
	LD	BC,L__8
	PUSH	BC
	LD	BC,L__9
	PUSH	BC
	LD	BC,L__10
	PUSH	BC
.LINE 76

	CALL	_printf
	POP	BC
	POP	BC
	POP	BC
;   77	   printf("\n");
	LD	BC,L__11
	PUSH	BC
.LINE 77

	CALL	_printf
	POP	BC
;   78	   printf("\n");
	LD	BC,L__12
	PUSH	BC
.LINE 78

	CALL	_printf
	POP	BC
;   79	}
.LINE 79

	LD	SP,IX
	POP	IX
	RET	


;**************************** _DisplayTitle ***************************
;Name                         Addr/Register   Size   Type
;_printf                             IMPORT  -----   function


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "DisplayTitle",79,"_DisplayTitle"
	SEGMENT STRSECT
L__5:
	DB	10,0
L__6:
	DB	"DUNGEONS of THURIA"
	DB	10,0
L__7:
	DB	"Copyright 1998, by Brian S. Lingard.  All rights reserved."
	DB	10,0
L__8:
	DB	"11/06/98"
	DB	0
L__9:
	DB	"1.1"
	DB	0
L__10:
	DB	"Version %s  %s  Whirling Dervish Software."
	DB	10,0
L__11:
	DB	10,0
L__12:
	DB	10,0
	SEGMENT code
;   80	
;   81	
;   82	/* LoadGame() - load saved game file
;   83	 *
;   84	 */
;   85	void LoadGame(GAME_S_T *game)
;   86	{
_LoadGame:
.DEFINE "_LoadGame"

.VALUE _LoadGame

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "LoadGame",86,"_LoadGame"

.LINE 86

.DEFINE "game"

.CLASS 65

.VALUE 6

.TAG "game_s_t"

.TYPE 40

.ENDEF

;   87	#if 0
;   88	   SHORT_BUFFER_T string;
;   89	   FILE *fp;
;   90	   int i, count, a, b, c, d;
;   91	
;   92	   fp = game->load_file_fp;
;   93	
;   94	   fscanf(fp, "%s\n", string);
;   95	   if ( strcmp(string, "thuria") == 0 )
;   96	   {
;   97	      fscanf(fp, "%d\n", &a); game->verbose = a;
;   98	      fscanf(fp, "%d\n", &a); game->have_lamp = a;
;   99	      fscanf(fp, "%d\n", &a); game->lamp_is_on = a;
;  100	      fscanf(fp, "%d\n", &a); game->current_room = a;
;  101	      fscanf(fp, "%d\n", &a); game->score = a;
;  102	      fscanf(fp, "%d\n", &a); game->health = a;
;  103	      fscanf(fp, "%d\n", &a); game->moves = a;
;  104	      fscanf(fp, "%d\n", &a); game->oil = a;
;  105	
;  106	      fscanf(fp, "%s %d\n", string, &a); game->inventory.count = a;
;  107	      if ( strcmp(string, "inv") == 0 )
;  108	      {
;  109	         for (i = 0; i < game->inventory.count; i++)
;  110	         {
;  111	            fscanf(fp, "%d\n", &a); game->inventory.list[i] = a;
;  112	         }
;  113	      }
;  114	
;  115	      fscanf(fp, "%s %d\n", string, &a); game->chest.count = a;
;  116	      if ( strcmp(string, "chest") == 0 )
;  117	      {
;  118	         for (i = 0; i < game->chest.count; i++)
;  119	         {
;  120	            fscanf(fp, "%d\n", &a); game->chest.list[i] = a;
;  121	         }
;  122	      }
;  123	   
;  124	      fscanf(fp, "%s %d\n", string, &count);
;  125	      if ( strcmp(string, "map") == 0 )
;  126	      {
;  127	         for (i = 0; i < count; i++)
;  128	         {
;  129	            fscanf(fp, "%d %d %d %d\n", &a, &b, &c, &d);
;  130	            map[i].beenhere = b;
;  131	            map[i].special = c;
;  132	            map[i].object = d;
;  133	         }
;  134	      }
;  135	   }
;  136	   else
;  137	   {
;  138	      printf("Unknown file type detected during load of %s\n",
;  139			game->load_file_name);
;  140	   }
;  141	#endif
;  142	}
.LINE 142

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LD	SP,IX
	POP	IX
	RET	


;**************************** _LoadGame ***************************
;Name                         Addr/Register   Size   Type
;game                                  IX+6      3   parameter


; Stack Frame Size: 9 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "LoadGame",142,"_LoadGame"
;  143	
;  144	
;  145	/* SaveGame() - save current game to file
;  146	 *
;  147	 */
;  148	void SaveGame(GAME_S_T *game)
;  149	{
_SaveGame:
.DEFINE "_SaveGame"

.VALUE _SaveGame

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "SaveGame",149,"_SaveGame"

.LINE 149

.DEFINE "game"

.CLASS 65

.VALUE 6

.TAG "game_s_t"

.TYPE 40

.ENDEF

;  150	#if 0
;  151	   FILE *fp;
;  152	   int i, count;
;  153	
;  154	   fp = game->save_file_fp;
;  155	
;  156	   fprintf(fp, "thuria\n");
;  157	   fprintf(fp, "%d\n", game->verbose );
;  158	   fprintf(fp, "%d\n", game->have_lamp );
;  159	   fprintf(fp, "%d\n", game->lamp_is_on );
;  160	   fprintf(fp, "%d\n", game->current_room );
;  161	   fprintf(fp, "%d\n", game->score );
;  162	   fprintf(fp, "%d\n", game->health );
;  163	   fprintf(fp, "%d\n", game->moves );
;  164	   fprintf(fp, "%d\n", game->oil );
;  165	
;  166	   fprintf(fp, "inv %d\n", game->inventory.count );
;  167	   for (i = 0; i < game->inventory.count; i++)
;  168	   {
;  169	      fprintf(fp, "%d\n", game->inventory.list[i] );
;  170	   }
;  171	
;  172	   fprintf(fp, "chest %d\n", game->chest.count );
;  173	   for (i = 0; i < game->chest.count; i++)
;  174	   {
;  175	      fprintf(fp, "%d\n", game->chest.list[i] );
;  176	   }
;  177	
;  178	   count = 0;
;  179	   while ( map[count].roomnum > -1 )
;  180	   {
;  181	      count++;
;  182	   }
;  183	
;  184	   fprintf(fp, "map %d\n", count);
;  185	   for (i = 0; i < count; i++)
;  186	   {
;  187	      fprintf(fp, "%d %d %d %d\n", 
;  188		map[i].roomnum, map[i].beenhere, map[i].special, map[i].object );
;  189	   }
;  190	#endif
;  191	}
.LINE 191

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LD	SP,IX
	POP	IX
	RET	


;**************************** _SaveGame ***************************
;Name                         Addr/Register   Size   Type
;game                                  IX+6      3   parameter


; Stack Frame Size: 9 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "SaveGame",191,"_SaveGame"
;  192	
;  193	
;  194	/* InitGame() - initialize current game 
;  195	 *
;  196	 */
;  197	void InitGame(GAME_S_T *game)
;  198	{
_InitGame:
.DEFINE "_InitGame"

.VALUE _InitGame

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "InitGame",198,"_InitGame"

.LINE 198

.DEFINE "game"

.CLASS 65

.VALUE 6

.TAG "game_s_t"

.TYPE 40

.ENDEF

.DEFINE "i"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

;  199	   int i;
;  200	
;  201	   game->play_game = TRUE;
.LINE 201

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
	LD	IY,(IX+6)
	LD	A,1
	LD	(IY),A
;  202	   game->suppress_instructions = FALSE;
.LINE 202

	LD	IY,(IX+6)
	XOR	A,A
	LD	(IY+1),A
;  203	   game->adult_enabled = FALSE;
.LINE 203

	LD	IY,(IX+6)
	XOR	A,A
	LD	(IY+2),A
;  204	   game->adult_count = 0;
.LINE 204

	LD	IY,(IX+6)
	LD	BC,0
	LD	(IY+3),BC
;  205	   game->debug_enabled = FALSE;
.LINE 205

	LD	IY,(IX+6)
	XOR	A,A
	LD	(IY+6),A
;  206	   game->verbose = TRUE;
.LINE 206

	LD	IY,(IX+6)
	LD	A,1
	LD	(IY+7),A
;  207	   game->have_lamp = TRUE;
.LINE 207

	LD	IY,(IX+6)
	LD	(IY+8),A
;  208	   game->lamp_is_on = FALSE;
.LINE 208

	LD	IY,(IX+6)
	XOR	A,A
	LD	(IY+9),A
;  209	
;  210	   game->load_game = FALSE;
.LINE 210

	LD	IY,(IX+6)
	XOR	A,A
	LD	(IY+24),A
;  211	   game->save_game = FALSE;
.LINE 211

	LD	IY,(IX+6)
	XOR	A,A
	LD	(IY+25),A
;  212	   game->game_loaded = FALSE;
.LINE 212

	LD	IY,(IX+6)
	XOR	A,A
	LD	(IY+26),A
;  213	   game->game_saved = FALSE;
.LINE 213

	LD	IY,(IX+6)
	XOR	A,A
	LD	(IY+27),A
;  214	   game->load_file_name[0] = '\0';
.LINE 214

	LD	IY,(IX+6)
	XOR	A,A
	LD	(IY+28),A
;  215	   game->save_file_name[0] = '\0';
.LINE 215

	LD	IY,(IX+6)
	XOR	A,A
	LD	(IY+68),A
;  216	#if 0
;  217	   game->load_file_fp = (FILE *) NULL;
;  218	   game->save_file_fp = (FILE *) NULL;
;  219	#endif
;  220	   game->current_room = RM_START;
.LINE 220

	LD	IY,(IX+6)
	LD	A,13
	LD	(IY+10),A
	XOR	A,A
	LD	(IY+11),A
;  221	
;  222	   game->inventory.count = 1;
.LINE 222

	LD	IY,(IX+6)
	LD	A,1
	LD	(IY+108),A
	XOR	A,A
	LD	(IY+109),A
;  223	   game->inventory.list[0] = OBJ_LAMP;
.LINE 223

	LD	IY,(IX+6)
	XOR	A,A
	LD	(IY+110),A
	XOR	A,A
	LD	(IY+111),A
	LD	BC,1
	LD	(IX+-3),BC
;  224	   for (i = 1; i < MAX_INV_OBJS; i++)
.LINE 224

	JMP	L_11
L_9:
;  225	   {
;  226	      game->inventory.list[i] = OBJ_NULL;
	LD	HL,(IX+-3)
	ADD	HL,HL
	LD	BC,HL
.LINE 226

	LD	DE,(IX+6)
	LD	HL,110
	ADD	HL,DE
	ADD	HL,BC
	LD	(HL),255
	INC	HL
	LD	(HL),255
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  227	   }
L_11:
.LINE 227

	LD	BC,10
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L_9
;  228	
;  229	   game->chest.count = 0;
.LINE 229

	LD	IY,(IX+6)
	LD.LIS	HL,0
	LD	BC,130
	CALL	__sstiy
	LD	BC,0
	LD	(IX+-3),BC
;  230	   for (i = 0; i < MAX_CHEST_OBJS; i++)
.LINE 230

	JMP	L_16
L_14:
;  231	   {
;  232	      game->chest.list[i] = OBJ_NULL;
	LD	HL,(IX+-3)
	ADD	HL,HL
	LD	BC,HL
.LINE 232

	LD	DE,(IX+6)
	LD	HL,132
	ADD	HL,DE
	ADD	HL,BC
	LD	(HL),255
	INC	HL
	LD	(HL),255
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  233	   }
L_16:
.LINE 233

	LD	BC,25
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L_14
;  234	
;  235	   game->score = 0;
.LINE 235

	LD	IY,(IX+6)
	LD	BC,0
	LD	(IY+12),BC
;  236	   game->health = MAX_HEALTH;
.LINE 236

	LD	IY,(IX+6)
	LD	BC,100
	LD	(IY+15),BC
;  237	   game->moves = 0;
.LINE 237

	LD	IY,(IX+6)
	LD	BC,0
	LD	(IY+18),BC
;  238	   game->oil = MAX_OIL;
.LINE 238

	LD	IY,(IX+6)
	LD	BC,300
	LD	(IY+21),BC
;  239	   game->cmdstring[0] = '\0';
.LINE 239

	LD	IY,(IX+6)
	XOR	A,A
	LD	BC,182
	CALL	__bstiy
;  240	
;  241	   i = 0;
.LINE 241

	LD	BC,0
	LD	(IX+-3),BC
;  242	   while ( map[i].roomnum > RM_NULL )
.LINE 242

	JMP	L_19
L_20:
;  243	   {
;  244	      map[i].beenhere = FALSE;
.LINE 244

	LD	BC,(IX+-3)
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	B,0
	LD	IY,HL
	LD	(IY+122),B
;  245	      i++;
.LINE 245

	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  246	   }
L_19:
.LINE 246

	LD	BC,(IX+-3)
	LD	HL,140
	CALL	__imuls
	LD	BC,_map
	ADD	HL,BC
	LD	BC,(HL)
	CALL	__stoi
	LD	BC,HL
	LD	HL,16777215
	OR	A,A
	SBC	HL,BC
	JP	M,L_20
;  247	#if 0
;  248	   strcpy( game->save_file_name, "init.sav" );
;  249	   game->save_file_fp = fopen(game->save_file_name, "w");
;  250	
;  251	   if (game->save_file_fp == (FILE *)NULL)
;  252	   {
;  253	      printf("Couldn't open %s as output\n", game->save_file_name);
;  254	   }
;  255	   else
;  256	   {
;  257	      SaveGame( game );
;  258	      fclose( game->save_file_fp );
;  259	   }
;  260	#endif
;  261	}
.LINE 261

	LD	SP,IX
	POP	IX
	RET	


;**************************** _InitGame ***************************
;Name                         Addr/Register   Size   Type
;_map                                IMPORT    140   variable
;i                                     IX-3      3   variable
;game                                  IX+6      3   parameter


; Stack Frame Size: 12 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "InitGame",261,"_InitGame"
;  262	
;  263	
;  264	/* CloseAll() - close all open files 
;  265	 *
;  266	 */
;  267	void CloseAll(GAME_S_T *game)
;  268	{
_CloseAll:
.DEFINE "_CloseAll"

.VALUE _CloseAll

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "CloseAll",268,"_CloseAll"

.LINE 268

.DEFINE "game"

.CLASS 65

.VALUE 6

.TAG "game_s_t"

.TYPE 40

.ENDEF

;  269	
;  270	}
.LINE 270

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LD	SP,IX
	POP	IX
	RET	


;**************************** _CloseAll ***************************
;Name                         Addr/Register   Size   Type
;game                                  IX+6      3   parameter


; Stack Frame Size: 9 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "CloseAll",270,"_CloseAll"
	XREF _intro:ROM
	XREF _map:ROM
	XREF _printf:ROM
	XREF __imuls:ROM
	XREF __stoi:ROM
	XREF __bstiy:ROM
	XREF __sstiy:ROM
	XDEF _CloseAll
	XDEF _InitGame
	XDEF _SaveGame
	XDEF _LoadGame
	XDEF _DisplayTitle
	XDEF _DisplayIntroduction
	XDEF _suppress_intro
	END
